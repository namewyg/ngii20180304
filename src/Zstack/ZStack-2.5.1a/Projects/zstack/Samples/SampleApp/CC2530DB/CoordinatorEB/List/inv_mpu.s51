///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        03/Jul/2019  09:45:18 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\Source\MPU6050 /
//                          \eMPL\inv_mpu.c                                   /
//    Command line       =  -f H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5 /
//                          .1a\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\Tools\CC2530DB\f8wCoord.cfg (-DCPU32MHZ    /
//                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR /
//                          UE -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8     /
//                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)   /
//                          -f H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5 /
//                          .1a\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO  /
//                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 H:\项目\2019.5\旺旺（lwk47 /
//                          4153686）\ZStack-2.5.1a\Projects\zstack\Samples\S /
//                          ampleApp\Source\MPU6050\eMPL\inv_mpu.c -D         /
//                          ZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D           /
//                          xMT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC           /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\Coord /
//                          inatorEB\List\ -lA H:\项目\2019.5\旺旺（lwk474153 /
//                          686）\ZStack-2.5.1a\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\CoordinatorEB\List\                 /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\Coord /
//                          inatorEB\Obj\ -e --no_code_motion --debug         /
//                          --core=plain --dptr=16,1 --data_model=large       /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\ -I   /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\So /
//                          urce\ -I H:\项目\2019.5\旺旺（lwk474153686）\ZSta /
//                          ck-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 /
//                          0DB\..\Source\MPU6050\ -I                         /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\So /
//                          urce\MPU6050\eMPL\ -I H:\项目\2019.5\旺旺（lwk474 /
//                          153686）\ZStack-2.5.1a\Projects\zstack\Samples\Sa /
//                          mpleApp\CC2530DB\..\..\..\ZMain\TI2530DB\ -I      /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\hal\include\ -I              /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\hal\target\CC2530EB\ -I      /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\mac\include\ -I              /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\mac\high_level\ -I           /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\mac\low_level\srf04\ -I      /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\mac\low_level\srf04\single_c /
//                          hip\ -I H:\项目\2019.5\旺旺（lwk474153686）\ZStac /
//                          k-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530 /
//                          DB\..\..\..\..\..\Components\mt\ -I               /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\osal\include\ -I             /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\services\saddr\ -I           /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\services\sdata\ -I           /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\stack\af\ -I                 /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\stack\nwk\ -I                /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\stack\sapi\ -I               /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\stack\sec\ -I                /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\stack\sys\ -I                /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\stack\zdo\ -I                /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\zmac\ -I                     /
//                          H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\Components\zmac\f8w\ -Ohz               /
//    List file          =  H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\Coord /
//                          inatorEB\List\inv_mpu.s51                         /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME inv_mpu

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FLT_ADD
        EXTERN ?FLT_DIV
        EXTERN ?FLT_EQ
        EXTERN ?FLT_GE
        EXTERN ?FLT_LT
        EXTERN ?FLT_MUL
        EXTERN ?FLT_SUB
        EXTERN ?FLT_TO_L
        EXTERN ?L_ADD_TO_X
        EXTERN ?L_DIV_MOD
        EXTERN ?L_MOV_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?L_MUL
        EXTERN ?L_SHL
        EXTERN ?L_SUB_X
        EXTERN ?L_TO_FLT
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK_I_FOUR
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?SL_GT_X
        EXTERN ?SS_SHR
        EXTERN ?S_DIV_MOD
        EXTERN ?S_SHL
        EXTERN ?UL_DIV_MOD
        EXTERN ?UL_SHR
        EXTERN ?UL_TO_FLT
        EXTERN ?US_DIV_MOD
        EXTERN ?US_SHR
        EXTERN ?US_SWITCH_SPARSE
        EXTERN ?V0
        EXTERN ?XLOAD_R2345
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTORE_R2345
        EXTERN __INIT_XDATA_I

        FUNCTION ??accel_self_test?relay,0203H
        FUNCTION ??get_accel_prod_shift?relay,0203H
        FUNCTION ??get_st_biases?relay,0203H
        FUNCTION ??gyro_self_test?relay,0203H
        PUBLIC ??inv_orientation_matrix_to_scalar?relay
        FUNCTION ??inv_orientation_matrix_to_scalar?relay,0203H
        PUBLIC ??inv_row_2_scale?relay
        FUNCTION ??inv_row_2_scale?relay,0203H
        PUBLIC ??mget_ms?relay
        FUNCTION ??mget_ms?relay,0203H
        PUBLIC ??mpu_configure_fifo?relay
        FUNCTION ??mpu_configure_fifo?relay,0203H
        PUBLIC ??mpu_dmp_get_data?relay
        FUNCTION ??mpu_dmp_get_data?relay,0203H
        PUBLIC ??mpu_dmp_init?relay
        FUNCTION ??mpu_dmp_init?relay,0203H
        PUBLIC ??mpu_get_accel_fsr?relay
        FUNCTION ??mpu_get_accel_fsr?relay,0203H
        PUBLIC ??mpu_get_accel_reg?relay
        FUNCTION ??mpu_get_accel_reg?relay,0203H
        PUBLIC ??mpu_get_accel_sens?relay
        FUNCTION ??mpu_get_accel_sens?relay,0203H
        PUBLIC ??mpu_get_compass_fsr?relay
        FUNCTION ??mpu_get_compass_fsr?relay,0203H
        PUBLIC ??mpu_get_compass_reg?relay
        FUNCTION ??mpu_get_compass_reg?relay,0203H
        PUBLIC ??mpu_get_compass_sample_rate?relay
        FUNCTION ??mpu_get_compass_sample_rate?relay,0203H
        PUBLIC ??mpu_get_dmp_state?relay
        FUNCTION ??mpu_get_dmp_state?relay,0203H
        PUBLIC ??mpu_get_fifo_config?relay
        FUNCTION ??mpu_get_fifo_config?relay,0203H
        PUBLIC ??mpu_get_gyro_fsr?relay
        FUNCTION ??mpu_get_gyro_fsr?relay,0203H
        PUBLIC ??mpu_get_gyro_reg?relay
        FUNCTION ??mpu_get_gyro_reg?relay,0203H
        PUBLIC ??mpu_get_gyro_sens?relay
        FUNCTION ??mpu_get_gyro_sens?relay,0203H
        PUBLIC ??mpu_get_int_status?relay
        FUNCTION ??mpu_get_int_status?relay,0203H
        PUBLIC ??mpu_get_lpf?relay
        FUNCTION ??mpu_get_lpf?relay,0203H
        PUBLIC ??mpu_get_power_state?relay
        FUNCTION ??mpu_get_power_state?relay,0203H
        PUBLIC ??mpu_get_sample_rate?relay
        FUNCTION ??mpu_get_sample_rate?relay,0203H
        PUBLIC ??mpu_get_temperature?relay
        FUNCTION ??mpu_get_temperature?relay,0203H
        PUBLIC ??mpu_init?relay
        FUNCTION ??mpu_init?relay,0203H
        PUBLIC ??mpu_load_firmware?relay
        FUNCTION ??mpu_load_firmware?relay,0203H
        PUBLIC ??mpu_lp_accel_mode?relay
        FUNCTION ??mpu_lp_accel_mode?relay,0203H
        PUBLIC ??mpu_lp_motion_interrupt?relay
        FUNCTION ??mpu_lp_motion_interrupt?relay,0203H
        PUBLIC ??mpu_read_fifo?relay
        FUNCTION ??mpu_read_fifo?relay,0203H
        PUBLIC ??mpu_read_fifo_stream?relay
        FUNCTION ??mpu_read_fifo_stream?relay,0203H
        PUBLIC ??mpu_read_mem?relay
        FUNCTION ??mpu_read_mem?relay,0203H
        PUBLIC ??mpu_read_reg?relay
        FUNCTION ??mpu_read_reg?relay,0203H
        PUBLIC ??mpu_reg_dump?relay
        FUNCTION ??mpu_reg_dump?relay,0203H
        PUBLIC ??mpu_reset_fifo?relay
        FUNCTION ??mpu_reset_fifo?relay,0203H
        PUBLIC ??mpu_run_self_test?relay
        FUNCTION ??mpu_run_self_test?relay,0203H
        PUBLIC ??mpu_set_accel_bias?relay
        FUNCTION ??mpu_set_accel_bias?relay,0203H
        PUBLIC ??mpu_set_accel_fsr?relay
        FUNCTION ??mpu_set_accel_fsr?relay,0203H
        PUBLIC ??mpu_set_bypass?relay
        FUNCTION ??mpu_set_bypass?relay,0203H
        PUBLIC ??mpu_set_compass_sample_rate?relay
        FUNCTION ??mpu_set_compass_sample_rate?relay,0203H
        PUBLIC ??mpu_set_dmp_state?relay
        FUNCTION ??mpu_set_dmp_state?relay,0203H
        PUBLIC ??mpu_set_gyro_fsr?relay
        FUNCTION ??mpu_set_gyro_fsr?relay,0203H
        PUBLIC ??mpu_set_int_latched?relay
        FUNCTION ??mpu_set_int_latched?relay,0203H
        PUBLIC ??mpu_set_int_level?relay
        FUNCTION ??mpu_set_int_level?relay,0203H
        PUBLIC ??mpu_set_lpf?relay
        FUNCTION ??mpu_set_lpf?relay,0203H
        PUBLIC ??mpu_set_sample_rate?relay
        FUNCTION ??mpu_set_sample_rate?relay,0203H
        PUBLIC ??mpu_set_sensors?relay
        FUNCTION ??mpu_set_sensors?relay,0203H
        PUBLIC ??mpu_write_mem?relay
        FUNCTION ??mpu_write_mem?relay,0203H
        PUBLIC ??run_self_test?relay
        FUNCTION ??run_self_test?relay,0203H
        FUNCTION ??set_int_enable?relay,0203H
        PUBLIC ??setup_compass?relay
        FUNCTION ??setup_compass?relay,0203H
        PUBWEAK __Constant_0
        PUBWEAK __Constant_1
        PUBWEAK __Constant_10000
        PUBWEAK __Constant_30800000
        PUBWEAK __Constant_37800000
        PUBWEAK __Constant_3e99999a
        PUBWEAK __Constant_3eae147b
        PUBWEAK __Constant_3f733334
        PUBWEAK __Constant_3f800000
        PUBWEAK __Constant_3f845a1d
        PUBWEAK __Constant_3f85e354
        PUBWEAK __Constant_40000000
        PUBWEAK __Constant_41200000
        PUBWEAK __Constant_41833333
        PUBWEAK __Constant_41c80000
        PUBWEAK __Constant_42033333
        PUBWEAK __Constant_420c0000
        PUBWEAK __Constant_42653333
        PUBWEAK __Constant_42830000
        PUBWEAK __Constant_42d20001
        PUBWEAK __Constant_43030000
        PUBWEAK __Constant_47800000
        PUBWEAK __Constant_83
        PUBWEAK __Constant_bf800000
        PUBWEAK __Constant_c0000000
        PUBWEAK __Constant_ffff0000
        FUNCTION accel_self_test,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 38, STACK
        FUNCTION get_accel_prod_shift,021203H
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        FUNCTION get_st_biases,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 47, STACK
        FUNCTION gyro_self_test,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 29, STACK
        PUBLIC hw
        PUBLIC inv_orientation_matrix_to_scalar
        FUNCTION inv_orientation_matrix_to_scalar,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 14, STACK
        PUBLIC inv_row_2_scale
        FUNCTION inv_row_2_scale,0203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mget_ms
        FUNCTION mget_ms,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC mpu_configure_fifo
        FUNCTION mpu_configure_fifo,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC mpu_dmp_get_data
        FUNCTION mpu_dmp_get_data,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 4, STACK
        LOCFRAME XSTACK, 207, STACK
        PUBLIC mpu_dmp_init
        FUNCTION mpu_dmp_init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC mpu_get_accel_fsr
        FUNCTION mpu_get_accel_fsr,0203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 3, STACK
        PUBLIC mpu_get_accel_reg
        FUNCTION mpu_get_accel_reg,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        PUBLIC mpu_get_accel_sens
        FUNCTION mpu_get_accel_sens,0203H
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_get_compass_fsr
        FUNCTION mpu_get_compass_fsr,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC mpu_get_compass_reg
        FUNCTION mpu_get_compass_reg,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC mpu_get_compass_sample_rate
        FUNCTION mpu_get_compass_sample_rate,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_get_dmp_state
        FUNCTION mpu_get_dmp_state,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 3, STACK
        PUBLIC mpu_get_fifo_config
        FUNCTION mpu_get_fifo_config,0203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 3, STACK
        PUBLIC mpu_get_gyro_fsr
        FUNCTION mpu_get_gyro_fsr,0203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_get_gyro_reg
        FUNCTION mpu_get_gyro_reg,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        PUBLIC mpu_get_gyro_sens
        FUNCTION mpu_get_gyro_sens,0203H
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC mpu_get_int_status
        FUNCTION mpu_get_int_status,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        PUBLIC mpu_get_lpf
        FUNCTION mpu_get_lpf,0203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_get_power_state
        FUNCTION mpu_get_power_state,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_get_sample_rate
        FUNCTION mpu_get_sample_rate,0203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_get_temperature
        FUNCTION mpu_get_temperature,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC mpu_init
        FUNCTION mpu_init,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 18, STACK
        PUBLIC mpu_load_firmware
        FUNCTION mpu_load_firmware,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 40, STACK
        PUBLIC mpu_lp_accel_mode
        FUNCTION mpu_lp_accel_mode,021203H
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 11, STACK
        PUBLIC mpu_lp_motion_interrupt
        FUNCTION mpu_lp_motion_interrupt,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC mpu_read_fifo
        FUNCTION mpu_read_fifo,021203H
        ARGFRAME XSTACK, 6, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 34, STACK
        PUBLIC mpu_read_fifo_stream
        FUNCTION mpu_read_fifo_stream,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC mpu_read_mem
        FUNCTION mpu_read_mem,021203H
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC mpu_read_reg
        FUNCTION mpu_read_reg,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC mpu_reg_dump
        FUNCTION mpu_reg_dump,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        PUBLIC mpu_reset_fifo
        FUNCTION mpu_reset_fifo,021203H
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 1, STACK
        PUBLIC mpu_run_self_test
        FUNCTION mpu_run_self_test,021203H
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 48, STACK
        PUBLIC mpu_set_accel_bias
        FUNCTION mpu_set_accel_bias,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 40, STACK
        PUBLIC mpu_set_accel_fsr
        FUNCTION mpu_set_accel_fsr,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC mpu_set_bypass
        FUNCTION mpu_set_bypass,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC mpu_set_compass_sample_rate
        FUNCTION mpu_set_compass_sample_rate,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC mpu_set_dmp_state
        FUNCTION mpu_set_dmp_state,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC mpu_set_gyro_fsr
        FUNCTION mpu_set_gyro_fsr,0a1203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 11, STACK
        PUBLIC mpu_set_int_latched
        FUNCTION mpu_set_int_latched,021203H
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC mpu_set_int_level
        FUNCTION mpu_set_int_level,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_set_lpf
        FUNCTION mpu_set_lpf,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 1, STACK
        PUBLIC mpu_set_sample_rate
        FUNCTION mpu_set_sample_rate,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC mpu_set_sensors
        FUNCTION mpu_set_sensors,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC mpu_write_mem
        FUNCTION mpu_write_mem,021203H
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC reg
        PUBLIC run_self_test
        FUNCTION run_self_test,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        FUNCTION set_int_enable,021203H
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC setup_compass
        FUNCTION setup_compass,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC test
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
MPU_Write_Len       SYMBOL "MPU_Write_Len"
printf              SYMBOL "printf"
MPU_Read_Len        SYMBOL "MPU_Read_Len"
delay_ms            SYMBOL "delay_ms"
memset              SYMBOL "memset"
labs                SYMBOL "labs"
fabsf               SYMBOL "fabsf"
memcmp              SYMBOL "memcmp"
dmp_set_gyro_bias   SYMBOL "dmp_set_gyro_bias"
dmp_set_accel_bias  SYMBOL "dmp_set_accel_bias"
MPU_IIC_Init        SYMBOL "MPU_IIC_Init"
dmp_load_motion_driver_firmware SYMBOL "dmp_load_motion_driver_firmware"
dmp_set_orientation SYMBOL "dmp_set_orientation"
dmp_enable_feature  SYMBOL "dmp_enable_feature"
dmp_set_fifo_rate   SYMBOL "dmp_set_fifo_rate"
dmp_read_fifo       SYMBOL "dmp_read_fifo"
asin                SYMBOL "asin"
atan2               SYMBOL "atan2"
sprintf             SYMBOL "sprintf"
osal_strlen         SYMBOL "osal_strlen"
HalUARTWrite        SYMBOL "HalUARTWrite"
??HalUARTWrite?relay SYMBOL "?relay", HalUARTWrite
??MPU_IIC_Init?relay SYMBOL "?relay", MPU_IIC_Init
??MPU_Read_Len?relay SYMBOL "?relay", MPU_Read_Len
??MPU_Write_Len?relay SYMBOL "?relay", MPU_Write_Len
??asin?relay        SYMBOL "?relay", asin
??atan2?relay       SYMBOL "?relay", atan2
??delay_ms?relay    SYMBOL "?relay", delay_ms
??dmp_enable_feature?relay SYMBOL "?relay", dmp_enable_feature
??dmp_load_motion_driver_firmware?relay SYMBOL "?relay", dmp_load_motion_driver_firmware
??dmp_read_fifo?relay SYMBOL "?relay", dmp_read_fifo
??dmp_set_accel_bias?relay SYMBOL "?relay", dmp_set_accel_bias
??dmp_set_fifo_rate?relay SYMBOL "?relay", dmp_set_fifo_rate
??dmp_set_gyro_bias?relay SYMBOL "?relay", dmp_set_gyro_bias
??dmp_set_orientation?relay SYMBOL "?relay", dmp_set_orientation
??fabsf?relay       SYMBOL "?relay", fabsf
??labs?relay        SYMBOL "?relay", labs
??memcmp?relay      SYMBOL "?relay", memcmp
??memset?relay      SYMBOL "?relay", memset
??osal_strlen?relay SYMBOL "?relay", osal_strlen
??printf?relay      SYMBOL "?relay", printf
??sprintf?relay     SYMBOL "?relay", sprintf
inv_orientation_matrix_to_scalar SYMBOL "inv_orientation_matrix_to_scalar"
??inv_orientation_matrix_to_scalar?relay SYMBOL "?relay", inv_orientation_matrix_to_scalar
inv_row_2_scale     SYMBOL "inv_row_2_scale"
??inv_row_2_scale?relay SYMBOL "?relay", inv_row_2_scale
mget_ms             SYMBOL "mget_ms"
??mget_ms?relay     SYMBOL "?relay", mget_ms
mpu_configure_fifo  SYMBOL "mpu_configure_fifo"
??mpu_configure_fifo?relay SYMBOL "?relay", mpu_configure_fifo
mpu_dmp_get_data    SYMBOL "mpu_dmp_get_data"
??mpu_dmp_get_data?relay SYMBOL "?relay", mpu_dmp_get_data
mpu_dmp_init        SYMBOL "mpu_dmp_init"
??mpu_dmp_init?relay SYMBOL "?relay", mpu_dmp_init
mpu_get_accel_fsr   SYMBOL "mpu_get_accel_fsr"
??mpu_get_accel_fsr?relay SYMBOL "?relay", mpu_get_accel_fsr
mpu_get_accel_reg   SYMBOL "mpu_get_accel_reg"
??mpu_get_accel_reg?relay SYMBOL "?relay", mpu_get_accel_reg
mpu_get_accel_sens  SYMBOL "mpu_get_accel_sens"
??mpu_get_accel_sens?relay SYMBOL "?relay", mpu_get_accel_sens
mpu_get_compass_fsr SYMBOL "mpu_get_compass_fsr"
??mpu_get_compass_fsr?relay SYMBOL "?relay", mpu_get_compass_fsr
mpu_get_compass_reg SYMBOL "mpu_get_compass_reg"
??mpu_get_compass_reg?relay SYMBOL "?relay", mpu_get_compass_reg
mpu_get_compass_sample_rate SYMBOL "mpu_get_compass_sample_rate"
??mpu_get_compass_sample_rate?relay SYMBOL "?relay", mpu_get_compass_sample_rate
mpu_get_dmp_state   SYMBOL "mpu_get_dmp_state"
??mpu_get_dmp_state?relay SYMBOL "?relay", mpu_get_dmp_state
mpu_get_fifo_config SYMBOL "mpu_get_fifo_config"
??mpu_get_fifo_config?relay SYMBOL "?relay", mpu_get_fifo_config
mpu_get_gyro_fsr    SYMBOL "mpu_get_gyro_fsr"
??mpu_get_gyro_fsr?relay SYMBOL "?relay", mpu_get_gyro_fsr
mpu_get_gyro_reg    SYMBOL "mpu_get_gyro_reg"
??mpu_get_gyro_reg?relay SYMBOL "?relay", mpu_get_gyro_reg
mpu_get_gyro_sens   SYMBOL "mpu_get_gyro_sens"
??mpu_get_gyro_sens?relay SYMBOL "?relay", mpu_get_gyro_sens
mpu_get_int_status  SYMBOL "mpu_get_int_status"
??mpu_get_int_status?relay SYMBOL "?relay", mpu_get_int_status
mpu_get_lpf         SYMBOL "mpu_get_lpf"
??mpu_get_lpf?relay SYMBOL "?relay", mpu_get_lpf
mpu_get_power_state SYMBOL "mpu_get_power_state"
??mpu_get_power_state?relay SYMBOL "?relay", mpu_get_power_state
mpu_get_sample_rate SYMBOL "mpu_get_sample_rate"
??mpu_get_sample_rate?relay SYMBOL "?relay", mpu_get_sample_rate
mpu_get_temperature SYMBOL "mpu_get_temperature"
??mpu_get_temperature?relay SYMBOL "?relay", mpu_get_temperature
mpu_init            SYMBOL "mpu_init"
??mpu_init?relay    SYMBOL "?relay", mpu_init
mpu_load_firmware   SYMBOL "mpu_load_firmware"
??mpu_load_firmware?relay SYMBOL "?relay", mpu_load_firmware
mpu_lp_accel_mode   SYMBOL "mpu_lp_accel_mode"
??mpu_lp_accel_mode?relay SYMBOL "?relay", mpu_lp_accel_mode
mpu_lp_motion_interrupt SYMBOL "mpu_lp_motion_interrupt"
??mpu_lp_motion_interrupt?relay SYMBOL "?relay", mpu_lp_motion_interrupt
mpu_read_fifo       SYMBOL "mpu_read_fifo"
??mpu_read_fifo?relay SYMBOL "?relay", mpu_read_fifo
mpu_read_fifo_stream SYMBOL "mpu_read_fifo_stream"
??mpu_read_fifo_stream?relay SYMBOL "?relay", mpu_read_fifo_stream
mpu_read_mem        SYMBOL "mpu_read_mem"
??mpu_read_mem?relay SYMBOL "?relay", mpu_read_mem
mpu_read_reg        SYMBOL "mpu_read_reg"
??mpu_read_reg?relay SYMBOL "?relay", mpu_read_reg
mpu_reg_dump        SYMBOL "mpu_reg_dump"
??mpu_reg_dump?relay SYMBOL "?relay", mpu_reg_dump
mpu_reset_fifo      SYMBOL "mpu_reset_fifo"
??mpu_reset_fifo?relay SYMBOL "?relay", mpu_reset_fifo
mpu_run_self_test   SYMBOL "mpu_run_self_test"
??mpu_run_self_test?relay SYMBOL "?relay", mpu_run_self_test
mpu_set_accel_bias  SYMBOL "mpu_set_accel_bias"
??mpu_set_accel_bias?relay SYMBOL "?relay", mpu_set_accel_bias
mpu_set_accel_fsr   SYMBOL "mpu_set_accel_fsr"
??mpu_set_accel_fsr?relay SYMBOL "?relay", mpu_set_accel_fsr
mpu_set_bypass      SYMBOL "mpu_set_bypass"
??mpu_set_bypass?relay SYMBOL "?relay", mpu_set_bypass
mpu_set_compass_sample_rate SYMBOL "mpu_set_compass_sample_rate"
??mpu_set_compass_sample_rate?relay SYMBOL "?relay", mpu_set_compass_sample_rate
mpu_set_dmp_state   SYMBOL "mpu_set_dmp_state"
??mpu_set_dmp_state?relay SYMBOL "?relay", mpu_set_dmp_state
mpu_set_gyro_fsr    SYMBOL "mpu_set_gyro_fsr"
??mpu_set_gyro_fsr?relay SYMBOL "?relay", mpu_set_gyro_fsr
mpu_set_int_latched SYMBOL "mpu_set_int_latched"
??mpu_set_int_latched?relay SYMBOL "?relay", mpu_set_int_latched
mpu_set_int_level   SYMBOL "mpu_set_int_level"
??mpu_set_int_level?relay SYMBOL "?relay", mpu_set_int_level
mpu_set_lpf         SYMBOL "mpu_set_lpf"
??mpu_set_lpf?relay SYMBOL "?relay", mpu_set_lpf
mpu_set_sample_rate SYMBOL "mpu_set_sample_rate"
??mpu_set_sample_rate?relay SYMBOL "?relay", mpu_set_sample_rate
mpu_set_sensors     SYMBOL "mpu_set_sensors"
??mpu_set_sensors?relay SYMBOL "?relay", mpu_set_sensors
mpu_write_mem       SYMBOL "mpu_write_mem"
??mpu_write_mem?relay SYMBOL "?relay", mpu_write_mem
run_self_test       SYMBOL "run_self_test"
??run_self_test?relay SYMBOL "?relay", run_self_test
setup_compass       SYMBOL "setup_compass"
??setup_compass?relay SYMBOL "?relay", setup_compass

        EXTERN MPU_Write_Len
        FUNCTION MPU_Write_Len,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN printf
        FUNCTION printf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MPU_Read_Len
        FUNCTION MPU_Read_Len,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN delay_ms
        FUNCTION delay_ms,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memset
        FUNCTION memset,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN labs
        FUNCTION labs,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN fabsf
        FUNCTION fabsf,0200H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memcmp
        FUNCTION memcmp,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN dmp_set_gyro_bias
        FUNCTION dmp_set_gyro_bias,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN dmp_set_accel_bias
        FUNCTION dmp_set_accel_bias,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MPU_IIC_Init
        FUNCTION MPU_IIC_Init,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN dmp_load_motion_driver_firmware
        FUNCTION dmp_load_motion_driver_firmware,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN dmp_set_orientation
        FUNCTION dmp_set_orientation,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN dmp_enable_feature
        FUNCTION dmp_enable_feature,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN dmp_set_fifo_rate
        FUNCTION dmp_set_fifo_rate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN dmp_read_fifo
        FUNCTION dmp_read_fifo,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 187, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN asin
        FUNCTION asin,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 179, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN atan2
        FUNCTION atan2,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 183, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sprintf
        FUNCTION sprintf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 207, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_strlen
        FUNCTION osal_strlen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 179, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTWrite
        FUNCTION HalUARTWrite,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 179, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??HalUARTWrite?relay
        FUNCTION ??HalUARTWrite?relay,00H
        EXTERN ??MPU_IIC_Init?relay
        FUNCTION ??MPU_IIC_Init?relay,00H
        EXTERN ??MPU_Read_Len?relay
        FUNCTION ??MPU_Read_Len?relay,00H
        EXTERN ??MPU_Write_Len?relay
        FUNCTION ??MPU_Write_Len?relay,00H
        EXTERN ??asin?relay
        FUNCTION ??asin?relay,00H
        EXTERN ??atan2?relay
        FUNCTION ??atan2?relay,00H
        EXTERN ??delay_ms?relay
        FUNCTION ??delay_ms?relay,00H
        EXTERN ??dmp_enable_feature?relay
        FUNCTION ??dmp_enable_feature?relay,00H
        EXTERN ??dmp_load_motion_driver_firmware?relay
        FUNCTION ??dmp_load_motion_driver_firmware?relay,00H
        EXTERN ??dmp_read_fifo?relay
        FUNCTION ??dmp_read_fifo?relay,00H
        EXTERN ??dmp_set_accel_bias?relay
        FUNCTION ??dmp_set_accel_bias?relay,00H
        EXTERN ??dmp_set_fifo_rate?relay
        FUNCTION ??dmp_set_fifo_rate?relay,00H
        EXTERN ??dmp_set_gyro_bias?relay
        FUNCTION ??dmp_set_gyro_bias?relay,00H
        EXTERN ??dmp_set_orientation?relay
        FUNCTION ??dmp_set_orientation?relay,00H
        EXTERN ??fabsf?relay
        FUNCTION ??fabsf?relay,00H
        EXTERN ??labs?relay
        FUNCTION ??labs?relay,00H
        EXTERN ??memcmp?relay
        FUNCTION ??memcmp?relay,00H
        EXTERN ??memset?relay
        FUNCTION ??memset?relay,00H
        EXTERN ??osal_strlen?relay
        FUNCTION ??osal_strlen?relay,00H
        EXTERN ??printf?relay
        FUNCTION ??printf?relay,00H
        EXTERN ??sprintf?relay
        FUNCTION ??sprintf?relay,00H

// H:\项目\2019.5\旺旺（lwk474153686）\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MPU6050\eMPL\inv_mpu.c
//    1 /*
//    2  $License:
//    3     Copyright (C) 2011-2012 InvenSense Corporation, All Rights Reserved.
//    4     See included License.txt for License information.
//    5  $
//    6  */
//    7 /**
//    8  *  @addtogroup  DRIVERS Sensor Driver Layer
//    9  *  @brief       Hardware drivers to communicate with sensors via I2C.
//   10  *
//   11  *  @{
//   12  *      @file       inv_mpu.c
//   13  *      @brief      An I2C-based driver for Invensense gyroscopes.
//   14  *      @details    This driver currently works for the following devices:
//   15  *                  MPU6050
//   16  *                  MPU6500
//   17  *                  MPU9150 (or MPU6050 w/ AK8975 on the auxiliary bus)
//   18  *                  MPU9250 (or MPU6500 w/ AK8963 on the auxiliary bus)
//   19  */
//   20 #include <stdio.h>
//   21 //#include <stdint.h>
//   22 #include <stdlib.h>
//   23 #include <string.h>
//   24 #include <math.h>
//   25 #include "inv_mpu.h"
//   26 #include "inv_mpu_dmp_motion_driver.h"
//   27 #include "mpu6050.h"
//   28 #include "delay.h"
//   29 //#include "usart.h"
//   30 
//   31 
//   32 #define MPU6050							//定义我们使用的传感器为MPU6050
//   33 #define MOTION_DRIVER_TARGET_MSP430		//定义驱动部分,采用MSP430的驱动(移植到STM32F1)
//   34 
//   35 /* The following functions must be defined for this platform:
//   36  * i2c_write(unsigned char slave_addr, unsigned char reg_addr,
//   37  *      unsigned char length, unsigned char const *data)
//   38  * i2c_read(unsigned char slave_addr, unsigned char reg_addr,
//   39  *      unsigned char length, unsigned char *data)
//   40  * delay_ms(unsigned long num_ms)
//   41  * get_ms(unsigned long *count)
//   42  * reg_int_cb(void (*cb)(void), unsigned char port, unsigned char pin)
//   43  * labs(long x)
//   44  * fabsf(float x)
//   45  * min(int a, int b)
//   46  */
//   47 
//   48 
//   49 #if defined MOTION_DRIVER_TARGET_MSP430
//   50 //#include "msp430.h"
//   51 //#include "msp430_i2c.h"
//   52 //#include "msp430_clock.h"
//   53 //#include "msp430_interrupt.h"
//   54 
//   55 #define i2c_write   MPU_Write_Len
//   56 #define i2c_read    MPU_Read_Len
//   57 #define delay_ms    delay_ms
//   58 #define get_ms      mget_ms
//   59 //static inline int reg_int_cb(struct int_param_s *int_param)
//   60 //{
//   61 //    return msp430_reg_int_cb(int_param->cb, int_param->pin, int_param->lp_exit,
//   62 //        int_param->active_low);
//   63 //}
//   64 #define log_i 	printf	//打印信息
//   65 #define log_e  	printf	//打印信息
//   66 /* labs is already defined by TI's toolchain. */
//   67 /* fabs is for doubles. fabsf is for floats. */
//   68 #define fabs        fabsf
//   69 //#define fabs        fabs
//   70 #define min(a,b) ((a<b)?a:b)
//   71 #elif defined EMPL_TARGET_MSP430
//   72 #include "msp430.h"
//   73 #include "msp430_i2c.h"
//   74 #include "msp430_clock.h"
//   75 #include "msp430_interrupt.h"
//   76 #include "log.h"
//   77 #define i2c_write   msp430_i2c_write
//   78 #define i2c_read    msp430_i2c_read
//   79 #define delay_ms    msp430_delay_ms
//   80 #define get_ms      msp430_get_clock_ms
//   81 static inline int reg_int_cb(struct int_param_s *int_param)
//   82 {
//   83     return msp430_reg_int_cb(int_param->cb, int_param->pin, int_param->lp_exit,
//   84         int_param->active_low);
//   85 }
//   86 #define log_i       MPL_LOGI
//   87 #define log_e       MPL_LOGE
//   88 /* labs is already defined by TI's toolchain. */
//   89 /* fabs is for doubles. fabsf is for floats. */
//   90 #define fabs        fabsf
//   91 #define min(a,b) ((a<b)?a:b)
//   92 #elif defined EMPL_TARGET_UC3L0
//   93 /* Instead of using the standard TWI driver from the ASF library, we're using
//   94  * a TWI driver that follows the slave address + register address convention.
//   95  */
//   96 #include "twi.h"
//   97 #include "delay.h"
//   98 #include "sysclk.h"
//   99 #include "log.h"
//  100 #include "sensors_xplained.h"
//  101 #include "uc3l0_clock.h"
//  102 #define i2c_write(a, b, c, d)   twi_write(a, b, d, c)
//  103 #define i2c_read(a, b, c, d)    twi_read(a, b, d, c)
//  104 /* delay_ms is a function already defined in ASF. */
//  105 #define get_ms  uc3l0_get_clock_ms
//  106 static inline int reg_int_cb(struct int_param_s *int_param)
//  107 {
//  108     sensor_board_irq_connect(int_param->pin, int_param->cb, int_param->arg);
//  109     return 0;
//  110 }
//  111 #define log_i       MPL_LOGI
//  112 #define log_e       MPL_LOGE
//  113 /* UC3 is a 32-bit processor, so abs and labs are equivalent. */
//  114 #define labs        abs
//  115 #define fabs(x)     (((x)>0)?(x):-(x))
//  116 #else
//  117 #error  Gyro driver is missing the system layer implementations.
//  118 #endif
//  119 
//  120 #if !defined MPU6050 && !defined MPU9150 && !defined MPU6500 && !defined MPU9250
//  121 #error  Which gyro are you using? Define MPUxxxx in your compiler options.
//  122 #endif
//  123 
//  124 /* Time for some messy macro work. =]
//  125  * #define MPU9150
//  126  * is equivalent to..
//  127  * #define MPU6050
//  128  * #define AK8975_SECONDARY
//  129  *
//  130  * #define MPU9250
//  131  * is equivalent to..
//  132  * #define MPU6500
//  133  * #define AK8963_SECONDARY
//  134  */
//  135 #if defined MPU9150
//  136 #ifndef MPU6050
//  137 #define MPU6050
//  138 #endif                          /* #ifndef MPU6050 */
//  139 #if defined AK8963_SECONDARY
//  140 #error "MPU9150 and AK8963_SECONDARY cannot both be defined."
//  141 #elif !defined AK8975_SECONDARY /* #if defined AK8963_SECONDARY */
//  142 #define AK8975_SECONDARY
//  143 #endif                          /* #if defined AK8963_SECONDARY */
//  144 #elif defined MPU9250           /* #if defined MPU9150 */
//  145 #ifndef MPU6500
//  146 #define MPU6500
//  147 #endif                          /* #ifndef MPU6500 */
//  148 #if defined AK8975_SECONDARY
//  149 #error "MPU9250 and AK8975_SECONDARY cannot both be defined."
//  150 #elif !defined AK8963_SECONDARY /* #if defined AK8975_SECONDARY */
//  151 #define AK8963_SECONDARY
//  152 #endif                          /* #if defined AK8975_SECONDARY */
//  153 #endif                          /* #if defined MPU9150 */
//  154 
//  155 #if defined AK8975_SECONDARY || defined AK8963_SECONDARY
//  156 #define AK89xx_SECONDARY
//  157 #else
//  158 /* #warning "No compass = less profit for Invensense. Lame." */
//  159 #endif
//  160 
//  161 static int set_int_enable(unsigned char enable);
//  162 
//  163 /* Hardware registers needed by driver. */
//  164 struct gyro_reg_s {
//  165     unsigned char who_am_i;
//  166     unsigned char rate_div;
//  167     unsigned char lpf;
//  168     unsigned char prod_id;
//  169     unsigned char user_ctrl;
//  170     unsigned char fifo_en;
//  171     unsigned char gyro_cfg;
//  172     unsigned char accel_cfg;
//  173 //    unsigned char accel_cfg2;
//  174 //    unsigned char lp_accel_odr;
//  175     unsigned char motion_thr;
//  176     unsigned char motion_dur;
//  177     unsigned char fifo_count_h;
//  178     unsigned char fifo_r_w;
//  179     unsigned char raw_gyro;
//  180     unsigned char raw_accel;
//  181     unsigned char temp;
//  182     unsigned char int_enable;
//  183     unsigned char dmp_int_status;
//  184     unsigned char int_status;
//  185 //    unsigned char accel_intel;
//  186     unsigned char pwr_mgmt_1;
//  187     unsigned char pwr_mgmt_2;
//  188     unsigned char int_pin_cfg;
//  189     unsigned char mem_r_w;
//  190     unsigned char accel_offs;
//  191     unsigned char i2c_mst;
//  192     unsigned char bank_sel;
//  193     unsigned char mem_start_addr;
//  194     unsigned char prgm_start_h;
//  195 #if defined AK89xx_SECONDARY
//  196     unsigned char s0_addr;
//  197     unsigned char s0_reg;
//  198     unsigned char s0_ctrl;
//  199     unsigned char s1_addr;
//  200     unsigned char s1_reg;
//  201     unsigned char s1_ctrl;
//  202     unsigned char s4_ctrl;
//  203     unsigned char s0_do;
//  204     unsigned char s1_do;
//  205     unsigned char i2c_delay_ctrl;
//  206     unsigned char raw_compass;
//  207     /* The I2C_MST_VDDIO bit is in this register. */
//  208     unsigned char yg_offs_tc;
//  209 #endif
//  210 };
//  211 
//  212 /* Information specific to a particular device. */
//  213 struct hw_s {
//  214     unsigned char addr;
//  215     unsigned short max_fifo;
//  216     unsigned char num_reg;
//  217     unsigned short temp_sens;
//  218     short temp_offset;
//  219     unsigned short bank_size;
//  220 #if defined AK89xx_SECONDARY
//  221     unsigned short compass_fsr;
//  222 #endif
//  223 };
//  224 
//  225 /* When entering motion interrupt mode, the driver keeps track of the
//  226  * previous state so that it can be restored at a later time.
//  227  * TODO: This is tacky. Fix it.
//  228  */
//  229 struct motion_int_cache_s {
//  230     unsigned short gyro_fsr;
//  231     unsigned char accel_fsr;
//  232     unsigned short lpf;
//  233     unsigned short sample_rate;
//  234     unsigned char sensors_on;
//  235     unsigned char fifo_sensors;
//  236     unsigned char dmp_on;
//  237 };
//  238 
//  239 /* Cached chip configuration data.
//  240  * TODO: A lot of these can be handled with a bitmask.
//  241  */
//  242 struct chip_cfg_s {
//  243     /* Matches gyro_cfg >> 3 & 0x03 */
//  244     unsigned char gyro_fsr;
//  245     /* Matches accel_cfg >> 3 & 0x03 */
//  246     unsigned char accel_fsr;
//  247     /* Enabled sensors. Uses same masks as fifo_en, NOT pwr_mgmt_2. */
//  248     unsigned char sensors;
//  249     /* Matches config register. */
//  250     unsigned char lpf;
//  251     unsigned char clk_src;
//  252     /* Sample rate, NOT rate divider. */
//  253     unsigned short sample_rate;
//  254     /* Matches fifo_en register. */
//  255     unsigned char fifo_enable;
//  256     /* Matches int enable register. */
//  257     unsigned char int_enable;
//  258     /* 1 if devices on auxiliary I2C bus appear on the primary. */
//  259     unsigned char bypass_mode;
//  260     /* 1 if half-sensitivity.
//  261      * NOTE: This doesn't belong here, but everything else in hw_s is const,
//  262      * and this allows us to save some precious RAM.
//  263      */
//  264     unsigned char accel_half;
//  265     /* 1 if device in low-power accel-only mode. */
//  266     unsigned char lp_accel_mode;
//  267     /* 1 if interrupts are only triggered on motion events. */
//  268     unsigned char int_motion_only;
//  269     struct motion_int_cache_s cache;
//  270     /* 1 for active low interrupts. */
//  271     unsigned char active_low_int;
//  272     /* 1 for latched interrupts. */
//  273     unsigned char latched_int;
//  274     /* 1 if DMP is enabled. */
//  275     unsigned char dmp_on;
//  276     /* Ensures that DMP will only be loaded once. */
//  277     unsigned char dmp_loaded;
//  278     /* Sampling rate used when DMP is enabled. */
//  279     unsigned short dmp_sample_rate;
//  280 #ifdef AK89xx_SECONDARY
//  281     /* Compass sample rate. */
//  282     unsigned short compass_sample_rate;
//  283     unsigned char compass_addr;
//  284     short mag_sens_adj[3];
//  285 #endif
//  286 };
//  287 
//  288 /* Information for self-test. */
//  289 struct test_s {
//  290     unsigned long gyro_sens;
//  291     unsigned long accel_sens;
//  292     unsigned char reg_rate_div;
//  293     unsigned char reg_lpf;
//  294     unsigned char reg_gyro_fsr;
//  295     unsigned char reg_accel_fsr;
//  296     unsigned short wait_ms;
//  297     unsigned char packet_thresh;
//  298     float min_dps;
//  299     float max_dps;
//  300     float max_gyro_var;
//  301     float min_g;
//  302     float max_g;
//  303     float max_accel_var;
//  304 };
//  305 
//  306 /* Gyro driver state variables. */
//  307 struct gyro_state_s {
//  308     const struct gyro_reg_s *reg;
//  309     const struct hw_s *hw;
//  310     struct chip_cfg_s chip_cfg;
//  311     const struct test_s *test;
//  312 };
//  313 
//  314 /* Filter configurations. */
//  315 enum lpf_e {
//  316     INV_FILTER_256HZ_NOLPF2 = 0,
//  317     INV_FILTER_188HZ,
//  318     INV_FILTER_98HZ,
//  319     INV_FILTER_42HZ,
//  320     INV_FILTER_20HZ,
//  321     INV_FILTER_10HZ,
//  322     INV_FILTER_5HZ,
//  323     INV_FILTER_2100HZ_NOLPF,
//  324     NUM_FILTER
//  325 };
//  326 
//  327 /* Full scale ranges. */
//  328 enum gyro_fsr_e {
//  329     INV_FSR_250DPS = 0,
//  330     INV_FSR_500DPS,
//  331     INV_FSR_1000DPS,
//  332     INV_FSR_2000DPS,
//  333     NUM_GYRO_FSR
//  334 };
//  335 
//  336 /* Full scale ranges. */
//  337 enum accel_fsr_e {
//  338     INV_FSR_2G = 0,
//  339     INV_FSR_4G,
//  340     INV_FSR_8G,
//  341     INV_FSR_16G,
//  342     NUM_ACCEL_FSR
//  343 };
//  344 
//  345 /* Clock sources. */
//  346 enum clock_sel_e {
//  347     INV_CLK_INTERNAL = 0,
//  348     INV_CLK_PLL,
//  349     NUM_CLK
//  350 };
//  351 
//  352 /* Low-power accel wakeup rates. */
//  353 enum lp_accel_rate_e {
//  354 #if defined MPU6050
//  355     INV_LPA_1_25HZ,
//  356     INV_LPA_5HZ,
//  357     INV_LPA_20HZ,
//  358     INV_LPA_40HZ
//  359 #elif defined MPU6500
//  360     INV_LPA_0_3125HZ,
//  361     INV_LPA_0_625HZ,
//  362     INV_LPA_1_25HZ,
//  363     INV_LPA_2_5HZ,
//  364     INV_LPA_5HZ,
//  365     INV_LPA_10HZ,
//  366     INV_LPA_20HZ,
//  367     INV_LPA_40HZ,
//  368     INV_LPA_80HZ,
//  369     INV_LPA_160HZ,
//  370     INV_LPA_320HZ,
//  371     INV_LPA_640HZ
//  372 #endif
//  373 };
//  374 
//  375 #define BIT_I2C_MST_VDDIO   (0x80)
//  376 #define BIT_FIFO_EN         (0x40)
//  377 #define BIT_DMP_EN          (0x80)
//  378 #define BIT_FIFO_RST        (0x04)
//  379 #define BIT_DMP_RST         (0x08)
//  380 #define BIT_FIFO_OVERFLOW   (0x10)
//  381 #define BIT_DATA_RDY_EN     (0x01)
//  382 #define BIT_DMP_INT_EN      (0x02)
//  383 #define BIT_MOT_INT_EN      (0x40)
//  384 #define BITS_FSR            (0x18)
//  385 #define BITS_LPF            (0x07)
//  386 #define BITS_HPF            (0x07)
//  387 #define BITS_CLK            (0x07)
//  388 #define BIT_FIFO_SIZE_1024  (0x40)
//  389 #define BIT_FIFO_SIZE_2048  (0x80)
//  390 #define BIT_FIFO_SIZE_4096  (0xC0)
//  391 #define BIT_RESET           (0x80)
//  392 #define BIT_SLEEP           (0x40)
//  393 #define BIT_S0_DELAY_EN     (0x01)
//  394 #define BIT_S2_DELAY_EN     (0x04)
//  395 #define BITS_SLAVE_LENGTH   (0x0F)
//  396 #define BIT_SLAVE_BYTE_SW   (0x40)
//  397 #define BIT_SLAVE_GROUP     (0x10)
//  398 #define BIT_SLAVE_EN        (0x80)
//  399 #define BIT_I2C_READ        (0x80)
//  400 #define BITS_I2C_MASTER_DLY (0x1F)
//  401 #define BIT_AUX_IF_EN       (0x20)
//  402 #define BIT_ACTL            (0x80)
//  403 #define BIT_LATCH_EN        (0x20)
//  404 #define BIT_ANY_RD_CLR      (0x10)
//  405 #define BIT_BYPASS_EN       (0x02)
//  406 #define BITS_WOM_EN         (0xC0)
//  407 #define BIT_LPA_CYCLE       (0x20)
//  408 #define BIT_STBY_XA         (0x20)
//  409 #define BIT_STBY_YA         (0x10)
//  410 #define BIT_STBY_ZA         (0x08)
//  411 #define BIT_STBY_XG         (0x04)
//  412 #define BIT_STBY_YG         (0x02)
//  413 #define BIT_STBY_ZG         (0x01)
//  414 #define BIT_STBY_XYZA       (BIT_STBY_XA | BIT_STBY_YA | BIT_STBY_ZA)
//  415 #define BIT_STBY_XYZG       (BIT_STBY_XG | BIT_STBY_YG | BIT_STBY_ZG)
//  416 
//  417 #if defined AK8975_SECONDARY
//  418 #define SUPPORTS_AK89xx_HIGH_SENS   (0x00)
//  419 #define AK89xx_FSR                  (9830)
//  420 #elif defined AK8963_SECONDARY
//  421 #define SUPPORTS_AK89xx_HIGH_SENS   (0x10)
//  422 #define AK89xx_FSR                  (4915)
//  423 #endif
//  424 
//  425 #ifdef AK89xx_SECONDARY
//  426 #define AKM_REG_WHOAMI      (0x00)
//  427 
//  428 #define AKM_REG_ST1         (0x02)
//  429 #define AKM_REG_HXL         (0x03)
//  430 #define AKM_REG_ST2         (0x09)
//  431 
//  432 #define AKM_REG_CNTL        (0x0A)
//  433 #define AKM_REG_ASTC        (0x0C)
//  434 #define AKM_REG_ASAX        (0x10)
//  435 #define AKM_REG_ASAY        (0x11)
//  436 #define AKM_REG_ASAZ        (0x12)
//  437 
//  438 #define AKM_DATA_READY      (0x01)
//  439 #define AKM_DATA_OVERRUN    (0x02)
//  440 #define AKM_OVERFLOW        (0x80)
//  441 #define AKM_DATA_ERROR      (0x40)
//  442 
//  443 #define AKM_BIT_SELF_TEST   (0x40)
//  444 
//  445 #define AKM_POWER_DOWN          (0x00 | SUPPORTS_AK89xx_HIGH_SENS)
//  446 #define AKM_SINGLE_MEASUREMENT  (0x01 | SUPPORTS_AK89xx_HIGH_SENS)
//  447 #define AKM_FUSE_ROM_ACCESS     (0x0F | SUPPORTS_AK89xx_HIGH_SENS)
//  448 #define AKM_MODE_SELF_TEST      (0x08 | SUPPORTS_AK89xx_HIGH_SENS)
//  449 
//  450 #define AKM_WHOAMI      (0x48)
//  451 #endif
//  452 
//  453 #if defined MPU6050
//  454 //const struct gyro_reg_s reg = {
//  455 //    .who_am_i       = 0x75,
//  456 //    .rate_div       = 0x19,
//  457 //    .lpf            = 0x1A,
//  458 //    .prod_id        = 0x0C,
//  459 //    .user_ctrl      = 0x6A,
//  460 //    .fifo_en        = 0x23,
//  461 //    .gyro_cfg       = 0x1B,
//  462 //    .accel_cfg      = 0x1C,
//  463 //    .motion_thr     = 0x1F,
//  464 //    .motion_dur     = 0x20,
//  465 //    .fifo_count_h   = 0x72,
//  466 //    .fifo_r_w       = 0x74,
//  467 //    .raw_gyro       = 0x43,
//  468 //    .raw_accel      = 0x3B,
//  469 //    .temp           = 0x41,
//  470 //    .int_enable     = 0x38,
//  471 //    .dmp_int_status = 0x39,
//  472 //    .int_status     = 0x3A,
//  473 //    .pwr_mgmt_1     = 0x6B,
//  474 //    .pwr_mgmt_2     = 0x6C,
//  475 //    .int_pin_cfg    = 0x37,
//  476 //    .mem_r_w        = 0x6F,
//  477 //    .accel_offs     = 0x06,
//  478 //    .i2c_mst        = 0x24,
//  479 //    .bank_sel       = 0x6D,
//  480 //    .mem_start_addr = 0x6E,
//  481 //    .prgm_start_h   = 0x70
//  482 //#ifdef AK89xx_SECONDARY
//  483 //    ,.raw_compass   = 0x49,
//  484 //    .yg_offs_tc     = 0x01,
//  485 //    .s0_addr        = 0x25,
//  486 //    .s0_reg         = 0x26,
//  487 //    .s0_ctrl        = 0x27,
//  488 //    .s1_addr        = 0x28,
//  489 //    .s1_reg         = 0x29,
//  490 //    .s1_ctrl        = 0x2A,
//  491 //    .s4_ctrl        = 0x34,
//  492 //    .s0_do          = 0x63,
//  493 //    .s1_do          = 0x64,
//  494 //    .i2c_delay_ctrl = 0x67
//  495 //#endif
//  496 //};

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  497 const struct gyro_reg_s reg = {
reg:
        DB 117
        DB 25
        DB 26
        DB 12
        DB 106
        DB 35
        DB 27
        DB 28
        DB 31
        DB 32
        DB 114
        DB 116
        DB 67
        DB 59
        DB 65
        DB 56
        DB 57
        DB 58
        DB 107
        DB 108
        DB 55
        DB 111
        DB 6
        DB 36
        DB 109
        DB 110
        DB 112
//  498 0x75,  //who_am_i
//  499 0x19,  //rate_div
//  500 0x1A,  //lpf
//  501 0x0C,  //prod_id
//  502 0x6A,  //user_ctrl
//  503 0x23,  //fifo_en
//  504 0x1B,  //gyro_cfg
//  505 0x1C,  //accel_cfg
//  506 0x1F,  // motion_thr
//  507 0x20,  // motion_dur
//  508 0x72,  // fifo_count_h
//  509 0x74,  // fifo_r_w
//  510 0x43,  // raw_gyro
//  511 0x3B,  // raw_accel
//  512 0x41,  // temp
//  513 0x38,  // int_enable
//  514 0x39,  //  dmp_int_status
//  515 0x3A,  //  int_status
//  516 0x6B,  // pwr_mgmt_1
//  517 0x6C,  // pwr_mgmt_2
//  518 0x37,  // int_pin_cfg
//  519 0x6F,  // mem_r_w
//  520 0x06,  // accel_offs
//  521 0x24,  // i2c_mst
//  522 0x6D,  // bank_sel
//  523 0x6E,  // mem_start_addr
//  524 0x70   // prgm_start_h
//  525 };
//  526 
//  527 //const struct hw_s hw = {
//  528 //    .addr           = 0x68,
//  529 //    .max_fifo       = 1024,
//  530 //    .num_reg        = 118,
//  531 //    .temp_sens      = 340,
//  532 //    .temp_offset    = -521,
//  533 //    .bank_size      = 256
//  534 //#if defined AK89xx_SECONDARY
//  535 //    ,.compass_fsr    = AK89xx_FSR
//  536 //#endif
//  537 //};

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  538 const struct hw_s hw={
hw:
        DB 104
        DATA16
        DW 1024
        DATA8
        DB 118
        DATA16
        DW 340
        DW -521
        DW 256
//  539   0x68,	 //addr
//  540   1024,	 //max_fifo
//  541   118,	 //num_reg
//  542   340,	 //temp_sens
//  543   -521,	 //temp_offset
//  544   256	 //bank_size
//  545 };
//  546 
//  547 //const struct test_s test = {
//  548 //    .gyro_sens      = 32768/250,
//  549 //    .accel_sens     = 32768/16,
//  550 //    .reg_rate_div   = 0,    /* 1kHz. */
//  551 //    .reg_lpf        = 1,    /* 188Hz. */
//  552 //    .reg_gyro_fsr   = 0,    /* 250dps. */
//  553 //    .reg_accel_fsr  = 0x18, /* 16g. */
//  554 //    .wait_ms        = 50,
//  555 //    .packet_thresh  = 5,    /* 5% */
//  556 //    .min_dps        = 10.f,
//  557 //    .max_dps        = 105.f,
//  558 //    .max_gyro_var   = 0.14f,
//  559 //    .min_g          = 0.3f,
//  560 //    .max_g          = 0.95f,
//  561 //    .max_accel_var  = 0.14f
//  562 //};

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  563 const struct test_s test={
test:
        DATA32
        DD 131
        DD 2048
        DATA8
        DB 0
        DB 1
        DB 0
        DB 24
        DATA16
        DW 50
        DATA8
        DB 5
        DATA32
        DD 41200000H
        DD 42D20000H
        DD 3E0F5C29H
        DD 3E99999AH
        DD 3F733333H
        DD 3E0F5C29H
//  564 32768/250,		 //gyro_sens
//  565 32768/16,		 //	accel_sens
//  566 0,				 //	reg_rate_div
//  567 1,				//	reg_lpf
//  568 0,				 //	reg_gyro_fsr
//  569 0x18,			//	reg_accel_fsr
//  570 50,				//	wait_ms
//  571 5,				//	packet_thresh
//  572 10.0f,			 //	min_dps
//  573 105.0f,			 //	max_dps
//  574 0.14f,			//	max_gyro_var
//  575 0.3f,		   //	min_g
//  576 0.95f,		   //	max_g
//  577 0.14f		   //	max_accel_var
//  578 };
//  579 
//  580 //static struct gyro_state_s st = {
//  581 //    .reg = &reg,
//  582 //    .hw = &hw,
//  583 //    .test = &test
//  584 //};

        RSEG XDATA_I:XDATA:NOROOT(0)
//  585 static struct gyro_state_s st={
st:
        DATA8
        DS 35
        REQUIRE `?<Initializer for st>`
        REQUIRE __INIT_XDATA_I
//  586   &reg,
//  587   &hw,
//  588   {0},
//  589   &test
//  590 };
//  591 
//  592 
//  593 #elif defined MPU6500
//  594 const struct gyro_reg_s reg = {
//  595     .who_am_i       = 0x75,
//  596     .rate_div       = 0x19,
//  597     .lpf            = 0x1A,
//  598     .prod_id        = 0x0C,
//  599     .user_ctrl      = 0x6A,
//  600     .fifo_en        = 0x23,
//  601     .gyro_cfg       = 0x1B,
//  602     .accel_cfg      = 0x1C,
//  603     .accel_cfg2     = 0x1D,
//  604     .lp_accel_odr   = 0x1E,
//  605     .motion_thr     = 0x1F,
//  606     .motion_dur     = 0x20,
//  607     .fifo_count_h   = 0x72,
//  608     .fifo_r_w       = 0x74,
//  609     .raw_gyro       = 0x43,
//  610     .raw_accel      = 0x3B,
//  611     .temp           = 0x41,
//  612     .int_enable     = 0x38,
//  613     .dmp_int_status = 0x39,
//  614     .int_status     = 0x3A,
//  615     .accel_intel    = 0x69,
//  616     .pwr_mgmt_1     = 0x6B,
//  617     .pwr_mgmt_2     = 0x6C,
//  618     .int_pin_cfg    = 0x37,
//  619     .mem_r_w        = 0x6F,
//  620     .accel_offs     = 0x77,
//  621     .i2c_mst        = 0x24,
//  622     .bank_sel       = 0x6D,
//  623     .mem_start_addr = 0x6E,
//  624     .prgm_start_h   = 0x70
//  625 #ifdef AK89xx_SECONDARY
//  626     ,.raw_compass   = 0x49,
//  627     .s0_addr        = 0x25,
//  628     .s0_reg         = 0x26,
//  629     .s0_ctrl        = 0x27,
//  630     .s1_addr        = 0x28,
//  631     .s1_reg         = 0x29,
//  632     .s1_ctrl        = 0x2A,
//  633     .s4_ctrl        = 0x34,
//  634     .s0_do          = 0x63,
//  635     .s1_do          = 0x64,
//  636     .i2c_delay_ctrl = 0x67
//  637 #endif
//  638 };
//  639 const struct hw_s hw = {
//  640     .addr           = 0x68,
//  641     .max_fifo       = 1024,
//  642     .num_reg        = 128,
//  643     .temp_sens      = 321,
//  644     .temp_offset    = 0,
//  645     .bank_size      = 256
//  646 #if defined AK89xx_SECONDARY
//  647     ,.compass_fsr    = AK89xx_FSR
//  648 #endif
//  649 };
//  650 
//  651 const struct test_s test = {
//  652     .gyro_sens      = 32768/250,
//  653     .accel_sens     = 32768/16,
//  654     .reg_rate_div   = 0,    /* 1kHz. */
//  655     .reg_lpf        = 1,    /* 188Hz. */
//  656     .reg_gyro_fsr   = 0,    /* 250dps. */
//  657     .reg_accel_fsr  = 0x18, /* 16g. */
//  658     .wait_ms        = 50,
//  659     .packet_thresh  = 5,    /* 5% */
//  660     .min_dps        = 10.f,
//  661     .max_dps        = 105.f,
//  662     .max_gyro_var   = 0.14f,
//  663     .min_g          = 0.3f,
//  664     .max_g          = 0.95f,
//  665     .max_accel_var  = 0.14f
//  666 };
//  667 
//  668 static struct gyro_state_s st = {
//  669     .reg = &reg,
//  670     .hw = &hw,
//  671     .test = &test
//  672 };
//  673 #endif
//  674 
//  675 #define MAX_PACKET_LENGTH (12)
//  676 
//  677 #ifdef AK89xx_SECONDARY
//  678 static int setup_compass(void);
//  679 #define MAX_COMPASS_SAMPLE_RATE (100)
//  680 #endif
//  681 
//  682 /**
//  683  *  @brief      Enable/disable data ready interrupt.
//  684  *  If the DMP is on, the DMP interrupt is enabled. Otherwise, the data ready
//  685  *  interrupt is used.
//  686  *  @param[in]  enable      1 to enable interrupt.
//  687  *  @return     0 if successful.
//  688  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  689 static int set_int_enable(unsigned char enable)
set_int_enable:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function set_int_enable
        CODE
//  690 {
        FUNCALL set_int_enable, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL set_int_enable, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,R1
        MOV     R6,A
//  691     unsigned char tmp;
//  692 
//  693     if (st.chip_cfg.dmp_on) {
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JZ      ??set_int_enable_0
//  694         if (enable)
        MOV     A,R6
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        JZ      ??set_int_enable_1
//  695             tmp = BIT_DMP_INT_EN;
        MOV     A,#0x2
        SJMP    ??set_int_enable_2
//  696         else
//  697             tmp = 0x00;
??set_int_enable_1:
        CLR     A
??set_int_enable_2:
        LCALL   ??Subroutine138_0 & 0xFFFF
//  698         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &tmp))
??CrossCallReturnLabel_303:
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_145:
        JZ      ??set_int_enable_3
//  699             return -1;
??set_int_enable_4:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
??set_int_enable_5:
        LJMP    ?Subroutine0 & 0xFFFF
//  700         st.chip_cfg.int_enable = tmp;
//  701     } else {
//  702         if (!st.chip_cfg.sensors)
??set_int_enable_0:
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JZ      ??set_int_enable_4
//  703             return -1;
//  704         if (enable && st.chip_cfg.int_enable)
        MOV     A,R6
        JZ      ??set_int_enable_6
        MOV     DPTR,#st + 12
        MOVX    A,@DPTR
        JZ      ??set_int_enable_7
//  705             return 0;
??set_int_enable_8:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??set_int_enable_5
//  706         if (enable)
//  707             tmp = BIT_DATA_RDY_EN;
??set_int_enable_7:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x1
        SJMP    ??set_int_enable_9
//  708         else
//  709             tmp = 0x00;
??set_int_enable_6:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
//  710         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &tmp))
//  711             return -1;
//  712         st.chip_cfg.int_enable = tmp;
//  713     }
??set_int_enable_9:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_304:
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_146:
        JNZ     ??set_int_enable_4
??set_int_enable_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     DPTR,#st + 12
        MOVX    @DPTR,A
        SJMP    ??set_int_enable_8
        CFI EndBlock cfiBlock0
//  714     return 0;
//  715 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
        CFI Block cfiCond1 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_137
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond2 Using cfiCommon0
        CFI (cfiCond2) NoFunction
        CFI (cfiCond2) Conditional ??CrossCallReturnLabel_138
        CFI (cfiCond2) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond2) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond2) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond2) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond2) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond2) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond2) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond2) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond2) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond2) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond2) CFA_SP SP+0
        CFI (cfiCond2) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker3 Using cfiCommon1
        CFI (cfiPicker3) NoFunction
        CFI (cfiPicker3) Picker
        MOVX    A,@DPTR
        SWAP    A
        RLC     A
        RLC     A
        ANL     A,#0xc0
        ORL     A,#0x7
        CFI EndBlock cfiCond1
        CFI EndBlock cfiCond2
        CFI EndBlock cfiPicker3
        REQUIRE ??Subroutine106_0
        ; // Fall through to label ??Subroutine106_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine106_0:
        CFI Block cfiCond4 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_139
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond5 Using cfiCommon0
        CFI (cfiCond5) NoFunction
        CFI (cfiCond5) Conditional ??CrossCallReturnLabel_140
        CFI (cfiCond5) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond5) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond5) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond5) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond5) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond5) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond5) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond5) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond5) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond5) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond5) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond5) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond5) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond5) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond5) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond5) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond5) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond5) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond5) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond5) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond5) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond5) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond5) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond5) CFA_SP SP+0
        CFI (cfiCond5) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond6 Using cfiCommon0
        CFI (cfiCond6) NoFunction
        CFI (cfiCond6) Conditional ??CrossCallReturnLabel_137
        CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond6) CFA_SP SP+0
        CFI (cfiCond6) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond7 Using cfiCommon0
        CFI (cfiCond7) NoFunction
        CFI (cfiCond7) Conditional ??CrossCallReturnLabel_138
        CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond7) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond7) CFA_SP SP+0
        CFI (cfiCond7) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker8 Using cfiCommon1
        CFI (cfiPicker8) NoFunction
        CFI (cfiPicker8) Picker
        LCALL   ?Subroutine90 & 0xFFFF
        CFI EndBlock cfiCond4
        CFI EndBlock cfiCond5
        CFI EndBlock cfiCond6
        CFI EndBlock cfiCond7
        CFI EndBlock cfiPicker8
??CrossCallReturnLabel_133:
        REQUIRE ??Subroutine107_0
        ; // Fall through to label ??Subroutine107_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine107_0:
        CFI Block cfiCond9 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_141
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond10 Using cfiCommon0
        CFI (cfiCond10) NoFunction
        CFI (cfiCond10) Conditional ??CrossCallReturnLabel_142
        CFI (cfiCond10) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond10) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond10) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond10) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond10) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond10) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond10) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond10) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond10) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond10) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond10) CFA_SP SP+0
        CFI (cfiCond10) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond11 Using cfiCommon0
        CFI (cfiCond11) NoFunction
        CFI (cfiCond11) Conditional ??CrossCallReturnLabel_143
        CFI (cfiCond11) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond11) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond11) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond11) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond11) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond11) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond11) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond11) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond11) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond11) CFA_SP SP+0
        CFI (cfiCond11) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond12 Using cfiCommon0
        CFI (cfiCond12) NoFunction
        CFI (cfiCond12) Conditional ??CrossCallReturnLabel_144
        CFI (cfiCond12) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond12) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond12) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond12) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond12) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond12) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond12) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond12) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond12) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond12) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond12) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond12) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond12) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond12) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond12) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond12) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond12) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond12) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond12) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond12) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond12) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond12) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond12) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond12) CFA_SP SP+0
        CFI (cfiCond12) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond13 Using cfiCommon0
        CFI (cfiCond13) NoFunction
        CFI (cfiCond13) Conditional ??CrossCallReturnLabel_139
        CFI (cfiCond13) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond13) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond13) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond13) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond13) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond13) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond13) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond13) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond13) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond13) CFA_SP SP+0
        CFI (cfiCond13) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond14 Using cfiCommon0
        CFI (cfiCond14) NoFunction
        CFI (cfiCond14) Conditional ??CrossCallReturnLabel_140
        CFI (cfiCond14) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond14) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond14) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond14) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond14) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond14) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond14) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond14) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond14) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond14) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond14) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond14) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond14) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond14) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond14) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond14) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond14) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond14) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond14) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond14) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond14) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond14) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond14) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond14) CFA_SP SP+0
        CFI (cfiCond14) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond15 Using cfiCommon0
        CFI (cfiCond15) NoFunction
        CFI (cfiCond15) Conditional ??CrossCallReturnLabel_137
        CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond15) CFA_SP SP+0
        CFI (cfiCond15) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond16 Using cfiCommon0
        CFI (cfiCond16) NoFunction
        CFI (cfiCond16) Conditional ??CrossCallReturnLabel_138
        CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond16) CFA_SP SP+0
        CFI (cfiCond16) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker17 Using cfiCommon1
        CFI (cfiPicker17) NoFunction
        CFI (cfiPicker17) Picker
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x12
        CFI EndBlock cfiCond9
        CFI EndBlock cfiCond10
        CFI EndBlock cfiCond11
        CFI EndBlock cfiCond12
        CFI EndBlock cfiCond13
        CFI EndBlock cfiCond14
        CFI EndBlock cfiCond15
        CFI EndBlock cfiCond16
        CFI EndBlock cfiPicker17
        REQUIRE ??Subroutine108_0
        ; // Fall through to label ??Subroutine108_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine108_0:
        CFI Block cfiCond18 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_145
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond19 Using cfiCommon0
        CFI (cfiCond19) NoFunction
        CFI (cfiCond19) Conditional ??CrossCallReturnLabel_146
        CFI (cfiCond19) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond19) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond19) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond19) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond19) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond19) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond19) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond19) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond19) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond19) CFA_SP SP+0
        CFI (cfiCond19) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond20 Using cfiCommon0
        CFI (cfiCond20) NoFunction
        CFI (cfiCond20) Conditional ??CrossCallReturnLabel_147
        CFI (cfiCond20) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond20) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond20) CFA_SP SP+-5
        CFI (cfiCond20) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond21 Using cfiCommon0
        CFI (cfiCond21) NoFunction
        CFI (cfiCond21) Conditional ??CrossCallReturnLabel_148
        CFI (cfiCond21) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond21) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond21) CFA_SP SP+-5
        CFI (cfiCond21) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond22 Using cfiCommon0
        CFI (cfiCond22) NoFunction
        CFI (cfiCond22) Conditional ??CrossCallReturnLabel_149
        CFI (cfiCond22) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond22) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond22) CFA_SP SP+-5
        CFI (cfiCond22) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond23 Using cfiCommon0
        CFI (cfiCond23) NoFunction
        CFI (cfiCond23) Conditional ??CrossCallReturnLabel_150
        CFI (cfiCond23) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond23) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond23) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond23) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond23) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond23) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond23) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond23) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond23) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond23) CFA_SP SP+0
        CFI (cfiCond23) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond24 Using cfiCommon0
        CFI (cfiCond24) NoFunction
        CFI (cfiCond24) Conditional ??CrossCallReturnLabel_151
        CFI (cfiCond24) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond24) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond24) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond24) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond24) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond24) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond24) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond24) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond24) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond24) CFA_SP SP+0
        CFI (cfiCond24) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond25 Using cfiCommon0
        CFI (cfiCond25) NoFunction
        CFI (cfiCond25) Conditional ??CrossCallReturnLabel_152
        CFI (cfiCond25) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond25) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond25) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond25) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond25) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond25) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond25) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond25) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond25) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond25) CFA_SP SP+0
        CFI (cfiCond25) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond26 Using cfiCommon0
        CFI (cfiCond26) NoFunction
        CFI (cfiCond26) Conditional ??CrossCallReturnLabel_153
        CFI (cfiCond26) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond26) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond26) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond26) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond26) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond26) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond26) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond26) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond26) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond26) CFA_SP SP+0
        CFI (cfiCond26) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond27 Using cfiCommon0
        CFI (cfiCond27) NoFunction
        CFI (cfiCond27) Conditional ??CrossCallReturnLabel_154
        CFI (cfiCond27) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond27) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond27) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond27) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond27) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond27) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond27) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond27) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond27) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond27) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond27) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond27) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond27) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond27) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond27) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond27) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond27) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond27) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond27) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond27) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond27) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond27) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond27) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond27) CFA_SP SP+0
        CFI (cfiCond27) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond28 Using cfiCommon0
        CFI (cfiCond28) NoFunction
        CFI (cfiCond28) Conditional ??CrossCallReturnLabel_155
        CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond28) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond28) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond28) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond28) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond28) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond28) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond28) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond28) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond28) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond28) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond28) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond28) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond28) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond28) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond28) CFA_SP SP+0
        CFI (cfiCond28) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond29 Using cfiCommon0
        CFI (cfiCond29) NoFunction
        CFI (cfiCond29) Conditional ??CrossCallReturnLabel_156
        CFI (cfiCond29) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond29) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond29) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond29) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond29) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond29) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond29) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond29) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond29) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond29) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond29) CFA_SP SP+0
        CFI (cfiCond29) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond30 Using cfiCommon0
        CFI (cfiCond30) NoFunction
        CFI (cfiCond30) Conditional ??CrossCallReturnLabel_157
        CFI (cfiCond30) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond30) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond30) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond30) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond30) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond30) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond30) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond30) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond30) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond30) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond30) CFA_SP SP+0
        CFI (cfiCond30) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond31 Using cfiCommon0
        CFI (cfiCond31) NoFunction
        CFI (cfiCond31) Conditional ??CrossCallReturnLabel_158
        CFI (cfiCond31) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond31) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond31) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond31) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond31) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond31) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond31) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond31) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond31) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond31) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond31) CFA_SP SP+0
        CFI (cfiCond31) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond32 Using cfiCommon0
        CFI (cfiCond32) NoFunction
        CFI (cfiCond32) Conditional ??CrossCallReturnLabel_159
        CFI (cfiCond32) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond32) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond32) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond32) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond32) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond32) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond32) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond32) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond32) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond32) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond32) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond32) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond32) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond32) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond32) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond32) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond32) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond32) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond32) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond32) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond32) CFA_SP SP+0
        CFI (cfiCond32) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond33 Using cfiCommon0
        CFI (cfiCond33) NoFunction
        CFI (cfiCond33) Conditional ??CrossCallReturnLabel_160
        CFI (cfiCond33) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond33) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond33) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond33) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond33) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond33) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond33) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond33) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond33) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond33) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond33) CFA_SP SP+0
        CFI (cfiCond33) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond34 Using cfiCommon0
        CFI (cfiCond34) NoFunction
        CFI (cfiCond34) Conditional ??CrossCallReturnLabel_141
        CFI (cfiCond34) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond34) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond34) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond34) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond34) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond34) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond34) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond34) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond34) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond34) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond34) CFA_SP SP+0
        CFI (cfiCond34) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond35 Using cfiCommon0
        CFI (cfiCond35) NoFunction
        CFI (cfiCond35) Conditional ??CrossCallReturnLabel_142
        CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond35) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond35) CFA_SP SP+0
        CFI (cfiCond35) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond36 Using cfiCommon0
        CFI (cfiCond36) NoFunction
        CFI (cfiCond36) Conditional ??CrossCallReturnLabel_143
        CFI (cfiCond36) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond36) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond36) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond36) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond36) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond36) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond36) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond36) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond36) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond36) CFA_SP SP+0
        CFI (cfiCond36) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond37 Using cfiCommon0
        CFI (cfiCond37) NoFunction
        CFI (cfiCond37) Conditional ??CrossCallReturnLabel_144
        CFI (cfiCond37) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond37) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond37) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond37) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond37) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond37) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond37) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond37) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond37) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond37) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond37) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond37) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond37) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond37) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond37) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond37) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond37) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond37) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond37) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond37) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond37) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond37) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond37) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond37) CFA_SP SP+0
        CFI (cfiCond37) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond38 Using cfiCommon0
        CFI (cfiCond38) NoFunction
        CFI (cfiCond38) Conditional ??CrossCallReturnLabel_139
        CFI (cfiCond38) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond38) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond38) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond38) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond38) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond38) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond38) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond38) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond38) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond38) CFA_SP SP+0
        CFI (cfiCond38) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond39 Using cfiCommon0
        CFI (cfiCond39) NoFunction
        CFI (cfiCond39) Conditional ??CrossCallReturnLabel_140
        CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond39) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond39) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond39) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond39) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond39) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond39) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond39) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond39) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond39) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond39) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond39) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond39) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond39) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond39) CFA_SP SP+0
        CFI (cfiCond39) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond40 Using cfiCommon0
        CFI (cfiCond40) NoFunction
        CFI (cfiCond40) Conditional ??CrossCallReturnLabel_137
        CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond40) CFA_SP SP+0
        CFI (cfiCond40) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond41 Using cfiCommon0
        CFI (cfiCond41) NoFunction
        CFI (cfiCond41) Conditional ??CrossCallReturnLabel_138
        CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond41) CFA_SP SP+0
        CFI (cfiCond41) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker42 Using cfiCommon1
        CFI (cfiPicker42) NoFunction
        CFI (cfiPicker42) Picker
        LCALL   ?Subroutine89 & 0xFFFF
        CFI EndBlock cfiCond18
        CFI EndBlock cfiCond19
        CFI EndBlock cfiCond20
        CFI EndBlock cfiCond21
        CFI EndBlock cfiCond22
        CFI EndBlock cfiCond23
        CFI EndBlock cfiCond24
        CFI EndBlock cfiCond25
        CFI EndBlock cfiCond26
        CFI EndBlock cfiCond27
        CFI EndBlock cfiCond28
        CFI EndBlock cfiCond29
        CFI EndBlock cfiCond30
        CFI EndBlock cfiCond31
        CFI EndBlock cfiCond32
        CFI EndBlock cfiCond33
        CFI EndBlock cfiCond34
        CFI EndBlock cfiCond35
        CFI EndBlock cfiCond36
        CFI EndBlock cfiCond37
        CFI EndBlock cfiCond38
        CFI EndBlock cfiCond39
        CFI EndBlock cfiCond40
        CFI EndBlock cfiCond41
        CFI EndBlock cfiPicker42
??CrossCallReturnLabel_194:
        REQUIRE ??Subroutine109_0
        ; // Fall through to label ??Subroutine109_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine109_0:
        CFI Block cfiCond43 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_161
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond44 Using cfiCommon0
        CFI (cfiCond44) NoFunction
        CFI (cfiCond44) Conditional ??CrossCallReturnLabel_162
        CFI (cfiCond44) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond44) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond44) CFA_SP SP+-5
        CFI (cfiCond44) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond45 Using cfiCommon0
        CFI (cfiCond45) NoFunction
        CFI (cfiCond45) Conditional ??CrossCallReturnLabel_163
        CFI (cfiCond45) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond45) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond45) CFA_SP SP+-5
        CFI (cfiCond45) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond46 Using cfiCommon0
        CFI (cfiCond46) NoFunction
        CFI (cfiCond46) Conditional ??CrossCallReturnLabel_164
        CFI (cfiCond46) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond46) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond46) CFA_SP SP+-5
        CFI (cfiCond46) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond47 Using cfiCommon0
        CFI (cfiCond47) NoFunction
        CFI (cfiCond47) Conditional ??CrossCallReturnLabel_165
        CFI (cfiCond47) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond47) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond47) CFA_SP SP+-5
        CFI (cfiCond47) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond48 Using cfiCommon0
        CFI (cfiCond48) NoFunction
        CFI (cfiCond48) Conditional ??CrossCallReturnLabel_166
        CFI (cfiCond48) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond48) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond48) CFA_SP SP+-5
        CFI (cfiCond48) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond49 Using cfiCommon0
        CFI (cfiCond49) NoFunction
        CFI (cfiCond49) Conditional ??CrossCallReturnLabel_167
        CFI (cfiCond49) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond49) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond49) CFA_SP SP+-5
        CFI (cfiCond49) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond50 Using cfiCommon0
        CFI (cfiCond50) NoFunction
        CFI (cfiCond50) Conditional ??CrossCallReturnLabel_168
        CFI (cfiCond50) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond50) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond50) CFA_SP SP+-5
        CFI (cfiCond50) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond51 Using cfiCommon0
        CFI (cfiCond51) NoFunction
        CFI (cfiCond51) Conditional ??CrossCallReturnLabel_169
        CFI (cfiCond51) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond51) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond51) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond51) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond51) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond51) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond51) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond51) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond51) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond51) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond51) CFA_SP SP+0
        CFI (cfiCond51) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond52 Using cfiCommon0
        CFI (cfiCond52) NoFunction
        CFI (cfiCond52) Conditional ??CrossCallReturnLabel_170
        CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond52) CFA_SP SP+0
        CFI (cfiCond52) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond53 Using cfiCommon0
        CFI (cfiCond53) NoFunction
        CFI (cfiCond53) Conditional ??CrossCallReturnLabel_171
        CFI (cfiCond53) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond53) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond53) CFA_SP SP+-5
        CFI (cfiCond53) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond54 Using cfiCommon0
        CFI (cfiCond54) NoFunction
        CFI (cfiCond54) Conditional ??CrossCallReturnLabel_172
        CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond54) CFA_SP SP+0
        CFI (cfiCond54) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond55 Using cfiCommon0
        CFI (cfiCond55) NoFunction
        CFI (cfiCond55) Conditional ??CrossCallReturnLabel_173
        CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond55) CFA_SP SP+0
        CFI (cfiCond55) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond56 Using cfiCommon0
        CFI (cfiCond56) NoFunction
        CFI (cfiCond56) Conditional ??CrossCallReturnLabel_174
        CFI (cfiCond56) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond56) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond56) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond56) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond56) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond56) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond56) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond56) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond56) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond56) CFA_SP SP+0
        CFI (cfiCond56) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond57 Using cfiCommon0
        CFI (cfiCond57) NoFunction
        CFI (cfiCond57) Conditional ??CrossCallReturnLabel_175
        CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond57) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond57) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond57) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond57) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond57) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond57) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond57) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond57) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond57) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond57) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond57) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond57) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond57) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond57) CFA_SP SP+0
        CFI (cfiCond57) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond58 Using cfiCommon0
        CFI (cfiCond58) NoFunction
        CFI (cfiCond58) Conditional ??CrossCallReturnLabel_176
        CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond58) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond58) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond58) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond58) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond58) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond58) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond58) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond58) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond58) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond58) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond58) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond58) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond58) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond58) CFA_SP SP+0
        CFI (cfiCond58) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond59 Using cfiCommon0
        CFI (cfiCond59) NoFunction
        CFI (cfiCond59) Conditional ??CrossCallReturnLabel_177
        CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond59) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond59) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond59) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond59) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond59) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond59) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond59) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond59) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond59) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond59) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond59) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond59) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond59) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond59) CFA_SP SP+0
        CFI (cfiCond59) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond60 Using cfiCommon0
        CFI (cfiCond60) NoFunction
        CFI (cfiCond60) Conditional ??CrossCallReturnLabel_178
        CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond60) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond60) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond60) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond60) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond60) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond60) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond60) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond60) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond60) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond60) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond60) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond60) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond60) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond60) CFA_SP SP+0
        CFI (cfiCond60) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond61 Using cfiCommon0
        CFI (cfiCond61) NoFunction
        CFI (cfiCond61) Conditional ??CrossCallReturnLabel_179
        CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond61) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond61) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond61) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond61) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond61) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond61) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond61) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond61) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond61) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond61) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond61) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond61) CFA_SP SP+0
        CFI (cfiCond61) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond62 Using cfiCommon0
        CFI (cfiCond62) NoFunction
        CFI (cfiCond62) Conditional ??CrossCallReturnLabel_180
        CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond62) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond62) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond62) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond62) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond62) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond62) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond62) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond62) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond62) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond62) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond62) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond62) CFA_SP SP+0
        CFI (cfiCond62) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond63 Using cfiCommon0
        CFI (cfiCond63) NoFunction
        CFI (cfiCond63) Conditional ??CrossCallReturnLabel_181
        CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond63) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond63) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond63) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond63) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond63) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond63) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond63) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond63) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond63) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond63) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond63) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond63) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond63) CFA_SP SP+0
        CFI (cfiCond63) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond64 Using cfiCommon0
        CFI (cfiCond64) NoFunction
        CFI (cfiCond64) Conditional ??CrossCallReturnLabel_182
        CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond64) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond64) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond64) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond64) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond64) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond64) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond64) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond64) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond64) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond64) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond64) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond64) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond64) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond64) CFA_SP SP+0
        CFI (cfiCond64) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond65 Using cfiCommon0
        CFI (cfiCond65) NoFunction
        CFI (cfiCond65) Conditional ??CrossCallReturnLabel_183
        CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond65) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond65) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond65) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond65) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond65) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond65) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond65) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond65) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond65) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond65) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond65) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond65) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond65) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond65) CFA_SP SP+0
        CFI (cfiCond65) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond66 Using cfiCommon0
        CFI (cfiCond66) NoFunction
        CFI (cfiCond66) Conditional ??CrossCallReturnLabel_184
        CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond66) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond66) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond66) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond66) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond66) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond66) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond66) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond66) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond66) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond66) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond66) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond66) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond66) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond66) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond66) CFA_SP SP+0
        CFI (cfiCond66) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond67 Using cfiCommon0
        CFI (cfiCond67) NoFunction
        CFI (cfiCond67) Conditional ??CrossCallReturnLabel_185
        CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond67) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond67) CFA_SP SP+0
        CFI (cfiCond67) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond68 Using cfiCommon0
        CFI (cfiCond68) NoFunction
        CFI (cfiCond68) Conditional ??CrossCallReturnLabel_186
        CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond68) CFA_SP SP+0
        CFI (cfiCond68) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond69 Using cfiCommon0
        CFI (cfiCond69) NoFunction
        CFI (cfiCond69) Conditional ??CrossCallReturnLabel_187
        CFI (cfiCond69) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond69) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond69) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond69) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond69) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond69) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond69) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond69) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond69) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond69) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond69) CFA_SP SP+0
        CFI (cfiCond69) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond70 Using cfiCommon0
        CFI (cfiCond70) NoFunction
        CFI (cfiCond70) Conditional ??CrossCallReturnLabel_145
        CFI (cfiCond70) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond70) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond70) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond70) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond70) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond70) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond70) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond70) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond70) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond70) CFA_SP SP+0
        CFI (cfiCond70) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond71 Using cfiCommon0
        CFI (cfiCond71) NoFunction
        CFI (cfiCond71) Conditional ??CrossCallReturnLabel_146
        CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond71) CFA_SP SP+0
        CFI (cfiCond71) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond72 Using cfiCommon0
        CFI (cfiCond72) NoFunction
        CFI (cfiCond72) Conditional ??CrossCallReturnLabel_147
        CFI (cfiCond72) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond72) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond72) CFA_SP SP+-5
        CFI (cfiCond72) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond73 Using cfiCommon0
        CFI (cfiCond73) NoFunction
        CFI (cfiCond73) Conditional ??CrossCallReturnLabel_148
        CFI (cfiCond73) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond73) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond73) CFA_SP SP+-5
        CFI (cfiCond73) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond74 Using cfiCommon0
        CFI (cfiCond74) NoFunction
        CFI (cfiCond74) Conditional ??CrossCallReturnLabel_149
        CFI (cfiCond74) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond74) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond74) CFA_SP SP+-5
        CFI (cfiCond74) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond75 Using cfiCommon0
        CFI (cfiCond75) NoFunction
        CFI (cfiCond75) Conditional ??CrossCallReturnLabel_150
        CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond75) CFA_SP SP+0
        CFI (cfiCond75) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond76 Using cfiCommon0
        CFI (cfiCond76) NoFunction
        CFI (cfiCond76) Conditional ??CrossCallReturnLabel_151
        CFI (cfiCond76) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond76) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond76) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond76) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond76) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond76) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond76) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond76) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond76) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond76) CFA_SP SP+0
        CFI (cfiCond76) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond77 Using cfiCommon0
        CFI (cfiCond77) NoFunction
        CFI (cfiCond77) Conditional ??CrossCallReturnLabel_152
        CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond77) CFA_SP SP+0
        CFI (cfiCond77) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond78 Using cfiCommon0
        CFI (cfiCond78) NoFunction
        CFI (cfiCond78) Conditional ??CrossCallReturnLabel_153
        CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond78) CFA_SP SP+0
        CFI (cfiCond78) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond79 Using cfiCommon0
        CFI (cfiCond79) NoFunction
        CFI (cfiCond79) Conditional ??CrossCallReturnLabel_154
        CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond79) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond79) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond79) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond79) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond79) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond79) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond79) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond79) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond79) CFA_SP SP+0
        CFI (cfiCond79) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond80 Using cfiCommon0
        CFI (cfiCond80) NoFunction
        CFI (cfiCond80) Conditional ??CrossCallReturnLabel_155
        CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond80) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond80) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond80) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond80) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond80) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond80) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond80) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond80) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond80) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond80) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond80) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond80) CFA_SP SP+0
        CFI (cfiCond80) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond81 Using cfiCommon0
        CFI (cfiCond81) NoFunction
        CFI (cfiCond81) Conditional ??CrossCallReturnLabel_156
        CFI (cfiCond81) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond81) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond81) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond81) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond81) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond81) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond81) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond81) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond81) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond81) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond81) CFA_SP SP+0
        CFI (cfiCond81) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond82 Using cfiCommon0
        CFI (cfiCond82) NoFunction
        CFI (cfiCond82) Conditional ??CrossCallReturnLabel_157
        CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond82) CFA_SP SP+0
        CFI (cfiCond82) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond83 Using cfiCommon0
        CFI (cfiCond83) NoFunction
        CFI (cfiCond83) Conditional ??CrossCallReturnLabel_158
        CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond83) CFA_SP SP+0
        CFI (cfiCond83) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond84 Using cfiCommon0
        CFI (cfiCond84) NoFunction
        CFI (cfiCond84) Conditional ??CrossCallReturnLabel_159
        CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond84) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond84) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond84) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond84) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond84) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond84) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond84) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond84) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond84) CFA_SP SP+0
        CFI (cfiCond84) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond85 Using cfiCommon0
        CFI (cfiCond85) NoFunction
        CFI (cfiCond85) Conditional ??CrossCallReturnLabel_160
        CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond85) CFA_SP SP+0
        CFI (cfiCond85) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond86 Using cfiCommon0
        CFI (cfiCond86) NoFunction
        CFI (cfiCond86) Conditional ??CrossCallReturnLabel_141
        CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond86) CFA_SP SP+0
        CFI (cfiCond86) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond87 Using cfiCommon0
        CFI (cfiCond87) NoFunction
        CFI (cfiCond87) Conditional ??CrossCallReturnLabel_142
        CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond87) CFA_SP SP+0
        CFI (cfiCond87) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond88 Using cfiCommon0
        CFI (cfiCond88) NoFunction
        CFI (cfiCond88) Conditional ??CrossCallReturnLabel_143
        CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond88) CFA_SP SP+0
        CFI (cfiCond88) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond89 Using cfiCommon0
        CFI (cfiCond89) NoFunction
        CFI (cfiCond89) Conditional ??CrossCallReturnLabel_144
        CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond89) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond89) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond89) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond89) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond89) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond89) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond89) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond89) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond89) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond89) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond89) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond89) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond89) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond89) CFA_SP SP+0
        CFI (cfiCond89) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond90 Using cfiCommon0
        CFI (cfiCond90) NoFunction
        CFI (cfiCond90) Conditional ??CrossCallReturnLabel_139
        CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond90) CFA_SP SP+0
        CFI (cfiCond90) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond91 Using cfiCommon0
        CFI (cfiCond91) NoFunction
        CFI (cfiCond91) Conditional ??CrossCallReturnLabel_140
        CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond91) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond91) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond91) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond91) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond91) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond91) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond91) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond91) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond91) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond91) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond91) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond91) CFA_SP SP+0
        CFI (cfiCond91) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond92 Using cfiCommon0
        CFI (cfiCond92) NoFunction
        CFI (cfiCond92) Conditional ??CrossCallReturnLabel_137
        CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond92) CFA_SP SP+0
        CFI (cfiCond92) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond93 Using cfiCommon0
        CFI (cfiCond93) NoFunction
        CFI (cfiCond93) Conditional ??CrossCallReturnLabel_138
        CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond93) CFA_SP SP+0
        CFI (cfiCond93) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker94 Using cfiCommon1
        CFI (cfiPicker94) NoFunction
        CFI (cfiPicker94) Picker
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_215:
        LCALL   ??MPU_Write_Len?relay
        MOV     A,R1
        RET
        CFI EndBlock cfiCond43
        CFI EndBlock cfiCond44
        CFI EndBlock cfiCond45
        CFI EndBlock cfiCond46
        CFI EndBlock cfiCond47
        CFI EndBlock cfiCond48
        CFI EndBlock cfiCond49
        CFI EndBlock cfiCond50
        CFI EndBlock cfiCond51
        CFI EndBlock cfiCond52
        CFI EndBlock cfiCond53
        CFI EndBlock cfiCond54
        CFI EndBlock cfiCond55
        CFI EndBlock cfiCond56
        CFI EndBlock cfiCond57
        CFI EndBlock cfiCond58
        CFI EndBlock cfiCond59
        CFI EndBlock cfiCond60
        CFI EndBlock cfiCond61
        CFI EndBlock cfiCond62
        CFI EndBlock cfiCond63
        CFI EndBlock cfiCond64
        CFI EndBlock cfiCond65
        CFI EndBlock cfiCond66
        CFI EndBlock cfiCond67
        CFI EndBlock cfiCond68
        CFI EndBlock cfiCond69
        CFI EndBlock cfiCond70
        CFI EndBlock cfiCond71
        CFI EndBlock cfiCond72
        CFI EndBlock cfiCond73
        CFI EndBlock cfiCond74
        CFI EndBlock cfiCond75
        CFI EndBlock cfiCond76
        CFI EndBlock cfiCond77
        CFI EndBlock cfiCond78
        CFI EndBlock cfiCond79
        CFI EndBlock cfiCond80
        CFI EndBlock cfiCond81
        CFI EndBlock cfiCond82
        CFI EndBlock cfiCond83
        CFI EndBlock cfiCond84
        CFI EndBlock cfiCond85
        CFI EndBlock cfiCond86
        CFI EndBlock cfiCond87
        CFI EndBlock cfiCond88
        CFI EndBlock cfiCond89
        CFI EndBlock cfiCond90
        CFI EndBlock cfiCond91
        CFI EndBlock cfiCond92
        CFI EndBlock cfiCond93
        CFI EndBlock cfiPicker94
//  716 
//  717 /**
//  718  *  @brief      Register dump for testing.
//  719  *  @return     0 if successful.
//  720  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  721 int mpu_reg_dump(void)
mpu_reg_dump:
        CFI Block cfiBlock95 Using cfiCommon0
        CFI Function mpu_reg_dump
        CODE
//  722 {
        FUNCALL mpu_reg_dump, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reg_dump, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
//  723     unsigned char ii;
//  724     unsigned char data;
//  725 
//  726     for (ii = 0; ii < st.hw->num_reg; ii++) {
        MOV     R6,#0x0
        SJMP    ??mpu_reg_dump_0
//  727         if (ii == st.reg->fifo_r_w || ii == st.reg->mem_r_w)
//  728             continue;
//  729         if (i2c_read(st.hw->addr, ii, 1, &data))
//  730             return -1;
//  731         log_i("%#5x: %#5x\r\n", ii, data);
??mpu_reg_dump_1:
        ; Setup parameters for call to function printf
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 13)
        MOV     ?V0 + 0,R6
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 15)
        MOV     R2,#`?<Constant "%#5x: %#5x\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "%#5x: %#5x\\r\\n">` >> 8) & 0xff
        LCALL   ??printf?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
??mpu_reg_dump_2:
        INC     R6
??mpu_reg_dump_0:
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_16:
        JNC     ??mpu_reg_dump_3
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_190:
        JZ      ??mpu_reg_dump_2
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x15
        LCALL   ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_188:
        JZ      ??mpu_reg_dump_2
        ; Setup parameters for call to function MPU_Read_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     A,R6
        MOV     R2,A
        LCALL   ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_258:
        JZ      ??mpu_reg_dump_1
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_reg_dump_4
//  732     }
//  733     return 0;
??mpu_reg_dump_3:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_reg_dump_4:
        LJMP    ?Subroutine1 & 0xFFFF
        CFI EndBlock cfiBlock95
//  734 }
//  735 
//  736 /**
//  737  *  @brief      Read from a single register.
//  738  *  NOTE: The memory and FIFO read/write registers cannot be accessed.
//  739  *  @param[in]  reg     Register address.
//  740  *  @param[out] data    Register data.
//  741  *  @return     0 if successful.
//  742  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  743 int mpu_read_reg(unsigned char reg, unsigned char *data)
mpu_read_reg:
        CFI Block cfiBlock96 Using cfiCommon0
        CFI Function mpu_read_reg
        CODE
//  744 {
        FUNCALL mpu_read_reg, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
//  745     if (reg == st.reg->fifo_r_w || reg == st.reg->mem_r_w)
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_191:
        JZ      ??mpu_read_reg_0
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x15
        LCALL   ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_189:
        JNZ     ??mpu_read_reg_1
//  746         return -1;
??mpu_read_reg_0:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_read_reg_2
//  747     if (reg >= st.hw->num_reg)
??mpu_read_reg_1:
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_17:
        JNC     ??mpu_read_reg_0
//  748         return -1;
//  749     return i2c_read(st.hw->addr, reg, 1, data);
        ; Setup parameters for call to function MPU_Read_Len
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     R3,#0x1
        MOV     A,R6
        MOV     R2,A
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_330:
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??MPU_Read_Len?relay
        MOV     ?V0 + 0,R1
        MOV     R2,?V0 + 0
        MOV     R3,#0x0
??mpu_read_reg_2:
        LJMP    ??Subroutine112_0 & 0xFFFF
        CFI EndBlock cfiBlock96
//  750 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
        CFI Block cfiCond97 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_16
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond98 Using cfiCommon0
        CFI (cfiCond98) NoFunction
        CFI (cfiCond98) Conditional ??CrossCallReturnLabel_17
        CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond98) CFA_SP SP+0
        CFI (cfiCond98) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker99 Using cfiCommon1
        CFI (cfiPicker99) NoFunction
        CFI (cfiPicker99) Picker
        MOV     DPTR,#st + 2
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_232:
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R6
        CLR     C
        SUBB    A,R0
        RET
        CFI EndBlock cfiCond97
        CFI EndBlock cfiCond98
        CFI EndBlock cfiPicker99

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
        CFI Block cfiCond100 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_190
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond101 Using cfiCommon0
        CFI (cfiCond101) NoFunction
        CFI (cfiCond101) Conditional ??CrossCallReturnLabel_191
        CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond101) CFA_SP SP+0
        CFI (cfiCond101) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker102 Using cfiCommon1
        CFI (cfiPicker102) NoFunction
        CFI (cfiPicker102) Picker
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0xb
        CFI EndBlock cfiCond100
        CFI EndBlock cfiCond101
        CFI EndBlock cfiPicker102
        REQUIRE ??Subroutine110_0
        ; // Fall through to label ??Subroutine110_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine110_0:
        CFI Block cfiCond103 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_188
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond104 Using cfiCommon0
        CFI (cfiCond104) NoFunction
        CFI (cfiCond104) Conditional ??CrossCallReturnLabel_189
        CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond104) CFA_SP SP+0
        CFI (cfiCond104) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond105 Using cfiCommon0
        CFI (cfiCond105) NoFunction
        CFI (cfiCond105) Conditional ??CrossCallReturnLabel_190
        CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond105) CFA_SP SP+0
        CFI (cfiCond105) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond106 Using cfiCommon0
        CFI (cfiCond106) NoFunction
        CFI (cfiCond106) Conditional ??CrossCallReturnLabel_191
        CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond106) CFA_SP SP+0
        CFI (cfiCond106) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker107 Using cfiCommon1
        CFI (cfiPicker107) NoFunction
        CFI (cfiPicker107) Picker
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_193:
        XRL     A,R6
        RET
        CFI EndBlock cfiCond103
        CFI EndBlock cfiCond104
        CFI EndBlock cfiCond105
        CFI EndBlock cfiCond106
        CFI EndBlock cfiPicker107
//  751 
//  752 /**
//  753  *  @brief      Initialize hardware.
//  754  *  Initial configuration:\n
//  755  *  Gyro FSR: +/- 2000DPS\n
//  756  *  Accel FSR +/- 2G\n
//  757  *  DLPF: 42Hz\n
//  758  *  FIFO rate: 50Hz\n
//  759  *  Clock source: Gyro PLL\n
//  760  *  FIFO: Disabled.\n
//  761  *  Data ready interrupt: Disabled, active low, unlatched.
//  762  *  @param[in]  int_param   Platform-specific parameters to interrupt API.
//  763  *  @return     0 if successful.
//  764  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  765 int mpu_init(void)
mpu_init:
        CFI Block cfiBlock108 Using cfiCommon0
        CFI Function mpu_init
        CODE
//  766 {
        FUNCALL mpu_init, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, mpu_set_gyro_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, mpu_set_accel_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, mpu_set_sample_rate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, mpu_configure_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, mpu_set_bypass
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, mpu_set_sensors
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
//  767     unsigned char data[6], rev;
//  768 
//  769     /* Reset device. */
//  770     data[0] = BIT_RESET;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x80
        LCALL   ?Subroutine50 & 0xFFFF
//  771     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, data))
??CrossCallReturnLabel_64:
        LCALL   ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_141:
        JZ      ??mpu_init_0
//  772         return -1;
??mpu_init_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_init_2 & 0xFFFF
//  773     delay_ms(100);
??mpu_init_0:
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x64
        LCALL   ?Subroutine60 & 0xFFFF
//  774 
//  775     /* Wake up chip. */
//  776     data[0] = 0x00;
??CrossCallReturnLabel_80:
        CLR     A
        LCALL   ?Subroutine50 & 0xFFFF
//  777     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, data))
??CrossCallReturnLabel_65:
        LCALL   ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_142:
        JNZ     ??mpu_init_1
//  778         return -1;
//  779 
//  780 #if defined MPU6050
//  781     /* Check product revision. */
//  782     if (i2c_read(st.hw->addr, st.reg->accel_offs, 6, data))
        ; Setup parameters for call to function MPU_Read_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x6
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x16
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_200:
        JNZ     ??mpu_init_1
//  783         return -1;
//  784     rev = ((data[5] & 0x01) << 2) | ((data[3] & 0x01) << 1) |
//  785         (data[1] & 0x01);
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        CLR     A
        RLC     A
        RLC     A
        MOV     R0,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        CLR     A
        RLC     A
        RLC     A
        RLC     A
        ORL     A,R0
        ORL     A,R1
        MOV     ?V0 + 0,A
//  786 
//  787     if (rev) {
        JZ      ??mpu_init_3
//  788         /* Congrats, these parts are better. */
//  789         if (rev == 1)
        MOV     A,#0x1
        XRL     A,?V0 + 0
        JZ      ??mpu_init_4
//  790             st.chip_cfg.accel_half = 1;
//  791         else if (rev == 2)
        MOV     A,#0x2
        XRL     A,?V0 + 0
        JNZ     ??mpu_init_5
//  792             st.chip_cfg.accel_half = 0;
??mpu_init_6:
        MOV     DPTR,#st + 14
        CLR     A
        SJMP    ??mpu_init_7
//  793         else {
//  794             log_e("Unsupported software product rev %d.\n", rev);
??mpu_init_5:
        ; Setup parameters for call to function printf
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R2,#`?<Constant "Unsupported software ...">` & 0xff
        MOV     R3,#(`?<Constant "Unsupported software ...">` >> 8) & 0xff
        LCALL   ??printf?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
        SJMP    ??mpu_init_1
//  795             return -1;
//  796         }
//  797     } else {
//  798         if (i2c_read(st.hw->addr, st.reg->prod_id, 1, data))
??mpu_init_3:
        ; Setup parameters for call to function MPU_Read_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_25:
        INC     DPTR
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_209:
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
//  799             return -1;
//  800         rev = data[0] & 0x0F;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     ?V0 + 0,A
//  801         if (!rev) {
        JNZ     ??mpu_init_8
//  802             log_e("Product ID read as 0 indicates device is either "
//  803                 "incompatible or an MPU3050.\n");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "Product ID read as 0 ...">` & 0xff
        MOV     R3,#(`?<Constant "Product ID read as 0 ...">` >> 8) & 0xff
        LCALL   ??printf?relay
        LJMP    ??mpu_init_1 & 0xFFFF
//  804             return -1;
//  805         } else if (rev == 4) {
??mpu_init_8:
        MOV     A,#0x4
        XRL     A,?V0 + 0
        JNZ     ??mpu_init_6
//  806             log_i("Half sensitivity part found.\n");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "Half sensitivity part...">` & 0xff
        MOV     R3,#(`?<Constant "Half sensitivity part...">` >> 8) & 0xff
        LCALL   ??printf?relay
//  807             st.chip_cfg.accel_half = 1;
??mpu_init_4:
        MOV     DPTR,#st + 14
        MOV     A,#0x1
??mpu_init_7:
        MOVX    @DPTR,A
//  808         } else
//  809             st.chip_cfg.accel_half = 0;
//  810     }
//  811 #elif defined MPU6500
//  812 #define MPU6500_MEM_REV_ADDR    (0x17)
//  813     if (mpu_read_mem(MPU6500_MEM_REV_ADDR, 1, &rev))
//  814         return -1;
//  815     if (rev == 0x1)
//  816         st.chip_cfg.accel_half = 0;
//  817     else {
//  818         log_e("Unsupported software product rev %d.\n", rev);
//  819         return -1;
//  820     }
//  821 
//  822     /* MPU6500 shares 4kB of memory between the DMP and the FIFO. Since the
//  823      * first 3kB are needed by the DMP, we'll use the last 1kB for the FIFO.
//  824      */
//  825     data[0] = BIT_FIFO_SIZE_1024 | 0x8;
//  826     if (i2c_write(st.hw->addr, st.reg->accel_cfg2, 1, data))
//  827         return -1;
//  828 #endif
//  829 
//  830     /* Set to invalid values to ensure no I2C writes are skipped. */
//  831     st.chip_cfg.sensors = 0xFF;
        MOV     DPTR,#st + 6
        MOV     A,#-0x1
        MOVX    @DPTR,A
//  832     st.chip_cfg.gyro_fsr = 0xFF;
        MOV     DPTR,#st + 4
        LCALL   ?Subroutine91 & 0xFFFF
//  833     st.chip_cfg.accel_fsr = 0xFF;
//  834     st.chip_cfg.lpf = 0xFF;
//  835     st.chip_cfg.sample_rate = 0xFFFF;
//  836     st.chip_cfg.fifo_enable = 0xFF;
??CrossCallReturnLabel_129:
        INC     DPTR
        MOVX    @DPTR,A
//  837     st.chip_cfg.bypass_mode = 0xFF;
        MOV     DPTR,#st + 13
        MOVX    @DPTR,A
//  838 #ifdef AK89xx_SECONDARY
//  839     st.chip_cfg.compass_sample_rate = 0xFFFF;
//  840 #endif
//  841     /* mpu_set_sensors always preserves this setting. */
//  842     st.chip_cfg.clk_src = INV_CLK_PLL;
        MOV     DPTR,#st + 8
        MOV     A,#0x1
        MOVX    @DPTR,A
//  843     /* Handled in next call to mpu_set_bypass. */
//  844     st.chip_cfg.active_low_int = 1;
        MOV     DPTR,#st + 27
        MOVX    @DPTR,A
//  845     st.chip_cfg.latched_int = 0;
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//  846     st.chip_cfg.int_motion_only = 0;
        MOV     DPTR,#st + 16
        MOVX    @DPTR,A
//  847     st.chip_cfg.lp_accel_mode = 0;
        MOV     DPTR,#st + 15
        MOVX    @DPTR,A
//  848     memset(&st.chip_cfg.cache, 0, sizeof(st.chip_cfg.cache));
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#0xa
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#(st + 17) & 0xff
        MOV     R3,#((st + 17) >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
//  849     st.chip_cfg.dmp_on = 0;
        MOV     DPTR,#st + 29
        CLR     A
        MOVX    @DPTR,A
//  850     st.chip_cfg.dmp_loaded = 0;
        INC     DPTR
        MOVX    @DPTR,A
//  851     st.chip_cfg.dmp_sample_rate = 0;
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  852 
//  853     if (mpu_set_gyro_fsr(2000))
        ; Setup parameters for call to function mpu_set_gyro_fsr
        MOV     R2,#-0x30
        MOV     R3,#0x7
        LCALL   ??mpu_set_gyro_fsr?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
//  854         return -1;
//  855     if (mpu_set_accel_fsr(2))
        ; Setup parameters for call to function mpu_set_accel_fsr
        MOV     R1,#0x2
        LCALL   ??mpu_set_accel_fsr?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
//  856         return -1;
//  857     if (mpu_set_lpf(42))
        ; Setup parameters for call to function mpu_set_lpf
        MOV     R2,#0x2a
        MOV     R3,#0x0
        LCALL   ??mpu_set_lpf?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
//  858         return -1;
//  859     if (mpu_set_sample_rate(50))
        ; Setup parameters for call to function mpu_set_sample_rate
        MOV     R2,#0x32
        MOV     R3,#0x0
        LCALL   ??mpu_set_sample_rate?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
//  860         return -1;
//  861     if (mpu_configure_fifo(0))
        ; Setup parameters for call to function mpu_configure_fifo
        MOV     R1,#0x0
        LCALL   ??mpu_configure_fifo?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
//  862         return -1;
//  863 
//  864 //    if (int_param)
//  865 //        reg_int_cb(int_param);
//  866 
//  867 #ifdef AK89xx_SECONDARY
//  868     setup_compass();
//  869     if (mpu_set_compass_sample_rate(10))
//  870         return -1;
//  871 #else
//  872     /* Already disabled by setup_compass. */
//  873     if (mpu_set_bypass(0))
        ; Setup parameters for call to function mpu_set_bypass
        MOV     R1,#0x0
        LCALL   ??mpu_set_bypass?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
//  874         return -1;
//  875 #endif
//  876 
//  877     mpu_set_sensors(0);
        ; Setup parameters for call to function mpu_set_sensors
        MOV     R1,#0x0
        LCALL   ??mpu_set_sensors?relay
//  878     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_init_2:
        MOV     A,#0x6
        LJMP    ??Subroutine135_0 & 0xFFFF
        CFI EndBlock cfiBlock108
//  879 }
//  880 
//  881 /**
//  882  *  @brief      Enter low-power accel-only mode.
//  883  *  In low-power accel mode, the chip goes to sleep and only wakes up to sample
//  884  *  the accelerometer at one of the following frequencies:
//  885  *  \n MPU6050: 1.25Hz, 5Hz, 20Hz, 40Hz
//  886  *  \n MPU6500: 1.25Hz, 2.5Hz, 5Hz, 10Hz, 20Hz, 40Hz, 80Hz, 160Hz, 320Hz, 640Hz
//  887  *  \n If the requested rate is not one listed above, the device will be set to
//  888  *  the next highest rate. Requesting a rate above the maximum supported
//  889  *  frequency will result in an error.
//  890  *  \n To select a fractional wake-up frequency, round down the value passed to
//  891  *  @e rate.
//  892  *  @param[in]  rate        Minimum sampling rate, or zero to disable LP
//  893  *                          accel mode.
//  894  *  @return     0 if successful.
//  895  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  896 int mpu_lp_accel_mode(unsigned char rate)
mpu_lp_accel_mode:
        CFI Block cfiBlock109 Using cfiCommon0
        CFI Function mpu_lp_accel_mode
        CODE
//  897 {
        FUNCALL mpu_lp_accel_mode, mpu_set_int_latched
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, mpu_set_int_latched
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, mpu_configure_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R1
        MOV     R6,A
//  898     unsigned char tmp[2];
//  899 
//  900     if (rate > 40)
        CLR     C
        SUBB    A,#0x29
        JC      ??mpu_lp_accel_mode_0
//  901         return -1;
??mpu_lp_accel_mode_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_lp_accel_mode_2 & 0xFFFF
//  902 
//  903     if (!rate) {
??mpu_lp_accel_mode_0:
        MOV     A,R6
        JNZ     ??mpu_lp_accel_mode_3
//  904         mpu_set_int_latched(0);
        ; Setup parameters for call to function mpu_set_int_latched
        MOV     R1,#0x0
        LCALL   ?Subroutine65 & 0xFFFF
//  905         tmp[0] = 0;
??CrossCallReturnLabel_92:
        CLR     A
        MOVX    @DPTR,A
//  906         tmp[1] = BIT_STBY_XYZG;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x7
        LCALL   ??Subroutine106_0 & 0xFFFF
//  907         if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, tmp))
??CrossCallReturnLabel_139:
        JNZ     ??mpu_lp_accel_mode_1
//  908             return -1;
//  909         st.chip_cfg.lp_accel_mode = 0;
        MOV     DPTR,#st + 15
        CLR     A
        MOVX    @DPTR,A
//  910         return 0;
        MOV     R2,A
        MOV     R3,A
        SJMP    ??mpu_lp_accel_mode_2
//  911     }
//  912     /* For LP accel, we automatically configure the hardware to produce latched
//  913      * interrupts. In LP accel mode, the hardware cycles into sleep mode before
//  914      * it gets a chance to deassert the interrupt pin; therefore, we shift this
//  915      * responsibility over to the MCU.
//  916      *
//  917      * Any register read will clear the interrupt.
//  918      */
//  919     mpu_set_int_latched(1);
??mpu_lp_accel_mode_3:
        ; Setup parameters for call to function mpu_set_int_latched
        MOV     R1,#0x1
        LCALL   ?Subroutine65 & 0xFFFF
//  920 #if defined MPU6050
//  921     tmp[0] = BIT_LPA_CYCLE;
??CrossCallReturnLabel_93:
        MOV     A,#0x20
        MOVX    @DPTR,A
//  922     if (rate == 1) {
        MOV     A,#0x1
        XRL     A,R6
        JNZ     ??mpu_lp_accel_mode_4
//  923         tmp[1] = INV_LPA_1_25HZ;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//  924         mpu_set_lpf(5);
        ; Setup parameters for call to function mpu_set_lpf
        MOV     R2,#0x5
        MOV     R3,A
        SJMP    ??mpu_lp_accel_mode_5
//  925     } else if (rate <= 5) {
??mpu_lp_accel_mode_4:
        MOV     A,R6
        CLR     C
        SUBB    A,#0x6
        JNC     ??mpu_lp_accel_mode_6
//  926         tmp[1] = INV_LPA_5HZ;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
//  927         mpu_set_lpf(5);
        ; Setup parameters for call to function mpu_set_lpf
        MOV     R2,#0x5
        SJMP    ??mpu_lp_accel_mode_7
//  928     } else if (rate <= 20) {
??mpu_lp_accel_mode_6:
        MOV     A,R6
        CLR     C
        SUBB    A,#0x15
        MOV     A,#0x1
        JNC     ??mpu_lp_accel_mode_8
//  929         tmp[1] = INV_LPA_20HZ;
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  930         mpu_set_lpf(10);
        ; Setup parameters for call to function mpu_set_lpf
        MOV     R2,#0xa
        SJMP    ??mpu_lp_accel_mode_7
//  931     } else {
//  932         tmp[1] = INV_LPA_40HZ;
??mpu_lp_accel_mode_8:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
//  933         mpu_set_lpf(20);
        ; Setup parameters for call to function mpu_set_lpf
        MOV     R2,#0x14
??mpu_lp_accel_mode_7:
        MOV     R3,#0x0
??mpu_lp_accel_mode_5:
        LCALL   ??mpu_set_lpf?relay
//  934     }
//  935     tmp[1] = (tmp[1] << 6) | BIT_STBY_XYZG;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
//  936     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, tmp))
??CrossCallReturnLabel_137:
        JNZ     ??mpu_lp_accel_mode_1
//  937         return -1;
//  938 #elif defined MPU6500
//  939     /* Set wake frequency. */
//  940     if (rate == 1)
//  941         tmp[0] = INV_LPA_1_25HZ;
//  942     else if (rate == 2)
//  943         tmp[0] = INV_LPA_2_5HZ;
//  944     else if (rate <= 5)
//  945         tmp[0] = INV_LPA_5HZ;
//  946     else if (rate <= 10)
//  947         tmp[0] = INV_LPA_10HZ;
//  948     else if (rate <= 20)
//  949         tmp[0] = INV_LPA_20HZ;
//  950     else if (rate <= 40)
//  951         tmp[0] = INV_LPA_40HZ;
//  952     else if (rate <= 80)
//  953         tmp[0] = INV_LPA_80HZ;
//  954     else if (rate <= 160)
//  955         tmp[0] = INV_LPA_160HZ;
//  956     else if (rate <= 320)
//  957         tmp[0] = INV_LPA_320HZ;
//  958     else
//  959         tmp[0] = INV_LPA_640HZ;
//  960     if (i2c_write(st.hw->addr, st.reg->lp_accel_odr, 1, tmp))
//  961         return -1;
//  962     tmp[0] = BIT_LPA_CYCLE;
//  963     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, tmp))
//  964         return -1;
//  965 #endif
//  966     st.chip_cfg.sensors = INV_XYZ_ACCEL;
        MOV     DPTR,#st + 6
        MOV     A,#0x8
        MOVX    @DPTR,A
//  967     st.chip_cfg.clk_src = 0;
        MOV     DPTR,#st + 8
        CLR     A
        MOVX    @DPTR,A
//  968     st.chip_cfg.lp_accel_mode = 1;
        MOV     DPTR,#st + 15
        INC     A
        MOVX    @DPTR,A
//  969     mpu_configure_fifo(0);
        ; Setup parameters for call to function mpu_configure_fifo
        MOV     R1,#0x0
        LCALL   ??mpu_configure_fifo?relay
//  970 
//  971     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
        CFI EndBlock cfiBlock109
??mpu_lp_accel_mode_2:
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
//  972 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
        CFI Block cfiBlock110 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
        SJMP    ??Subroutine111_0
        CFI EndBlock cfiBlock110

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
        CFI Block cfiCond111 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_92
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond112 Using cfiCommon0
        CFI (cfiCond112) NoFunction
        CFI (cfiCond112) Conditional ??CrossCallReturnLabel_93
        CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond112) CFA_SP SP+0
        CFI (cfiCond112) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker113 Using cfiCommon1
        CFI (cfiPicker113) NoFunction
        CFI (cfiPicker113) Picker
        LCALL   ??mpu_set_int_latched?relay
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond111
        CFI EndBlock cfiCond112
        CFI EndBlock cfiPicker113

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock114 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
        CFI EndBlock cfiBlock114
        REQUIRE ??Subroutine111_0
        ; // Fall through to label ??Subroutine111_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine111_0:
        CFI Block cfiBlock115 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock115
        REQUIRE ??Subroutine112_0
        ; // Fall through to label ??Subroutine112_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine112_0:
        CFI Block cfiBlock116 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock116
//  973 
//  974 /**
//  975  *  @brief      Read raw gyro data directly from the registers.
//  976  *  @param[out] data        Raw data in hardware units.
//  977  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
//  978  *  @return     0 if successful.
//  979  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  980 int mpu_get_gyro_reg(short *data, unsigned long *timestamp)
mpu_get_gyro_reg:
        CFI Block cfiBlock117 Using cfiCommon0
        CFI Function mpu_get_gyro_reg
        CODE
//  981 {
        FUNCALL mpu_get_gyro_reg, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  982     unsigned char tmp[6];
//  983 
//  984     if (!(st.chip_cfg.sensors & INV_XYZ_GYRO))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        ANL     A,#0x70
        JNZ     ??mpu_get_gyro_reg_0
//  985         return -1;
??mpu_get_gyro_reg_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??CrossCallReturnLabel_14
//  986 
//  987     if (i2c_read(st.hw->addr, st.reg->raw_gyro, 6, tmp))
??mpu_get_gyro_reg_0:
        ; Setup parameters for call to function MPU_Read_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x6
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0xc
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_201:
        JNZ     ??mpu_get_gyro_reg_1
//  988         return -1;
//  989     data[0] = (tmp[0] << 8) | tmp[1];
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_38:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine41 & 0xFFFF
//  990     data[1] = (tmp[2] << 8) | tmp[3];
??CrossCallReturnLabel_50:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine36 & 0xFFFF
//  991     data[2] = (tmp[4] << 8) | tmp[5];
??CrossCallReturnLabel_31:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine24 & 0xFFFF
        CFI EndBlock cfiBlock117
//  992     if (timestamp)
//  993         get_ms(timestamp);
//  994     return 0;
??CrossCallReturnLabel_14:
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9
//  995 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
        CFI Block cfiBlock118 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x6
        SJMP    ??Subroutine111_0
        CFI EndBlock cfiBlock118

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
        CFI Block cfiCond119 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_198
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond120 Using cfiCommon0
        CFI (cfiCond120) NoFunction
        CFI (cfiCond120) Conditional ??CrossCallReturnLabel_199
        CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond120) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond120) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond120) CFA_SP SP+0
        CFI (cfiCond120) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker121 Using cfiCommon1
        CFI (cfiPicker121) NoFunction
        CFI (cfiPicker121) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x11
        CFI EndBlock cfiCond119
        CFI EndBlock cfiCond120
        CFI EndBlock cfiPicker121
        REQUIRE ??Subroutine113_0
        ; // Fall through to label ??Subroutine113_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine113_0:
        CFI Block cfiCond122 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_200
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond123 Using cfiCommon0
        CFI (cfiCond123) NoFunction
        CFI (cfiCond123) Conditional ??CrossCallReturnLabel_201
        CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond123) CFA_SP SP+0
        CFI (cfiCond123) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond124 Using cfiCommon0
        CFI (cfiCond124) NoFunction
        CFI (cfiCond124) Conditional ??CrossCallReturnLabel_202
        CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond124) CFA_SP SP+0
        CFI (cfiCond124) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond125 Using cfiCommon0
        CFI (cfiCond125) NoFunction
        CFI (cfiCond125) Conditional ??CrossCallReturnLabel_203
        CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond125) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond125) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond125) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond125) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond125) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond125) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond125) CFA_SP SP+0
        CFI (cfiCond125) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond126 Using cfiCommon0
        CFI (cfiCond126) NoFunction
        CFI (cfiCond126) Conditional ??CrossCallReturnLabel_204
        CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond126) CFA_SP SP+0
        CFI (cfiCond126) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond127 Using cfiCommon0
        CFI (cfiCond127) NoFunction
        CFI (cfiCond127) Conditional ??CrossCallReturnLabel_205
        CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond127) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond127) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond127) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond127) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond127) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond127) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond127) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond127) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond127) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond127) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond127) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond127) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond127) CFA_SP SP+0
        CFI (cfiCond127) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond128 Using cfiCommon0
        CFI (cfiCond128) NoFunction
        CFI (cfiCond128) Conditional ??CrossCallReturnLabel_206
        CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond128) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond128) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond128) CFA_SP SP+0
        CFI (cfiCond128) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond129 Using cfiCommon0
        CFI (cfiCond129) NoFunction
        CFI (cfiCond129) Conditional ??CrossCallReturnLabel_207
        CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond129) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond129) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond129) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond129) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond129) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond129) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond129) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond129) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond129) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond129) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond129) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond129) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond129) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond129) CFA_SP SP+0
        CFI (cfiCond129) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond130 Using cfiCommon0
        CFI (cfiCond130) NoFunction
        CFI (cfiCond130) Conditional ??CrossCallReturnLabel_208
        CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond130) CFA_SP SP+0
        CFI (cfiCond130) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond131 Using cfiCommon0
        CFI (cfiCond131) NoFunction
        CFI (cfiCond131) Conditional ??CrossCallReturnLabel_198
        CFI (cfiCond131) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond131) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond131) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond131) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond131) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond131) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond131) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond131) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond131) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond131) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond131) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond131) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond131) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond131) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond131) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond131) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond131) CFA_SP SP+0
        CFI (cfiCond131) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond132 Using cfiCommon0
        CFI (cfiCond132) NoFunction
        CFI (cfiCond132) Conditional ??CrossCallReturnLabel_199
        CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond132) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond132) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond132) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond132) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond132) CFA_SP SP+0
        CFI (cfiCond132) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker133 Using cfiCommon1
        CFI (cfiPicker133) NoFunction
        CFI (cfiPicker133) Picker
        LCALL   ?Subroutine89 & 0xFFFF
        CFI EndBlock cfiCond122
        CFI EndBlock cfiCond123
        CFI EndBlock cfiCond124
        CFI EndBlock cfiCond125
        CFI EndBlock cfiCond126
        CFI EndBlock cfiCond127
        CFI EndBlock cfiCond128
        CFI EndBlock cfiCond129
        CFI EndBlock cfiCond130
        CFI EndBlock cfiCond131
        CFI EndBlock cfiCond132
        CFI EndBlock cfiPicker133
??CrossCallReturnLabel_195:
        REQUIRE ??Subroutine114_0
        ; // Fall through to label ??Subroutine114_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine114_0:
        CFI Block cfiCond134 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_209
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond135 Using cfiCommon0
        CFI (cfiCond135) NoFunction
        CFI (cfiCond135) Conditional ??CrossCallReturnLabel_210
        CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond135) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond135) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond135) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond135) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond135) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond135) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond135) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond135) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond135) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond135) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond135) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond135) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond135) CFA_SP SP+0
        CFI (cfiCond135) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond136 Using cfiCommon0
        CFI (cfiCond136) NoFunction
        CFI (cfiCond136) Conditional ??CrossCallReturnLabel_211
        CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond136) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond136) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond136) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond136) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond136) CFA_SP SP+0
        CFI (cfiCond136) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond137 Using cfiCommon0
        CFI (cfiCond137) NoFunction
        CFI (cfiCond137) Conditional ??CrossCallReturnLabel_212
        CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond137) CFA_SP SP+0
        CFI (cfiCond137) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond138 Using cfiCommon0
        CFI (cfiCond138) NoFunction
        CFI (cfiCond138) Conditional ??CrossCallReturnLabel_213
        CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond138) CFA_SP SP+0
        CFI (cfiCond138) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond139 Using cfiCommon0
        CFI (cfiCond139) NoFunction
        CFI (cfiCond139) Conditional ??CrossCallReturnLabel_214
        CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond139) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond139) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond139) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond139) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond139) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond139) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond139) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond139) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond139) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond139) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond139) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond139) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond139) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond139) CFA_SP SP+0
        CFI (cfiCond139) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond140 Using cfiCommon0
        CFI (cfiCond140) NoFunction
        CFI (cfiCond140) Conditional ??CrossCallReturnLabel_200
        CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond140) CFA_SP SP+0
        CFI (cfiCond140) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond141 Using cfiCommon0
        CFI (cfiCond141) NoFunction
        CFI (cfiCond141) Conditional ??CrossCallReturnLabel_201
        CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond141) CFA_SP SP+0
        CFI (cfiCond141) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond142 Using cfiCommon0
        CFI (cfiCond142) NoFunction
        CFI (cfiCond142) Conditional ??CrossCallReturnLabel_202
        CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond142) CFA_SP SP+0
        CFI (cfiCond142) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond143 Using cfiCommon0
        CFI (cfiCond143) NoFunction
        CFI (cfiCond143) Conditional ??CrossCallReturnLabel_203
        CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond143) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond143) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond143) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond143) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond143) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond143) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond143) CFA_SP SP+0
        CFI (cfiCond143) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond144 Using cfiCommon0
        CFI (cfiCond144) NoFunction
        CFI (cfiCond144) Conditional ??CrossCallReturnLabel_204
        CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond144) CFA_SP SP+0
        CFI (cfiCond144) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond145 Using cfiCommon0
        CFI (cfiCond145) NoFunction
        CFI (cfiCond145) Conditional ??CrossCallReturnLabel_205
        CFI (cfiCond145) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond145) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond145) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond145) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond145) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond145) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond145) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond145) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond145) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond145) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond145) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond145) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond145) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond145) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond145) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond145) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond145) CFA_SP SP+0
        CFI (cfiCond145) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond146 Using cfiCommon0
        CFI (cfiCond146) NoFunction
        CFI (cfiCond146) Conditional ??CrossCallReturnLabel_206
        CFI (cfiCond146) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond146) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond146) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond146) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond146) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond146) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond146) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond146) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond146) CFA_SP SP+0
        CFI (cfiCond146) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond147 Using cfiCommon0
        CFI (cfiCond147) NoFunction
        CFI (cfiCond147) Conditional ??CrossCallReturnLabel_207
        CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond147) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond147) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond147) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond147) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond147) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond147) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond147) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond147) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond147) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond147) CFA_SP SP+0
        CFI (cfiCond147) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond148 Using cfiCommon0
        CFI (cfiCond148) NoFunction
        CFI (cfiCond148) Conditional ??CrossCallReturnLabel_208
        CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond148) CFA_SP SP+0
        CFI (cfiCond148) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond149 Using cfiCommon0
        CFI (cfiCond149) NoFunction
        CFI (cfiCond149) Conditional ??CrossCallReturnLabel_198
        CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond149) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond149) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond149) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond149) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond149) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond149) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond149) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond149) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond149) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond149) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond149) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond149) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond149) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond149) CFA_SP SP+0
        CFI (cfiCond149) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond150 Using cfiCommon0
        CFI (cfiCond150) NoFunction
        CFI (cfiCond150) Conditional ??CrossCallReturnLabel_199
        CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond150) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond150) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond150) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond150) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond150) CFA_SP SP+0
        CFI (cfiCond150) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker151 Using cfiCommon1
        CFI (cfiPicker151) NoFunction
        CFI (cfiPicker151) Picker
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_216:
        LCALL   ??MPU_Read_Len?relay
        MOV     A,R1
        RET
        CFI EndBlock cfiCond134
        CFI EndBlock cfiCond135
        CFI EndBlock cfiCond136
        CFI EndBlock cfiCond137
        CFI EndBlock cfiCond138
        CFI EndBlock cfiCond139
        CFI EndBlock cfiCond140
        CFI EndBlock cfiCond141
        CFI EndBlock cfiCond142
        CFI EndBlock cfiCond143
        CFI EndBlock cfiCond144
        CFI EndBlock cfiCond145
        CFI EndBlock cfiCond146
        CFI EndBlock cfiCond147
        CFI EndBlock cfiCond148
        CFI EndBlock cfiCond149
        CFI EndBlock cfiCond150
        CFI EndBlock cfiPicker151

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine89:
        CFI Block cfiCond152 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_137
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond153 Using cfiCommon0
        CFI (cfiCond153) NoFunction
        CFI (cfiCond153) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_138
        CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond153) CFA_SP SP+0
        CFI (cfiCond153) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond154 Using cfiCommon0
        CFI (cfiCond154) NoFunction
        CFI (cfiCond154) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_139
        CFI (cfiCond154) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond154) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond154) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond154) CFA_SP SP+0
        CFI (cfiCond154) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond155 Using cfiCommon0
        CFI (cfiCond155) NoFunction
        CFI (cfiCond155) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_140
        CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond155) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond155) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond155) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond155) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond155) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond155) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond155) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond155) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond155) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond155) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond155) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond155) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond155) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond155) CFA_SP SP+0
        CFI (cfiCond155) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond156 Using cfiCommon0
        CFI (cfiCond156) NoFunction
        CFI (cfiCond156) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_141
        CFI (cfiCond156) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond156) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond156) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond156) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond156) CFA_SP SP+0
        CFI (cfiCond156) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond157 Using cfiCommon0
        CFI (cfiCond157) NoFunction
        CFI (cfiCond157) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_142
        CFI (cfiCond157) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond157) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond157) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond157) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond157) CFA_SP SP+0
        CFI (cfiCond157) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond158 Using cfiCommon0
        CFI (cfiCond158) NoFunction
        CFI (cfiCond158) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_143
        CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond158) CFA_SP SP+0
        CFI (cfiCond158) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond159 Using cfiCommon0
        CFI (cfiCond159) NoFunction
        CFI (cfiCond159) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_144
        CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond159) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond159) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond159) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond159) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond159) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond159) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond159) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond159) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond159) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond159) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond159) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond159) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond159) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond159) CFA_SP SP+0
        CFI (cfiCond159) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond160 Using cfiCommon0
        CFI (cfiCond160) NoFunction
        CFI (cfiCond160) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_145
        CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond160) CFA_SP SP+0
        CFI (cfiCond160) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond161 Using cfiCommon0
        CFI (cfiCond161) NoFunction
        CFI (cfiCond161) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_146
        CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond161) CFA_SP SP+0
        CFI (cfiCond161) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond162 Using cfiCommon0
        CFI (cfiCond162) NoFunction
        CFI (cfiCond162) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_147
        CFI (cfiCond162) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond162) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond162) CFA_SP SP+-5
        CFI (cfiCond162) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond163 Using cfiCommon0
        CFI (cfiCond163) NoFunction
        CFI (cfiCond163) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_148
        CFI (cfiCond163) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond163) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond163) CFA_SP SP+-5
        CFI (cfiCond163) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond164 Using cfiCommon0
        CFI (cfiCond164) NoFunction
        CFI (cfiCond164) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_149
        CFI (cfiCond164) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond164) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond164) CFA_SP SP+-5
        CFI (cfiCond164) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond165 Using cfiCommon0
        CFI (cfiCond165) NoFunction
        CFI (cfiCond165) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_150
        CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond165) CFA_SP SP+0
        CFI (cfiCond165) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond166 Using cfiCommon0
        CFI (cfiCond166) NoFunction
        CFI (cfiCond166) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_151
        CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond166) CFA_SP SP+0
        CFI (cfiCond166) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond167 Using cfiCommon0
        CFI (cfiCond167) NoFunction
        CFI (cfiCond167) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_152
        CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond167) CFA_SP SP+0
        CFI (cfiCond167) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond168 Using cfiCommon0
        CFI (cfiCond168) NoFunction
        CFI (cfiCond168) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_153
        CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond168) CFA_SP SP+0
        CFI (cfiCond168) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond169 Using cfiCommon0
        CFI (cfiCond169) NoFunction
        CFI (cfiCond169) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_154
        CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond169) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond169) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond169) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond169) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond169) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond169) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond169) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond169) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond169) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond169) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond169) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond169) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond169) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond169) CFA_SP SP+0
        CFI (cfiCond169) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond170 Using cfiCommon0
        CFI (cfiCond170) NoFunction
        CFI (cfiCond170) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_155
        CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond170) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond170) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond170) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond170) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond170) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond170) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond170) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond170) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond170) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond170) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond170) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond170) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond170) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond170) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond170) CFA_SP SP+0
        CFI (cfiCond170) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond171 Using cfiCommon0
        CFI (cfiCond171) NoFunction
        CFI (cfiCond171) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_156
        CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond171) CFA_SP SP+0
        CFI (cfiCond171) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond172 Using cfiCommon0
        CFI (cfiCond172) NoFunction
        CFI (cfiCond172) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_157
        CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond172) CFA_SP SP+0
        CFI (cfiCond172) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond173 Using cfiCommon0
        CFI (cfiCond173) NoFunction
        CFI (cfiCond173) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_158
        CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond173) CFA_SP SP+0
        CFI (cfiCond173) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond174 Using cfiCommon0
        CFI (cfiCond174) NoFunction
        CFI (cfiCond174) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_159
        CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond174) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond174) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond174) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond174) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond174) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond174) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond174) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond174) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond174) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond174) CFA_SP SP+0
        CFI (cfiCond174) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond175 Using cfiCommon0
        CFI (cfiCond175) NoFunction
        CFI (cfiCond175) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_160
        CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond175) CFA_SP SP+0
        CFI (cfiCond175) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond176 Using cfiCommon0
        CFI (cfiCond176) NoFunction
        CFI (cfiCond176) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_198
        CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond176) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond176) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond176) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond176) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond176) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond176) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond176) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond176) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond176) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond176) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond176) CFA_SP SP+0
        CFI (cfiCond176) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond177 Using cfiCommon0
        CFI (cfiCond177) NoFunction
        CFI (cfiCond177) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_199
        CFI (cfiCond177) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond177) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond177) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond177) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond177) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond177) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond177) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond177) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond177) CFA_SP SP+0
        CFI (cfiCond177) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond178 Using cfiCommon0
        CFI (cfiCond178) NoFunction
        CFI (cfiCond178) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_200
        CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond178) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond178) CFA_SP SP+0
        CFI (cfiCond178) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond179 Using cfiCommon0
        CFI (cfiCond179) NoFunction
        CFI (cfiCond179) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_201
        CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond179) CFA_SP SP+0
        CFI (cfiCond179) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond180 Using cfiCommon0
        CFI (cfiCond180) NoFunction
        CFI (cfiCond180) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_202
        CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond180) CFA_SP SP+0
        CFI (cfiCond180) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond181 Using cfiCommon0
        CFI (cfiCond181) NoFunction
        CFI (cfiCond181) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_203
        CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond181) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond181) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond181) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond181) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond181) CFA_SP SP+0
        CFI (cfiCond181) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond182 Using cfiCommon0
        CFI (cfiCond182) NoFunction
        CFI (cfiCond182) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_204
        CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond182) CFA_SP SP+0
        CFI (cfiCond182) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond183 Using cfiCommon0
        CFI (cfiCond183) NoFunction
        CFI (cfiCond183) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_205
        CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond183) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond183) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond183) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond183) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond183) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond183) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond183) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond183) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond183) CFA_SP SP+0
        CFI (cfiCond183) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond184 Using cfiCommon0
        CFI (cfiCond184) NoFunction
        CFI (cfiCond184) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_206
        CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond184) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond184) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond184) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond184) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond184) CFA_SP SP+0
        CFI (cfiCond184) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond185 Using cfiCommon0
        CFI (cfiCond185) NoFunction
        CFI (cfiCond185) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_207
        CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond185) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond185) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond185) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond185) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond185) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond185) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond185) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond185) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond185) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond185) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond185) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond185) CFA_SP SP+0
        CFI (cfiCond185) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond186 Using cfiCommon0
        CFI (cfiCond186) NoFunction
        CFI (cfiCond186) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_208
        CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond186) CFA_SP SP+0
        CFI (cfiCond186) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker187 Using cfiCommon1
        CFI (cfiPicker187) NoFunction
        CFI (cfiPicker187) Picker
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_197:
        RET
        CFI EndBlock cfiCond152
        CFI EndBlock cfiCond153
        CFI EndBlock cfiCond154
        CFI EndBlock cfiCond155
        CFI EndBlock cfiCond156
        CFI EndBlock cfiCond157
        CFI EndBlock cfiCond158
        CFI EndBlock cfiCond159
        CFI EndBlock cfiCond160
        CFI EndBlock cfiCond161
        CFI EndBlock cfiCond162
        CFI EndBlock cfiCond163
        CFI EndBlock cfiCond164
        CFI EndBlock cfiCond165
        CFI EndBlock cfiCond166
        CFI EndBlock cfiCond167
        CFI EndBlock cfiCond168
        CFI EndBlock cfiCond169
        CFI EndBlock cfiCond170
        CFI EndBlock cfiCond171
        CFI EndBlock cfiCond172
        CFI EndBlock cfiCond173
        CFI EndBlock cfiCond174
        CFI EndBlock cfiCond175
        CFI EndBlock cfiCond176
        CFI EndBlock cfiCond177
        CFI EndBlock cfiCond178
        CFI EndBlock cfiCond179
        CFI EndBlock cfiCond180
        CFI EndBlock cfiCond181
        CFI EndBlock cfiCond182
        CFI EndBlock cfiCond183
        CFI EndBlock cfiCond184
        CFI EndBlock cfiCond185
        CFI EndBlock cfiCond186
        CFI EndBlock cfiPicker187

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine101:
        CFI Block cfiCond188 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_137
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond189 Using cfiCommon0
        CFI (cfiCond189) NoFunction
        CFI (cfiCond189) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_138
        CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond189) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond189) CFA_SP SP+0
        CFI (cfiCond189) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond190 Using cfiCommon0
        CFI (cfiCond190) NoFunction
        CFI (cfiCond190) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_139
        CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond190) CFA_SP SP+0
        CFI (cfiCond190) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond191 Using cfiCommon0
        CFI (cfiCond191) NoFunction
        CFI (cfiCond191) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_140
        CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond191) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond191) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond191) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond191) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond191) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond191) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond191) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond191) CFA_SP SP+0
        CFI (cfiCond191) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond192 Using cfiCommon0
        CFI (cfiCond192) NoFunction
        CFI (cfiCond192) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_141
        CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond192) CFA_SP SP+0
        CFI (cfiCond192) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond193 Using cfiCommon0
        CFI (cfiCond193) NoFunction
        CFI (cfiCond193) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_142
        CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond193) CFA_SP SP+0
        CFI (cfiCond193) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond194 Using cfiCommon0
        CFI (cfiCond194) NoFunction
        CFI (cfiCond194) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_143
        CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond194) CFA_SP SP+0
        CFI (cfiCond194) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond195 Using cfiCommon0
        CFI (cfiCond195) NoFunction
        CFI (cfiCond195) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_144
        CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond195) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond195) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond195) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond195) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond195) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond195) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond195) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond195) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond195) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond195) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond195) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond195) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond195) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond195) CFA_SP SP+0
        CFI (cfiCond195) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond196 Using cfiCommon0
        CFI (cfiCond196) NoFunction
        CFI (cfiCond196) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_145
        CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond196) CFA_SP SP+0
        CFI (cfiCond196) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond197 Using cfiCommon0
        CFI (cfiCond197) NoFunction
        CFI (cfiCond197) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_146
        CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond197) CFA_SP SP+0
        CFI (cfiCond197) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond198 Using cfiCommon0
        CFI (cfiCond198) NoFunction
        CFI (cfiCond198) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_147
        CFI (cfiCond198) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond198) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond198) CFA_SP SP+-5
        CFI (cfiCond198) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond199 Using cfiCommon0
        CFI (cfiCond199) NoFunction
        CFI (cfiCond199) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_148
        CFI (cfiCond199) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond199) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond199) CFA_SP SP+-5
        CFI (cfiCond199) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond200 Using cfiCommon0
        CFI (cfiCond200) NoFunction
        CFI (cfiCond200) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_149
        CFI (cfiCond200) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond200) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond200) CFA_SP SP+-5
        CFI (cfiCond200) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond201 Using cfiCommon0
        CFI (cfiCond201) NoFunction
        CFI (cfiCond201) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_150
        CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond201) CFA_SP SP+0
        CFI (cfiCond201) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond202 Using cfiCommon0
        CFI (cfiCond202) NoFunction
        CFI (cfiCond202) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_151
        CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond202) CFA_SP SP+0
        CFI (cfiCond202) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond203 Using cfiCommon0
        CFI (cfiCond203) NoFunction
        CFI (cfiCond203) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_152
        CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond203) CFA_SP SP+0
        CFI (cfiCond203) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond204 Using cfiCommon0
        CFI (cfiCond204) NoFunction
        CFI (cfiCond204) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_153
        CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond204) CFA_SP SP+0
        CFI (cfiCond204) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond205 Using cfiCommon0
        CFI (cfiCond205) NoFunction
        CFI (cfiCond205) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_154
        CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond205) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond205) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond205) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond205) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond205) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond205) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond205) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond205) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond205) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond205) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond205) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond205) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond205) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond205) CFA_SP SP+0
        CFI (cfiCond205) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond206 Using cfiCommon0
        CFI (cfiCond206) NoFunction
        CFI (cfiCond206) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_155
        CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond206) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond206) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond206) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond206) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond206) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond206) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond206) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond206) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond206) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond206) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond206) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond206) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond206) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond206) CFA_SP SP+0
        CFI (cfiCond206) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond207 Using cfiCommon0
        CFI (cfiCond207) NoFunction
        CFI (cfiCond207) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_156
        CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond207) CFA_SP SP+0
        CFI (cfiCond207) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond208 Using cfiCommon0
        CFI (cfiCond208) NoFunction
        CFI (cfiCond208) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_157
        CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond208) CFA_SP SP+0
        CFI (cfiCond208) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond209 Using cfiCommon0
        CFI (cfiCond209) NoFunction
        CFI (cfiCond209) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_158
        CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond209) CFA_SP SP+0
        CFI (cfiCond209) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond210 Using cfiCommon0
        CFI (cfiCond210) NoFunction
        CFI (cfiCond210) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_159
        CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond210) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond210) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond210) CFA_SP SP+0
        CFI (cfiCond210) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond211 Using cfiCommon0
        CFI (cfiCond211) NoFunction
        CFI (cfiCond211) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_160
        CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond211) CFA_SP SP+0
        CFI (cfiCond211) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond212 Using cfiCommon0
        CFI (cfiCond212) NoFunction
        CFI (cfiCond212) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_198
        CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond212) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond212) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond212) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond212) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond212) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond212) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond212) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond212) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond212) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond212) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond212) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond212) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond212) CFA_SP SP+0
        CFI (cfiCond212) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond213 Using cfiCommon0
        CFI (cfiCond213) NoFunction
        CFI (cfiCond213) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_199
        CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond213) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond213) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond213) CFA_SP SP+0
        CFI (cfiCond213) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond214 Using cfiCommon0
        CFI (cfiCond214) NoFunction
        CFI (cfiCond214) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_200
        CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond214) CFA_SP SP+0
        CFI (cfiCond214) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond215 Using cfiCommon0
        CFI (cfiCond215) NoFunction
        CFI (cfiCond215) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_201
        CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond215) CFA_SP SP+0
        CFI (cfiCond215) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond216 Using cfiCommon0
        CFI (cfiCond216) NoFunction
        CFI (cfiCond216) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_202
        CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond216) CFA_SP SP+0
        CFI (cfiCond216) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond217 Using cfiCommon0
        CFI (cfiCond217) NoFunction
        CFI (cfiCond217) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_203
        CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond217) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond217) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond217) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond217) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond217) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond217) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond217) CFA_SP SP+0
        CFI (cfiCond217) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond218 Using cfiCommon0
        CFI (cfiCond218) NoFunction
        CFI (cfiCond218) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_204
        CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond218) CFA_SP SP+0
        CFI (cfiCond218) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond219 Using cfiCommon0
        CFI (cfiCond219) NoFunction
        CFI (cfiCond219) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_205
        CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond219) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond219) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond219) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond219) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond219) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond219) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond219) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond219) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond219) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond219) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond219) CFA_SP SP+0
        CFI (cfiCond219) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond220 Using cfiCommon0
        CFI (cfiCond220) NoFunction
        CFI (cfiCond220) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_206
        CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond220) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond220) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond220) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond220) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond220) CFA_SP SP+0
        CFI (cfiCond220) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond221 Using cfiCommon0
        CFI (cfiCond221) NoFunction
        CFI (cfiCond221) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_207
        CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond221) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond221) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond221) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond221) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond221) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond221) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond221) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond221) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond221) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond221) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond221) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond221) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond221) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond221) CFA_SP SP+0
        CFI (cfiCond221) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond222 Using cfiCommon0
        CFI (cfiCond222) NoFunction
        CFI (cfiCond222) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_208
        CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond222) CFA_SP SP+0
        CFI (cfiCond222) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond223 Using cfiCommon0
        CFI (cfiCond223) NoFunction
        CFI (cfiCond223) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_190
        CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond223) CFA_SP SP+0
        CFI (cfiCond223) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond224 Using cfiCommon0
        CFI (cfiCond224) NoFunction
        CFI (cfiCond224) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_191
        CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond224) CFA_SP SP+0
        CFI (cfiCond224) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond225 Using cfiCommon0
        CFI (cfiCond225) NoFunction
        CFI (cfiCond225) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_188
        CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond225) CFA_SP SP+0
        CFI (cfiCond225) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond226 Using cfiCommon0
        CFI (cfiCond226) NoFunction
        CFI (cfiCond226) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_189
        CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond226) CFA_SP SP+0
        CFI (cfiCond226) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond227 Using cfiCommon0
        CFI (cfiCond227) NoFunction
        CFI (cfiCond227) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_192
        CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond227) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond227) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond227) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond227) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond227) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond227) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond227) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond227) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond227) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond227) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond227) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond227) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond227) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond227) CFA_SP SP+0
        CFI (cfiCond227) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker228 Using cfiCommon1
        CFI (cfiPicker228) NoFunction
        CFI (cfiPicker228) Picker
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        RET
        CFI EndBlock cfiCond188
        CFI EndBlock cfiCond189
        CFI EndBlock cfiCond190
        CFI EndBlock cfiCond191
        CFI EndBlock cfiCond192
        CFI EndBlock cfiCond193
        CFI EndBlock cfiCond194
        CFI EndBlock cfiCond195
        CFI EndBlock cfiCond196
        CFI EndBlock cfiCond197
        CFI EndBlock cfiCond198
        CFI EndBlock cfiCond199
        CFI EndBlock cfiCond200
        CFI EndBlock cfiCond201
        CFI EndBlock cfiCond202
        CFI EndBlock cfiCond203
        CFI EndBlock cfiCond204
        CFI EndBlock cfiCond205
        CFI EndBlock cfiCond206
        CFI EndBlock cfiCond207
        CFI EndBlock cfiCond208
        CFI EndBlock cfiCond209
        CFI EndBlock cfiCond210
        CFI EndBlock cfiCond211
        CFI EndBlock cfiCond212
        CFI EndBlock cfiCond213
        CFI EndBlock cfiCond214
        CFI EndBlock cfiCond215
        CFI EndBlock cfiCond216
        CFI EndBlock cfiCond217
        CFI EndBlock cfiCond218
        CFI EndBlock cfiCond219
        CFI EndBlock cfiCond220
        CFI EndBlock cfiCond221
        CFI EndBlock cfiCond222
        CFI EndBlock cfiCond223
        CFI EndBlock cfiCond224
        CFI EndBlock cfiCond225
        CFI EndBlock cfiCond226
        CFI EndBlock cfiCond227
        CFI EndBlock cfiPicker228

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
        CFI Block cfiCond229 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_137
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond230 Using cfiCommon0
        CFI (cfiCond230) NoFunction
        CFI (cfiCond230) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_138
        CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond230) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond230) CFA_SP SP+0
        CFI (cfiCond230) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond231 Using cfiCommon0
        CFI (cfiCond231) NoFunction
        CFI (cfiCond231) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_139
        CFI (cfiCond231) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond231) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond231) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond231) CFA_SP SP+0
        CFI (cfiCond231) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond232 Using cfiCommon0
        CFI (cfiCond232) NoFunction
        CFI (cfiCond232) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_140
        CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond232) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond232) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond232) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond232) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond232) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond232) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond232) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond232) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond232) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond232) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond232) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond232) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond232) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond232) CFA_SP SP+0
        CFI (cfiCond232) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond233 Using cfiCommon0
        CFI (cfiCond233) NoFunction
        CFI (cfiCond233) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_141
        CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond233) CFA_SP SP+0
        CFI (cfiCond233) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond234 Using cfiCommon0
        CFI (cfiCond234) NoFunction
        CFI (cfiCond234) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_142
        CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond234) CFA_SP SP+0
        CFI (cfiCond234) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond235 Using cfiCommon0
        CFI (cfiCond235) NoFunction
        CFI (cfiCond235) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_143
        CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond235) CFA_SP SP+0
        CFI (cfiCond235) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond236 Using cfiCommon0
        CFI (cfiCond236) NoFunction
        CFI (cfiCond236) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_144
        CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond236) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond236) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond236) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond236) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond236) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond236) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond236) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond236) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond236) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond236) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond236) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond236) CFA_SP SP+0
        CFI (cfiCond236) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond237 Using cfiCommon0
        CFI (cfiCond237) NoFunction
        CFI (cfiCond237) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_145
        CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond237) CFA_SP SP+0
        CFI (cfiCond237) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond238 Using cfiCommon0
        CFI (cfiCond238) NoFunction
        CFI (cfiCond238) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_146
        CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond238) CFA_SP SP+0
        CFI (cfiCond238) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond239 Using cfiCommon0
        CFI (cfiCond239) NoFunction
        CFI (cfiCond239) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_147
        CFI (cfiCond239) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond239) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond239) CFA_SP SP+-5
        CFI (cfiCond239) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond240 Using cfiCommon0
        CFI (cfiCond240) NoFunction
        CFI (cfiCond240) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_148
        CFI (cfiCond240) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond240) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond240) CFA_SP SP+-5
        CFI (cfiCond240) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond241 Using cfiCommon0
        CFI (cfiCond241) NoFunction
        CFI (cfiCond241) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_149
        CFI (cfiCond241) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond241) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond241) CFA_SP SP+-5
        CFI (cfiCond241) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond242 Using cfiCommon0
        CFI (cfiCond242) NoFunction
        CFI (cfiCond242) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_150
        CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond242) CFA_SP SP+0
        CFI (cfiCond242) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond243 Using cfiCommon0
        CFI (cfiCond243) NoFunction
        CFI (cfiCond243) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_151
        CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond243) CFA_SP SP+0
        CFI (cfiCond243) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond244 Using cfiCommon0
        CFI (cfiCond244) NoFunction
        CFI (cfiCond244) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_152
        CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond244) CFA_SP SP+0
        CFI (cfiCond244) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond245 Using cfiCommon0
        CFI (cfiCond245) NoFunction
        CFI (cfiCond245) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_153
        CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond245) CFA_SP SP+0
        CFI (cfiCond245) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond246 Using cfiCommon0
        CFI (cfiCond246) NoFunction
        CFI (cfiCond246) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_154
        CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond246) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond246) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond246) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond246) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond246) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond246) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond246) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond246) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond246) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond246) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond246) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond246) CFA_SP SP+0
        CFI (cfiCond246) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond247 Using cfiCommon0
        CFI (cfiCond247) NoFunction
        CFI (cfiCond247) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_155
        CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond247) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond247) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond247) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond247) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond247) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond247) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond247) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond247) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond247) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond247) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond247) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond247) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond247) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond247) CFA_SP SP+0
        CFI (cfiCond247) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond248 Using cfiCommon0
        CFI (cfiCond248) NoFunction
        CFI (cfiCond248) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_156
        CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond248) CFA_SP SP+0
        CFI (cfiCond248) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond249 Using cfiCommon0
        CFI (cfiCond249) NoFunction
        CFI (cfiCond249) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_157
        CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond249) CFA_SP SP+0
        CFI (cfiCond249) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond250 Using cfiCommon0
        CFI (cfiCond250) NoFunction
        CFI (cfiCond250) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_158
        CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond250) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond250) CFA_SP SP+0
        CFI (cfiCond250) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond251 Using cfiCommon0
        CFI (cfiCond251) NoFunction
        CFI (cfiCond251) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_159
        CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond251) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond251) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond251) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond251) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond251) CFA_SP SP+0
        CFI (cfiCond251) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond252 Using cfiCommon0
        CFI (cfiCond252) NoFunction
        CFI (cfiCond252) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_160
        CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond252) CFA_SP SP+0
        CFI (cfiCond252) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond253 Using cfiCommon0
        CFI (cfiCond253) NoFunction
        CFI (cfiCond253) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_161
        CFI (cfiCond253) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond253) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond253) CFA_SP SP+-5
        CFI (cfiCond253) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond254 Using cfiCommon0
        CFI (cfiCond254) NoFunction
        CFI (cfiCond254) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_162
        CFI (cfiCond254) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond254) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond254) CFA_SP SP+-5
        CFI (cfiCond254) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond255 Using cfiCommon0
        CFI (cfiCond255) NoFunction
        CFI (cfiCond255) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_163
        CFI (cfiCond255) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond255) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond255) CFA_SP SP+-5
        CFI (cfiCond255) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond256 Using cfiCommon0
        CFI (cfiCond256) NoFunction
        CFI (cfiCond256) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_164
        CFI (cfiCond256) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond256) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond256) CFA_SP SP+-5
        CFI (cfiCond256) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond257 Using cfiCommon0
        CFI (cfiCond257) NoFunction
        CFI (cfiCond257) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_165
        CFI (cfiCond257) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond257) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond257) CFA_SP SP+-5
        CFI (cfiCond257) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond258 Using cfiCommon0
        CFI (cfiCond258) NoFunction
        CFI (cfiCond258) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_166
        CFI (cfiCond258) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond258) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond258) CFA_SP SP+-5
        CFI (cfiCond258) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond259 Using cfiCommon0
        CFI (cfiCond259) NoFunction
        CFI (cfiCond259) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_167
        CFI (cfiCond259) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond259) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond259) CFA_SP SP+-5
        CFI (cfiCond259) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond260 Using cfiCommon0
        CFI (cfiCond260) NoFunction
        CFI (cfiCond260) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_168
        CFI (cfiCond260) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond260) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond260) CFA_SP SP+-5
        CFI (cfiCond260) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond261 Using cfiCommon0
        CFI (cfiCond261) NoFunction
        CFI (cfiCond261) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_169
        CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond261) CFA_SP SP+0
        CFI (cfiCond261) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond262 Using cfiCommon0
        CFI (cfiCond262) NoFunction
        CFI (cfiCond262) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_170
        CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond262) CFA_SP SP+0
        CFI (cfiCond262) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond263 Using cfiCommon0
        CFI (cfiCond263) NoFunction
        CFI (cfiCond263) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_171
        CFI (cfiCond263) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond263) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond263) CFA_SP SP+-5
        CFI (cfiCond263) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond264 Using cfiCommon0
        CFI (cfiCond264) NoFunction
        CFI (cfiCond264) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_172
        CFI (cfiCond264) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond264) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond264) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond264) CFA_SP SP+0
        CFI (cfiCond264) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond265 Using cfiCommon0
        CFI (cfiCond265) NoFunction
        CFI (cfiCond265) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_173
        CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond265) CFA_SP SP+0
        CFI (cfiCond265) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond266 Using cfiCommon0
        CFI (cfiCond266) NoFunction
        CFI (cfiCond266) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_174
        CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond266) CFA_SP SP+0
        CFI (cfiCond266) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond267 Using cfiCommon0
        CFI (cfiCond267) NoFunction
        CFI (cfiCond267) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_175
        CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond267) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond267) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond267) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond267) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond267) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond267) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond267) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond267) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond267) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond267) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond267) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond267) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond267) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond267) CFA_SP SP+0
        CFI (cfiCond267) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond268 Using cfiCommon0
        CFI (cfiCond268) NoFunction
        CFI (cfiCond268) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_176
        CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond268) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond268) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond268) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond268) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond268) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond268) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond268) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond268) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond268) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond268) CFA_SP SP+0
        CFI (cfiCond268) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond269 Using cfiCommon0
        CFI (cfiCond269) NoFunction
        CFI (cfiCond269) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_177
        CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond269) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond269) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond269) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond269) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond269) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond269) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond269) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond269) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond269) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond269) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond269) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond269) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond269) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond269) CFA_SP SP+0
        CFI (cfiCond269) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond270 Using cfiCommon0
        CFI (cfiCond270) NoFunction
        CFI (cfiCond270) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_178
        CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond270) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond270) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond270) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond270) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond270) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond270) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond270) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond270) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond270) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond270) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond270) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond270) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond270) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond270) CFA_SP SP+0
        CFI (cfiCond270) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond271 Using cfiCommon0
        CFI (cfiCond271) NoFunction
        CFI (cfiCond271) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_179
        CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond271) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond271) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond271) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond271) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond271) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond271) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond271) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond271) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond271) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond271) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond271) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond271) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond271) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond271) CFA_SP SP+0
        CFI (cfiCond271) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond272 Using cfiCommon0
        CFI (cfiCond272) NoFunction
        CFI (cfiCond272) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_180
        CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond272) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond272) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond272) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond272) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond272) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond272) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond272) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond272) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond272) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond272) CFA_SP SP+0
        CFI (cfiCond272) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond273 Using cfiCommon0
        CFI (cfiCond273) NoFunction
        CFI (cfiCond273) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_181
        CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond273) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond273) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond273) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond273) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond273) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond273) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond273) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond273) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond273) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond273) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond273) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond273) CFA_SP SP+0
        CFI (cfiCond273) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond274 Using cfiCommon0
        CFI (cfiCond274) NoFunction
        CFI (cfiCond274) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_182
        CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond274) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond274) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond274) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond274) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond274) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond274) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond274) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond274) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond274) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond274) CFA_SP SP+0
        CFI (cfiCond274) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond275 Using cfiCommon0
        CFI (cfiCond275) NoFunction
        CFI (cfiCond275) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_183
        CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond275) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond275) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond275) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond275) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond275) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond275) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond275) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond275) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond275) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond275) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond275) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond275) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond275) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond275) CFA_SP SP+0
        CFI (cfiCond275) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond276 Using cfiCommon0
        CFI (cfiCond276) NoFunction
        CFI (cfiCond276) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_184
        CFI (cfiCond276) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond276) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond276) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond276) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond276) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond276) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond276) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond276) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond276) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond276) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond276) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond276) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond276) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond276) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond276) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond276) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond276) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond276) CFA_SP SP+0
        CFI (cfiCond276) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond277 Using cfiCommon0
        CFI (cfiCond277) NoFunction
        CFI (cfiCond277) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_185
        CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond277) CFA_SP SP+0
        CFI (cfiCond277) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond278 Using cfiCommon0
        CFI (cfiCond278) NoFunction
        CFI (cfiCond278) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_186
        CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond278) CFA_SP SP+0
        CFI (cfiCond278) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond279 Using cfiCommon0
        CFI (cfiCond279) NoFunction
        CFI (cfiCond279) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_187
        CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond279) CFA_SP SP+0
        CFI (cfiCond279) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond280 Using cfiCommon0
        CFI (cfiCond280) NoFunction
        CFI (cfiCond280) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_198
        CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond280) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond280) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond280) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond280) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond280) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond280) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond280) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond280) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond280) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond280) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond280) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond280) CFA_SP SP+0
        CFI (cfiCond280) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond281 Using cfiCommon0
        CFI (cfiCond281) NoFunction
        CFI (cfiCond281) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_199
        CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond281) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond281) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond281) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond281) CFA_SP SP+0
        CFI (cfiCond281) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond282 Using cfiCommon0
        CFI (cfiCond282) NoFunction
        CFI (cfiCond282) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_200
        CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond282) CFA_SP SP+0
        CFI (cfiCond282) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond283 Using cfiCommon0
        CFI (cfiCond283) NoFunction
        CFI (cfiCond283) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_201
        CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond283) CFA_SP SP+0
        CFI (cfiCond283) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond284 Using cfiCommon0
        CFI (cfiCond284) NoFunction
        CFI (cfiCond284) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_202
        CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond284) CFA_SP SP+0
        CFI (cfiCond284) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond285 Using cfiCommon0
        CFI (cfiCond285) NoFunction
        CFI (cfiCond285) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_203
        CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond285) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond285) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond285) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond285) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond285) CFA_SP SP+0
        CFI (cfiCond285) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond286 Using cfiCommon0
        CFI (cfiCond286) NoFunction
        CFI (cfiCond286) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_204
        CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond286) CFA_SP SP+0
        CFI (cfiCond286) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond287 Using cfiCommon0
        CFI (cfiCond287) NoFunction
        CFI (cfiCond287) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_205
        CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond287) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond287) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond287) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond287) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond287) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond287) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond287) CFA_SP SP+0
        CFI (cfiCond287) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond288 Using cfiCommon0
        CFI (cfiCond288) NoFunction
        CFI (cfiCond288) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_206
        CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond288) CFA_SP SP+0
        CFI (cfiCond288) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond289 Using cfiCommon0
        CFI (cfiCond289) NoFunction
        CFI (cfiCond289) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_207
        CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond289) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond289) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond289) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond289) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond289) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond289) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond289) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond289) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond289) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond289) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond289) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond289) CFA_SP SP+0
        CFI (cfiCond289) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond290 Using cfiCommon0
        CFI (cfiCond290) NoFunction
        CFI (cfiCond290) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_208
        CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond290) CFA_SP SP+0
        CFI (cfiCond290) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond291 Using cfiCommon0
        CFI (cfiCond291) NoFunction
        CFI (cfiCond291) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_209
        CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond291) CFA_SP SP+0
        CFI (cfiCond291) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond292 Using cfiCommon0
        CFI (cfiCond292) NoFunction
        CFI (cfiCond292) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_210
        CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond292) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond292) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond292) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond292) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond292) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond292) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond292) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond292) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond292) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond292) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond292) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond292) CFA_SP SP+0
        CFI (cfiCond292) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond293 Using cfiCommon0
        CFI (cfiCond293) NoFunction
        CFI (cfiCond293) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_211
        CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond293) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond293) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond293) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond293) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond293) CFA_SP SP+0
        CFI (cfiCond293) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond294 Using cfiCommon0
        CFI (cfiCond294) NoFunction
        CFI (cfiCond294) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_212
        CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond294) CFA_SP SP+0
        CFI (cfiCond294) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond295 Using cfiCommon0
        CFI (cfiCond295) NoFunction
        CFI (cfiCond295) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_213
        CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond295) CFA_SP SP+0
        CFI (cfiCond295) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond296 Using cfiCommon0
        CFI (cfiCond296) NoFunction
        CFI (cfiCond296) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_214
        CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond296) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond296) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond296) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond296) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond296) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond296) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond296) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond296) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond296) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond296) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond296) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond296) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond296) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond296) CFA_SP SP+0
        CFI (cfiCond296) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker297 Using cfiCommon1
        CFI (cfiPicker297) NoFunction
        CFI (cfiPicker297) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_263:
        RET
        CFI EndBlock cfiCond229
        CFI EndBlock cfiCond230
        CFI EndBlock cfiCond231
        CFI EndBlock cfiCond232
        CFI EndBlock cfiCond233
        CFI EndBlock cfiCond234
        CFI EndBlock cfiCond235
        CFI EndBlock cfiCond236
        CFI EndBlock cfiCond237
        CFI EndBlock cfiCond238
        CFI EndBlock cfiCond239
        CFI EndBlock cfiCond240
        CFI EndBlock cfiCond241
        CFI EndBlock cfiCond242
        CFI EndBlock cfiCond243
        CFI EndBlock cfiCond244
        CFI EndBlock cfiCond245
        CFI EndBlock cfiCond246
        CFI EndBlock cfiCond247
        CFI EndBlock cfiCond248
        CFI EndBlock cfiCond249
        CFI EndBlock cfiCond250
        CFI EndBlock cfiCond251
        CFI EndBlock cfiCond252
        CFI EndBlock cfiCond253
        CFI EndBlock cfiCond254
        CFI EndBlock cfiCond255
        CFI EndBlock cfiCond256
        CFI EndBlock cfiCond257
        CFI EndBlock cfiCond258
        CFI EndBlock cfiCond259
        CFI EndBlock cfiCond260
        CFI EndBlock cfiCond261
        CFI EndBlock cfiCond262
        CFI EndBlock cfiCond263
        CFI EndBlock cfiCond264
        CFI EndBlock cfiCond265
        CFI EndBlock cfiCond266
        CFI EndBlock cfiCond267
        CFI EndBlock cfiCond268
        CFI EndBlock cfiCond269
        CFI EndBlock cfiCond270
        CFI EndBlock cfiCond271
        CFI EndBlock cfiCond272
        CFI EndBlock cfiCond273
        CFI EndBlock cfiCond274
        CFI EndBlock cfiCond275
        CFI EndBlock cfiCond276
        CFI EndBlock cfiCond277
        CFI EndBlock cfiCond278
        CFI EndBlock cfiCond279
        CFI EndBlock cfiCond280
        CFI EndBlock cfiCond281
        CFI EndBlock cfiCond282
        CFI EndBlock cfiCond283
        CFI EndBlock cfiCond284
        CFI EndBlock cfiCond285
        CFI EndBlock cfiCond286
        CFI EndBlock cfiCond287
        CFI EndBlock cfiCond288
        CFI EndBlock cfiCond289
        CFI EndBlock cfiCond290
        CFI EndBlock cfiCond291
        CFI EndBlock cfiCond292
        CFI EndBlock cfiCond293
        CFI EndBlock cfiCond294
        CFI EndBlock cfiCond295
        CFI EndBlock cfiCond296
        CFI EndBlock cfiPicker297
//  996 
//  997 /**
//  998  *  @brief      Read raw accel data directly from the registers.
//  999  *  @param[out] data        Raw data in hardware units.
// 1000  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
// 1001  *  @return     0 if successful.
// 1002  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1003 int mpu_get_accel_reg(short *data, unsigned long *timestamp)
mpu_get_accel_reg:
        CFI Block cfiBlock298 Using cfiCommon0
        CFI Function mpu_get_accel_reg
        CODE
// 1004 {
        FUNCALL mpu_get_accel_reg, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1005     unsigned char tmp[6];
// 1006 
// 1007     if (!(st.chip_cfg.sensors & INV_XYZ_ACCEL))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.3
        JC      ??mpu_get_accel_reg_0
// 1008         return -1;
??mpu_get_accel_reg_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??CrossCallReturnLabel_15
// 1009 
// 1010     if (i2c_read(st.hw->addr, st.reg->raw_accel, 6, tmp))
??mpu_get_accel_reg_0:
        ; Setup parameters for call to function MPU_Read_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x6
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0xd
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_202:
        JNZ     ??mpu_get_accel_reg_1
// 1011         return -1;
// 1012     data[0] = (tmp[0] << 8) | tmp[1];
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_39:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine41 & 0xFFFF
// 1013     data[1] = (tmp[2] << 8) | tmp[3];
??CrossCallReturnLabel_51:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine36 & 0xFFFF
// 1014     data[2] = (tmp[4] << 8) | tmp[5];
??CrossCallReturnLabel_32:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine24 & 0xFFFF
// 1015     if (timestamp)
// 1016         get_ms(timestamp);
// 1017     return 0;
??CrossCallReturnLabel_15:
        LJMP    ?Subroutine9 & 0xFFFF
        CFI EndBlock cfiBlock298
// 1018 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
        CFI Block cfiCond299 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_50
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond300 Using cfiCommon0
        CFI (cfiCond300) NoFunction
        CFI (cfiCond300) Conditional ??CrossCallReturnLabel_51
        CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond300) CFA_SP SP+0
        CFI (cfiCond300) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker301 Using cfiCommon1
        CFI (cfiPicker301) NoFunction
        CFI (cfiPicker301) Picker
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_124:
        LCALL   ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_246:
        MOV     A,#0x2
        RET
        CFI EndBlock cfiCond299
        CFI EndBlock cfiCond300
        CFI EndBlock cfiPicker301

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
        CFI Block cfiCond302 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_31
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond303 Using cfiCommon0
        CFI (cfiCond303) NoFunction
        CFI (cfiCond303) Conditional ??CrossCallReturnLabel_32
        CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond303) CFA_SP SP+0
        CFI (cfiCond303) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker304 Using cfiCommon1
        CFI (cfiPicker304) NoFunction
        CFI (cfiPicker304) Picker
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_123:
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_248:
        MOV     A,#0x4
        RET
        CFI EndBlock cfiCond302
        CFI EndBlock cfiCond303
        CFI EndBlock cfiPicker304

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
        CFI Block cfiCond305 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_14
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond306 Using cfiCommon0
        CFI (cfiCond306) NoFunction
        CFI (cfiCond306) Conditional ??CrossCallReturnLabel_15
        CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond306) CFA_SP SP+0
        CFI (cfiCond306) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker307 Using cfiCommon1
        CFI (cfiPicker307) NoFunction
        CFI (cfiPicker307) Picker
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_122:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_247:
        MOV     R2,#0x0
        MOV     R3,#0x0
        RET
        CFI EndBlock cfiCond305
        CFI EndBlock cfiCond306
        CFI EndBlock cfiPicker307

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine86:
        CFI Block cfiCond308 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_50
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond309 Using cfiCommon0
        CFI (cfiCond309) NoFunction
        CFI (cfiCond309) Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_51
        CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond309) CFA_SP SP+0
        CFI (cfiCond309) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond310 Using cfiCommon0
        CFI (cfiCond310) NoFunction
        CFI (cfiCond310) Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_31
        CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond310) CFA_SP SP+0
        CFI (cfiCond310) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond311 Using cfiCommon0
        CFI (cfiCond311) NoFunction
        CFI (cfiCond311) Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_32
        CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond311) CFA_SP SP+0
        CFI (cfiCond311) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond312 Using cfiCommon0
        CFI (cfiCond312) NoFunction
        CFI (cfiCond312) Conditional ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_14
        CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond312) CFA_SP SP+0
        CFI (cfiCond312) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond313 Using cfiCommon0
        CFI (cfiCond313) NoFunction
        CFI (cfiCond313) Conditional ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_15
        CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond313) CFA_SP SP+0
        CFI (cfiCond313) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond314 Using cfiCommon0
        CFI (cfiCond314) NoFunction
        CFI (cfiCond314) Conditional ??CrossCallReturnLabel_121
        CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond314) CFA_SP SP+0
        CFI (cfiCond314) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker315 Using cfiCommon1
        CFI (cfiPicker315) NoFunction
        CFI (cfiPicker315) Picker
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        RET
        CFI EndBlock cfiCond308
        CFI EndBlock cfiCond309
        CFI EndBlock cfiCond310
        CFI EndBlock cfiCond311
        CFI EndBlock cfiCond312
        CFI EndBlock cfiCond313
        CFI EndBlock cfiCond314
        CFI EndBlock cfiPicker315
// 1019 
// 1020 /**
// 1021  *  @brief      Read temperature data directly from the registers.
// 1022  *  @param[out] data        Data in q16 format.
// 1023  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
// 1024  *  @return     0 if successful.
// 1025  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1026 int mpu_get_temperature(long *data, unsigned long *timestamp)
mpu_get_temperature:
        CFI Block cfiBlock316 Using cfiCommon0
        CFI Function mpu_get_temperature
        CODE
// 1027 {
        FUNCALL mpu_get_temperature, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1028     unsigned char tmp[2];
// 1029     short raw;
// 1030 
// 1031     if (!(st.chip_cfg.sensors))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_get_temperature_0
// 1032         return -1;
??mpu_get_temperature_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_get_temperature_2 & 0xFFFF
// 1033 
// 1034     if (i2c_read(st.hw->addr, st.reg->temp, 2, tmp))
??mpu_get_temperature_0:
        ; Setup parameters for call to function MPU_Read_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x2
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0xe
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_203:
        JNZ     ??mpu_get_temperature_1
// 1035         return -1;
// 1036     raw = (tmp[0] << 8) | tmp[1];
// 1037     if (timestamp)
// 1038         get_ms(timestamp);
// 1039 
// 1040     data[0] = (long)((35 + ((raw - (float)st.hw->temp_offset) / st.hw->temp_sens)) * 65536L);
        MOV     DPTR,#st + 2
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_40:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     A,R1
        MOV     ?V0 + 1,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_2:
        MOV     R0,#?V0 + 4
        LCALL   ?L_TO_FLT
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_SUB
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_112:
        CLR     A
        MOV     ?V0 + 6,A
        MOV     ?V0 + 7,A
        MOV     R0,#?V0 + 4
        LCALL   ?UL_TO_FLT
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     DPTR,#__Constant_420c0000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_ADD
        MOV     DPTR,#__Constant_47800000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 1041     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_get_temperature_2:
        MOV     A,#0x2
        LJMP    ?Subroutine2 & 0xFFFF
        CFI EndBlock cfiBlock316
// 1042 }
// 1043 
// 1044 /**
// 1045  *  @brief      Push biases to the accel bias registers.
// 1046  *  This function expects biases relative to the current sensor output, and
// 1047  *  these biases will be added to the factory-supplied values.
// 1048  *  @param[in]  accel_bias  New biases.
// 1049  *  @return     0 if successful.
// 1050  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1051 int mpu_set_accel_bias(const long *accel_bias)
mpu_set_accel_bias:
        CFI Block cfiBlock317 Using cfiCommon0
        CFI Function mpu_set_accel_bias
        CODE
// 1052 {
        FUNCALL mpu_set_accel_bias, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_accel_bias, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_accel_bias, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 24
        MOV     A,#-0x18
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 40)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1053     unsigned char data[6];
// 1054     short accel_hw[3];
// 1055     short got_accel[3];
// 1056     short fg[3];
// 1057 
// 1058     if (!accel_bias)
        MOV     A,R6
        ORL     A,R7
        JNZ     ??mpu_set_accel_bias_0
// 1059         return -1;
??mpu_set_accel_bias_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
??mpu_set_accel_bias_2:
        MOV     A,#0x18
        LJMP    ?Subroutine2 & 0xFFFF
// 1060     if (!accel_bias[0] && !accel_bias[1] && !accel_bias[2])
??mpu_set_accel_bias_0:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_83:
        JNZ     ??mpu_set_accel_bias_3
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_84:
        JNZ     ??mpu_set_accel_bias_3
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_85:
        JNZ     ??mpu_set_accel_bias_3
// 1061         return 0;
??mpu_set_accel_bias_4:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??mpu_set_accel_bias_2
// 1062 
// 1063     if (i2c_read(st.hw->addr, 3, 3, data))
??mpu_set_accel_bias_3:
        ; Setup parameters for call to function MPU_Read_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x3
        MOV     R2,#0x3
        LCALL   ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_259:
        JNZ     ??mpu_set_accel_bias_1
// 1064         return -1;
// 1065     fg[0] = ((data[0] >> 4) + 8) & 0xf;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_33:
        MOV     R0,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 1066     fg[1] = ((data[1] >> 4) + 8) & 0xf;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_34:
        MOV     R4,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 1067     fg[2] = ((data[2] >> 4) + 8) & 0xf;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_35:
        MOV     R2,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 1068 
// 1069     accel_hw[0] = (short)(accel_bias[0] * 2 / (64 + fg[0]));
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     A,#0x1
        MOV     R0,#?V0 + 4
        LCALL   ?L_SHL
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#0x40
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?L_DIV_MOD
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        LCALL   ?Subroutine55 & 0xFFFF
// 1070     accel_hw[1] = (short)(accel_bias[1] * 2 / (64 + fg[1]));
??CrossCallReturnLabel_72:
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     A,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?L_SHL
        MOV     A,R4
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_88:
        LCALL   ?L_DIV_MOD
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        LCALL   ?Subroutine55 & 0xFFFF
// 1071     accel_hw[2] = (short)(accel_bias[2] * 2 / (64 + fg[2]));
??CrossCallReturnLabel_73:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     A,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?L_SHL
        MOV     A,R2
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_89:
        LCALL   ?L_DIV_MOD
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        LCALL   ?Subroutine51 & 0xFFFF
// 1072 
// 1073     if (i2c_read(st.hw->addr, 0x06, 6, data))
??CrossCallReturnLabel_68:
        LCALL   ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_260:
        JZ      $+5
        LJMP    ??mpu_set_accel_bias_1 & 0xFFFF
// 1074         return -1;
// 1075 
// 1076     got_accel[0] = ((short)data[0] << 8) | data[1];
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_41:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine54 & 0xFFFF
// 1077     got_accel[1] = ((short)data[2] << 8) | data[3];
??CrossCallReturnLabel_217:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
// 1078     got_accel[2] = ((short)data[4] << 8) | data[5];
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        LCALL   ??Subroutine119_0 & 0xFFFF
// 1079 
// 1080     accel_hw[0] += got_accel[0];
??CrossCallReturnLabel_241:
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R5
        MOVX    @DPTR,A
// 1081     accel_hw[1] += got_accel[1];
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R3
        MOVX    @DPTR,A
// 1082     accel_hw[2] += got_accel[2];
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOVX    @DPTR,A
// 1083 
// 1084     data[0] = (accel_hw[0] >> 8) & 0xff;
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     A,#0x8
        MOV     R0,#?V0 + 0
        LCALL   ?SS_SHR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
// 1085     data[1] = (accel_hw[0]) & 0xff;
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1086     data[2] = (accel_hw[1] >> 8) & 0xff;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_36:
        LCALL   ?SS_SHR
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
// 1087     data[3] = (accel_hw[1]) & 0xff;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
// 1088     data[4] = (accel_hw[2] >> 8) & 0xff;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_37:
        LCALL   ?SS_SHR
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
// 1089     data[5] = (accel_hw[2]) & 0xff;
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        LCALL   ?Subroutine51 & 0xFFFF
// 1090 
// 1091     if (i2c_write(st.hw->addr, 0x06, 6, data))
??CrossCallReturnLabel_69:
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_331:
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??MPU_Write_Len?relay
        MOV     A,R1
        JZ      $+5
        LJMP    ??mpu_set_accel_bias_1 & 0xFFFF
        LJMP    ??mpu_set_accel_bias_4 & 0xFFFF
        CFI EndBlock cfiBlock317
// 1092         return -1;
// 1093     return 0;
// 1094 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
        CFI Block cfiCond318 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_88
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond319 Using cfiCommon0
        CFI (cfiCond319) NoFunction
        CFI (cfiCond319) Conditional ??CrossCallReturnLabel_89
        CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond319) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond319) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond319) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond319) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond319) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond319) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond319) CFA_SP SP+0
        CFI (cfiCond319) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiPicker320 Using cfiCommon1
        CFI (cfiPicker320) NoFunction
        CFI (cfiPicker320) Picker
        ADD     A,#0x40
        MOV     ?V0 + 4,A
        CLR     A
        MOV     ?V0 + 5,A
        MOV     ?V0 + 6,A
        MOV     ?V0 + 7,A
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        RET
        CFI EndBlock cfiCond318
        CFI EndBlock cfiCond319
        CFI EndBlock cfiPicker320

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
        CFI Block cfiCond321 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_83
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond322 Using cfiCommon0
        CFI (cfiCond322) NoFunction
        CFI (cfiCond322) Conditional ??CrossCallReturnLabel_84
        CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond322) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond322) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond322) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond322) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond322) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond322) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond322) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond322) CFA_SP SP+0
        CFI (cfiCond322) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond323 Using cfiCommon0
        CFI (cfiCond323) NoFunction
        CFI (cfiCond323) Conditional ??CrossCallReturnLabel_85
        CFI (cfiCond323) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond323) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond323) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond323) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond323) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond323) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond323) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond323) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond323) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond323) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond323) CFA_SP SP+0
        CFI (cfiCond323) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiPicker324 Using cfiCommon1
        CFI (cfiPicker324) NoFunction
        CFI (cfiPicker324) Picker
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        ORL     A,?V0 + 2
        ORL     A,?V0 + 3
        RET
        CFI EndBlock cfiCond321
        CFI EndBlock cfiCond322
        CFI EndBlock cfiCond323
        CFI EndBlock cfiPicker324

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
        CFI Block cfiCond325 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_72
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond326 Using cfiCommon0
        CFI (cfiCond326) NoFunction
        CFI (cfiCond326) Conditional ??CrossCallReturnLabel_73
        CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond326) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond326) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond326) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond326) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond326) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond326) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond326) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond326) CFA_SP SP+0
        CFI (cfiCond326) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiPicker327 Using cfiCommon1
        CFI (cfiPicker327) NoFunction
        CFI (cfiPicker327) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond325
        CFI EndBlock cfiCond326
        CFI EndBlock cfiPicker327

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
        CFI Block cfiCond328 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_217
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond329 Using cfiCommon0
        CFI (cfiCond329) NoFunction
        CFI (cfiCond329) Conditional ??CrossCallReturnLabel_218
        CFI (cfiCond329) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond329) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond329) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond329) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond329) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond329) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond329) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond329) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond329) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond329) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond329) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond329) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond329) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond329) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond329) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond329) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond329) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond329) CFA_SP SP+0
        CFI (cfiCond329) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker330 Using cfiCommon1
        CFI (cfiPicker330) NoFunction
        CFI (cfiPicker330) Picker
        MOV     A,R0
        CFI EndBlock cfiCond328
        CFI EndBlock cfiCond329
        CFI EndBlock cfiPicker330
        REQUIRE ??Subroutine115_0
        ; // Fall through to label ??Subroutine115_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine115_0:
        CFI Block cfiCond331 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_219
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond332 Using cfiCommon0
        CFI (cfiCond332) NoFunction
        CFI (cfiCond332) Conditional ??CrossCallReturnLabel_217
        CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond332) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond332) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond332) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond332) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond332) CFA_SP SP+0
        CFI (cfiCond332) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond333 Using cfiCommon0
        CFI (cfiCond333) NoFunction
        CFI (cfiCond333) Conditional ??CrossCallReturnLabel_218
        CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond333) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond333) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond333) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond333) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond333) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond333) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond333) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond333) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond333) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond333) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond333) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond333) CFA_SP SP+0
        CFI (cfiCond333) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker334 Using cfiCommon1
        CFI (cfiPicker334) NoFunction
        CFI (cfiPicker334) Picker
        LCALL   ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_249:
        MOV     A,#0x2
        RET
        CFI EndBlock cfiCond331
        CFI EndBlock cfiCond332
        CFI EndBlock cfiCond333
        CFI EndBlock cfiPicker334

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
        CFI Block cfiCond335 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_68
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond336 Using cfiCommon0
        CFI (cfiCond336) NoFunction
        CFI (cfiCond336) Conditional ??CrossCallReturnLabel_69
        CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond336) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond336) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond336) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond336) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond336) CFA_SP SP+0
        CFI (cfiCond336) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiPicker337 Using cfiCommon1
        CFI (cfiPicker337) NoFunction
        CFI (cfiPicker337) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_135:
        MOV     R3,#0x6
        MOV     R2,#0x6
        RET
        CFI EndBlock cfiCond335
        CFI EndBlock cfiCond336
        CFI EndBlock cfiPicker337

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
        CFI Block cfiCond338 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_36
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond339 Using cfiCommon0
        CFI (cfiCond339) NoFunction
        CFI (cfiCond339) Conditional ??CrossCallReturnLabel_37
        CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond339) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond339) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond339) CFA_SP SP+0
        CFI (cfiCond339) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiPicker340 Using cfiCommon1
        CFI (cfiPicker340) NoFunction
        CFI (cfiPicker340) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_126:
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,#0x8
        MOV     R0,#?V0 + 0
        RET
        CFI EndBlock cfiCond338
        CFI EndBlock cfiCond339
        CFI EndBlock cfiPicker340

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
        CFI Block cfiCond341 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_33
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond342 Using cfiCommon0
        CFI (cfiCond342) NoFunction
        CFI (cfiCond342) Conditional ??CrossCallReturnLabel_34
        CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond342) CFA_SP SP+0
        CFI (cfiCond342) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond343 Using cfiCommon0
        CFI (cfiCond343) NoFunction
        CFI (cfiCond343) Conditional ??CrossCallReturnLabel_35
        CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond343) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond343) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond343) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond343) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond343) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond343) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond343) CFA_SP SP+0
        CFI (cfiCond343) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiPicker344 Using cfiCommon1
        CFI (cfiPicker344) NoFunction
        CFI (cfiPicker344) Picker
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        ADD     A,#0x8
        ANL     A,#0xf
        RET
        CFI EndBlock cfiCond341
        CFI EndBlock cfiCond342
        CFI EndBlock cfiCond343
        CFI EndBlock cfiPicker344
// 1095 
// 1096 /**
// 1097  *  @brief  Reset FIFO read/write pointers.
// 1098  *  @return 0 if successful.
// 1099  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1100 int mpu_reset_fifo(void)
mpu_reset_fifo:
        CFI Block cfiBlock345 Using cfiCommon0
        CFI Function mpu_reset_fifo
        CODE
// 1101 {
        FUNCALL mpu_reset_fifo, MPU_Write_Len
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, MPU_Write_Len
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, MPU_Write_Len
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, MPU_Write_Len
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, delay_ms
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, MPU_Write_Len
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, MPU_Write_Len
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, MPU_Write_Len
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, MPU_Write_Len
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, MPU_Write_Len
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, delay_ms
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, MPU_Write_Len
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, MPU_Write_Len
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 1)
// 1102     unsigned char data;
// 1103 
// 1104     if (!(st.chip_cfg.sensors))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_reset_fifo_0
// 1105         return -1;
??mpu_reset_fifo_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_reset_fifo_2 & 0xFFFF
// 1106 
// 1107     data = 0;
??mpu_reset_fifo_0:
        LCALL   ?Subroutine46 & 0xFFFF
// 1108     if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &data))
??CrossCallReturnLabel_301:
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_147:
        JNZ     ??mpu_reset_fifo_1
// 1109         return -1;
// 1110     if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, &data))
        ; Setup parameters for call to function MPU_Write_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_275:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_161:
        JNZ     ??mpu_reset_fifo_1
// 1111         return -1;
// 1112     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_229:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_162:
        JNZ     ??mpu_reset_fifo_1
// 1113         return -1;
// 1114 
// 1115     if (st.chip_cfg.dmp_on) {
        MOV     DPTR,#st + 29
        LCALL   ??Subroutine121_0 & 0xFFFF
??CrossCallReturnLabel_251:
        JZ      ??mpu_reset_fifo_3
// 1116         data = BIT_FIFO_RST | BIT_DMP_RST;
        MOV     A,#0xc
        MOVX    @DPTR,A
// 1117         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_222:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_163:
        JNZ     ??mpu_reset_fifo_1
// 1118             return -1;
// 1119         delay_ms(50);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x32
        LCALL   ?Subroutine60 & 0xFFFF
// 1120         data = BIT_DMP_EN | BIT_FIFO_EN;
??CrossCallReturnLabel_81:
        MOV     A,#-0x40
        MOVX    @DPTR,A
// 1121         if (st.chip_cfg.sensors & INV_XYZ_COMPASS)
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        JNC     ??mpu_reset_fifo_4
// 1122             data |= BIT_AUX_IF_EN;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x20
        MOVX    @DPTR,A
// 1123         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
??mpu_reset_fifo_4:
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_230:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_164:
        JNZ     ??mpu_reset_fifo_1
// 1124             return -1;
// 1125         if (st.chip_cfg.int_enable)
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_254:
        JZ      ??mpu_reset_fifo_5
// 1126             data = BIT_DMP_INT_EN;
        MOV     A,#0x2
        SJMP    ??mpu_reset_fifo_6
// 1127         else
// 1128             data = 0;
??mpu_reset_fifo_5:
        CLR     A
??mpu_reset_fifo_6:
        LCALL   ??Subroutine138_0 & 0xFFFF
// 1129         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &data))
??CrossCallReturnLabel_305:
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_148:
        JNZ     ??mpu_reset_fifo_1
// 1130             return -1;
// 1131         data = 0;
        LCALL   ?Subroutine31 & 0xFFFF
// 1132         if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, &data))
// 1133             return -1;
// 1134     } else {
??CrossCallReturnLabel_271:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_165:
        JNZ     ??mpu_reset_fifo_1
        SJMP    ??mpu_reset_fifo_7
// 1135         data = BIT_FIFO_RST;
??mpu_reset_fifo_3:
        MOV     A,#0x4
        MOVX    @DPTR,A
// 1136         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_223:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_166:
        JNZ     ??mpu_reset_fifo_1
// 1137             return -1;
// 1138         if (st.chip_cfg.bypass_mode || !(st.chip_cfg.sensors & INV_XYZ_COMPASS))
        MOV     DPTR,#st + 13
        MOVX    A,@DPTR
        JNZ     ??mpu_reset_fifo_8
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        JC      ??mpu_reset_fifo_9
// 1139             data = BIT_FIFO_EN;
??mpu_reset_fifo_8:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x40
        SJMP    ??mpu_reset_fifo_10
// 1140         else
// 1141             data = BIT_FIFO_EN | BIT_AUX_IF_EN;
??mpu_reset_fifo_9:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x60
??mpu_reset_fifo_10:
        MOVX    @DPTR,A
// 1142         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_224:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_167:
        JZ      $+5
        LJMP    ??mpu_reset_fifo_1 & 0xFFFF
// 1143             return -1;
// 1144         delay_ms(50);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x32
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
// 1145         if (st.chip_cfg.int_enable)
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_255:
        JZ      ??mpu_reset_fifo_11
// 1146             data = BIT_DATA_RDY_EN;
        MOV     A,#0x1
        SJMP    ??mpu_reset_fifo_12
// 1147         else
// 1148             data = 0;
??mpu_reset_fifo_11:
        CLR     A
??mpu_reset_fifo_12:
        LCALL   ??Subroutine138_0 & 0xFFFF
// 1149         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &data))
??CrossCallReturnLabel_306:
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_149:
        JZ      $+5
        LJMP    ??mpu_reset_fifo_1 & 0xFFFF
// 1150             return -1;
// 1151         if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, &st.chip_cfg.fifo_enable))
        ; Setup parameters for call to function MPU_Write_Len
        MOV     R4,#(st + 11) & 0xff
        MOV     R5,#((st + 11) >> 8) & 0xff
        LCALL   ??Subroutine130_0 & 0xFFFF
// 1152             return -1;
// 1153     }
??CrossCallReturnLabel_274:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_168:
        JZ      $+5
        LJMP    ??mpu_reset_fifo_1 & 0xFFFF
// 1154     return 0;
??mpu_reset_fifo_7:
        MOV     R2,#0x0
        MOV     R3,#0x0
        CFI EndBlock cfiBlock345
??mpu_reset_fifo_2:
        REQUIRE ?Subroutine10
        ; // Fall through to label ?Subroutine10
// 1155 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
        CFI Block cfiBlock346 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 1)
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 XSP16+0
        LJMP    ??Subroutine124_0 & 0xFFFF
        CFI EndBlock cfiBlock346

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
        CFI Block cfiCond347 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_80
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond348 Using cfiCommon0
        CFI (cfiCond348) NoFunction
        CFI (cfiCond348) Conditional ??CrossCallReturnLabel_81
        CFI (cfiCond348) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond348) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond348) CFA_SP SP+-5
        CFI (cfiCond348) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond349 Using cfiCommon0
        CFI (cfiCond349) NoFunction
        CFI (cfiCond349) Conditional ??CrossCallReturnLabel_82
        CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond349) CFA_SP SP+0
        CFI (cfiCond349) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker350 Using cfiCommon1
        CFI (cfiPicker350) NoFunction
        CFI (cfiPicker350) Picker
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond347
        CFI EndBlock cfiCond348
        CFI EndBlock cfiCond349
        CFI EndBlock cfiPicker350

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
        CFI Block cfiCond351 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_229
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond352 Using cfiCommon0
        CFI (cfiCond352) NoFunction
        CFI (cfiCond352) Conditional ??CrossCallReturnLabel_230
        CFI (cfiCond352) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond352) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond352) CFA_SP SP+-5
        CFI (cfiCond352) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond353 Using cfiCommon0
        CFI (cfiCond353) NoFunction
        CFI (cfiCond353) Conditional ??CrossCallReturnLabel_231
        CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond353) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond353) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond353) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond353) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond353) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond353) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond353) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond353) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond353) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond353) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond353) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond353) CFA_SP SP+0
        CFI (cfiCond353) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker354 Using cfiCommon1
        CFI (cfiPicker354) NoFunction
        CFI (cfiPicker354) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CFI EndBlock cfiCond351
        CFI EndBlock cfiCond352
        CFI EndBlock cfiCond353
        CFI EndBlock cfiPicker354
        REQUIRE ??Subroutine116_0
        ; // Fall through to label ??Subroutine116_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine116_0:
        CFI Block cfiCond355 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_222
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond356 Using cfiCommon0
        CFI (cfiCond356) NoFunction
        CFI (cfiCond356) Conditional ??CrossCallReturnLabel_223
        CFI (cfiCond356) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond356) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond356) CFA_SP SP+-5
        CFI (cfiCond356) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond357 Using cfiCommon0
        CFI (cfiCond357) NoFunction
        CFI (cfiCond357) Conditional ??CrossCallReturnLabel_224
        CFI (cfiCond357) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond357) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond357) CFA_SP SP+-5
        CFI (cfiCond357) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond358 Using cfiCommon0
        CFI (cfiCond358) NoFunction
        CFI (cfiCond358) Conditional ??CrossCallReturnLabel_225
        CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond358) CFA_SP SP+0
        CFI (cfiCond358) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond359 Using cfiCommon0
        CFI (cfiCond359) NoFunction
        CFI (cfiCond359) Conditional ??CrossCallReturnLabel_226
        CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond359) CFA_SP SP+0
        CFI (cfiCond359) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond360 Using cfiCommon0
        CFI (cfiCond360) NoFunction
        CFI (cfiCond360) Conditional ??CrossCallReturnLabel_227
        CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond360) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond360) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond360) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond360) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond360) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond360) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond360) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond360) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond360) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond360) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond360) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond360) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond360) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond360) CFA_SP SP+0
        CFI (cfiCond360) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond361 Using cfiCommon0
        CFI (cfiCond361) NoFunction
        CFI (cfiCond361) Conditional ??CrossCallReturnLabel_228
        CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond361) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond361) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond361) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond361) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond361) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond361) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond361) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond361) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond361) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond361) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond361) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond361) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond361) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond361) CFA_SP SP+0
        CFI (cfiCond361) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond362 Using cfiCommon0
        CFI (cfiCond362) NoFunction
        CFI (cfiCond362) Conditional ??CrossCallReturnLabel_229
        CFI (cfiCond362) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond362) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond362) CFA_SP SP+-5
        CFI (cfiCond362) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond363 Using cfiCommon0
        CFI (cfiCond363) NoFunction
        CFI (cfiCond363) Conditional ??CrossCallReturnLabel_230
        CFI (cfiCond363) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond363) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond363) CFA_SP SP+-5
        CFI (cfiCond363) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond364 Using cfiCommon0
        CFI (cfiCond364) NoFunction
        CFI (cfiCond364) Conditional ??CrossCallReturnLabel_231
        CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond364) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond364) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond364) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond364) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond364) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond364) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond364) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond364) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond364) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond364) CFA_SP SP+0
        CFI (cfiCond364) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker365 Using cfiCommon1
        CFI (cfiPicker365) NoFunction
        CFI (cfiPicker365) Picker
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        CFI EndBlock cfiCond355
        CFI EndBlock cfiCond356
        CFI EndBlock cfiCond357
        CFI EndBlock cfiCond358
        CFI EndBlock cfiCond359
        CFI EndBlock cfiCond360
        CFI EndBlock cfiCond361
        CFI EndBlock cfiCond362
        CFI EndBlock cfiCond363
        CFI EndBlock cfiCond364
        CFI EndBlock cfiPicker365
        REQUIRE ??Subroutine117_0
        ; // Fall through to label ??Subroutine117_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine117_0:
        CFI Block cfiCond366 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_220
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond367 Using cfiCommon0
        CFI (cfiCond367) NoFunction
        CFI (cfiCond367) Conditional ??CrossCallReturnLabel_221
        CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond367) CFA_SP SP+0
        CFI (cfiCond367) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond368 Using cfiCommon0
        CFI (cfiCond368) NoFunction
        CFI (cfiCond368) Conditional ??CrossCallReturnLabel_222
        CFI (cfiCond368) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond368) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond368) CFA_SP SP+-5
        CFI (cfiCond368) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond369 Using cfiCommon0
        CFI (cfiCond369) NoFunction
        CFI (cfiCond369) Conditional ??CrossCallReturnLabel_223
        CFI (cfiCond369) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond369) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond369) CFA_SP SP+-5
        CFI (cfiCond369) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond370 Using cfiCommon0
        CFI (cfiCond370) NoFunction
        CFI (cfiCond370) Conditional ??CrossCallReturnLabel_224
        CFI (cfiCond370) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond370) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond370) CFA_SP SP+-5
        CFI (cfiCond370) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond371 Using cfiCommon0
        CFI (cfiCond371) NoFunction
        CFI (cfiCond371) Conditional ??CrossCallReturnLabel_225
        CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond371) CFA_SP SP+0
        CFI (cfiCond371) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond372 Using cfiCommon0
        CFI (cfiCond372) NoFunction
        CFI (cfiCond372) Conditional ??CrossCallReturnLabel_226
        CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond372) CFA_SP SP+0
        CFI (cfiCond372) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond373 Using cfiCommon0
        CFI (cfiCond373) NoFunction
        CFI (cfiCond373) Conditional ??CrossCallReturnLabel_227
        CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond373) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond373) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond373) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond373) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond373) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond373) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond373) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond373) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond373) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond373) CFA_SP SP+0
        CFI (cfiCond373) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond374 Using cfiCommon0
        CFI (cfiCond374) NoFunction
        CFI (cfiCond374) Conditional ??CrossCallReturnLabel_228
        CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond374) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond374) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond374) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond374) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond374) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond374) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond374) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond374) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond374) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond374) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond374) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond374) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond374) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond374) CFA_SP SP+0
        CFI (cfiCond374) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond375 Using cfiCommon0
        CFI (cfiCond375) NoFunction
        CFI (cfiCond375) Conditional ??CrossCallReturnLabel_229
        CFI (cfiCond375) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond375) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond375) CFA_SP SP+-5
        CFI (cfiCond375) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond376 Using cfiCommon0
        CFI (cfiCond376) NoFunction
        CFI (cfiCond376) Conditional ??CrossCallReturnLabel_230
        CFI (cfiCond376) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond376) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond376) CFA_SP SP+-5
        CFI (cfiCond376) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond377 Using cfiCommon0
        CFI (cfiCond377) NoFunction
        CFI (cfiCond377) Conditional ??CrossCallReturnLabel_231
        CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond377) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond377) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond377) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond377) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond377) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond377) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond377) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond377) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond377) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond377) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond377) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond377) CFA_SP SP+0
        CFI (cfiCond377) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker378 Using cfiCommon1
        CFI (cfiPicker378) NoFunction
        CFI (cfiPicker378) Picker
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_233:
        INC     DPTR
        RET
        CFI EndBlock cfiCond366
        CFI EndBlock cfiCond367
        CFI EndBlock cfiCond368
        CFI EndBlock cfiCond369
        CFI EndBlock cfiCond370
        CFI EndBlock cfiCond371
        CFI EndBlock cfiCond372
        CFI EndBlock cfiCond373
        CFI EndBlock cfiCond374
        CFI EndBlock cfiCond375
        CFI EndBlock cfiCond376
        CFI EndBlock cfiCond377
        CFI EndBlock cfiPicker378

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine78:
        CFI Block cfiCond379 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_16
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond380 Using cfiCommon0
        CFI (cfiCond380) NoFunction
        CFI (cfiCond380) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_17
        CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond380) CFA_SP SP+0
        CFI (cfiCond380) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond381 Using cfiCommon0
        CFI (cfiCond381) NoFunction
        CFI (cfiCond381) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_229
        CFI (cfiCond381) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond381) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond381) CFA_SP SP+-5
        CFI (cfiCond381) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond382 Using cfiCommon0
        CFI (cfiCond382) NoFunction
        CFI (cfiCond382) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_230
        CFI (cfiCond382) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond382) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond382) CFA_SP SP+-5
        CFI (cfiCond382) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond383 Using cfiCommon0
        CFI (cfiCond383) NoFunction
        CFI (cfiCond383) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_231
        CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond383) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond383) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond383) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond383) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond383) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond383) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond383) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond383) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond383) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond383) CFA_SP SP+0
        CFI (cfiCond383) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond384 Using cfiCommon0
        CFI (cfiCond384) NoFunction
        CFI (cfiCond384) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_222
        CFI (cfiCond384) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond384) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond384) CFA_SP SP+-5
        CFI (cfiCond384) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond385 Using cfiCommon0
        CFI (cfiCond385) NoFunction
        CFI (cfiCond385) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_223
        CFI (cfiCond385) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond385) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond385) CFA_SP SP+-5
        CFI (cfiCond385) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond386 Using cfiCommon0
        CFI (cfiCond386) NoFunction
        CFI (cfiCond386) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_224
        CFI (cfiCond386) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond386) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond386) CFA_SP SP+-5
        CFI (cfiCond386) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond387 Using cfiCommon0
        CFI (cfiCond387) NoFunction
        CFI (cfiCond387) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_225
        CFI (cfiCond387) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond387) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond387) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond387) CFA_SP SP+0
        CFI (cfiCond387) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond388 Using cfiCommon0
        CFI (cfiCond388) NoFunction
        CFI (cfiCond388) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_226
        CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond388) CFA_SP SP+0
        CFI (cfiCond388) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond389 Using cfiCommon0
        CFI (cfiCond389) NoFunction
        CFI (cfiCond389) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_227
        CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond389) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond389) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond389) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond389) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond389) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond389) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond389) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond389) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond389) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond389) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond389) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond389) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond389) CFA_SP SP+0
        CFI (cfiCond389) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond390 Using cfiCommon0
        CFI (cfiCond390) NoFunction
        CFI (cfiCond390) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_228
        CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond390) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond390) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond390) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond390) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond390) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond390) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond390) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond390) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond390) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond390) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond390) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond390) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond390) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond390) CFA_SP SP+0
        CFI (cfiCond390) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond391 Using cfiCommon0
        CFI (cfiCond391) NoFunction
        CFI (cfiCond391) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_220
        CFI (cfiCond391) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond391) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond391) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond391) CFA_SP SP+0
        CFI (cfiCond391) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond392 Using cfiCommon0
        CFI (cfiCond392) NoFunction
        CFI (cfiCond392) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_221
        CFI (cfiCond392) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond392) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond392) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond392) CFA_SP SP+0
        CFI (cfiCond392) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker393 Using cfiCommon1
        CFI (cfiPicker393) NoFunction
        CFI (cfiPicker393) Picker
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_279:
        RET
        CFI EndBlock cfiCond379
        CFI EndBlock cfiCond380
        CFI EndBlock cfiCond381
        CFI EndBlock cfiCond382
        CFI EndBlock cfiCond383
        CFI EndBlock cfiCond384
        CFI EndBlock cfiCond385
        CFI EndBlock cfiCond386
        CFI EndBlock cfiCond387
        CFI EndBlock cfiCond388
        CFI EndBlock cfiCond389
        CFI EndBlock cfiCond390
        CFI EndBlock cfiCond391
        CFI EndBlock cfiCond392
        CFI EndBlock cfiPicker393

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine98:
        CFI Block cfiCond394 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_16
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond395 Using cfiCommon0
        CFI (cfiCond395) NoFunction
        CFI (cfiCond395) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_17
        CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond395) CFA_SP SP+0
        CFI (cfiCond395) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond396 Using cfiCommon0
        CFI (cfiCond396) NoFunction
        CFI (cfiCond396) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_229
        CFI (cfiCond396) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond396) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond396) CFA_SP SP+-5
        CFI (cfiCond396) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond397 Using cfiCommon0
        CFI (cfiCond397) NoFunction
        CFI (cfiCond397) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_230
        CFI (cfiCond397) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond397) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond397) CFA_SP SP+-5
        CFI (cfiCond397) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond398 Using cfiCommon0
        CFI (cfiCond398) NoFunction
        CFI (cfiCond398) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_231
        CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond398) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond398) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond398) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond398) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond398) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond398) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond398) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond398) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond398) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond398) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond398) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond398) CFA_SP SP+0
        CFI (cfiCond398) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond399 Using cfiCommon0
        CFI (cfiCond399) NoFunction
        CFI (cfiCond399) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_222
        CFI (cfiCond399) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond399) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond399) CFA_SP SP+-5
        CFI (cfiCond399) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond400 Using cfiCommon0
        CFI (cfiCond400) NoFunction
        CFI (cfiCond400) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_223
        CFI (cfiCond400) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond400) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond400) CFA_SP SP+-5
        CFI (cfiCond400) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond401 Using cfiCommon0
        CFI (cfiCond401) NoFunction
        CFI (cfiCond401) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_224
        CFI (cfiCond401) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond401) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond401) CFA_SP SP+-5
        CFI (cfiCond401) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond402 Using cfiCommon0
        CFI (cfiCond402) NoFunction
        CFI (cfiCond402) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_225
        CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond402) CFA_SP SP+0
        CFI (cfiCond402) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond403 Using cfiCommon0
        CFI (cfiCond403) NoFunction
        CFI (cfiCond403) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_226
        CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond403) CFA_SP SP+0
        CFI (cfiCond403) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond404 Using cfiCommon0
        CFI (cfiCond404) NoFunction
        CFI (cfiCond404) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_227
        CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond404) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond404) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond404) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond404) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond404) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond404) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond404) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond404) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond404) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond404) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond404) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond404) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond404) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond404) CFA_SP SP+0
        CFI (cfiCond404) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond405 Using cfiCommon0
        CFI (cfiCond405) NoFunction
        CFI (cfiCond405) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_228
        CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond405) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond405) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond405) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond405) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond405) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond405) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond405) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond405) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond405) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond405) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond405) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond405) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond405) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond405) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond405) CFA_SP SP+0
        CFI (cfiCond405) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond406 Using cfiCommon0
        CFI (cfiCond406) NoFunction
        CFI (cfiCond406) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_220
        CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond406) CFA_SP SP+0
        CFI (cfiCond406) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond407 Using cfiCommon0
        CFI (cfiCond407) NoFunction
        CFI (cfiCond407) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_221
        CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond407) CFA_SP SP+0
        CFI (cfiCond407) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond408 Using cfiCommon0
        CFI (cfiCond408) NoFunction
        CFI (cfiCond408) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_271
        CFI (cfiCond408) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond408) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond408) CFA_SP SP+-5
        CFI (cfiCond408) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond409 Using cfiCommon0
        CFI (cfiCond409) NoFunction
        CFI (cfiCond409) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_272
        CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond409) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond409) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond409) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond409) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond409) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond409) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond409) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond409) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond409) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond409) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond409) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond409) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond409) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond409) CFA_SP SP+0
        CFI (cfiCond409) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond410 Using cfiCommon0
        CFI (cfiCond410) NoFunction
        CFI (cfiCond410) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_273
        CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond410) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond410) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond410) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond410) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond410) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond410) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond410) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond410) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond410) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond410) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond410) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond410) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond410) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond410) CFA_SP SP+0
        CFI (cfiCond410) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond411 Using cfiCommon0
        CFI (cfiCond411) NoFunction
        CFI (cfiCond411) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_275
        CFI (cfiCond411) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond411) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond411) CFA_SP SP+-5
        CFI (cfiCond411) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond412 Using cfiCommon0
        CFI (cfiCond412) NoFunction
        CFI (cfiCond412) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_276
        CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond412) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond412) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond412) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond412) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond412) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond412) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond412) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond412) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond412) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond412) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond412) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond412) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond412) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond412) CFA_SP SP+0
        CFI (cfiCond412) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond413 Using cfiCommon0
        CFI (cfiCond413) NoFunction
        CFI (cfiCond413) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_274
        CFI (cfiCond413) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond413) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond413) CFA_SP SP+-5
        CFI (cfiCond413) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond414 Using cfiCommon0
        CFI (cfiCond414) NoFunction
        CFI (cfiCond414) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_23
        CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond414) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond414) CFA_SP SP+0
        CFI (cfiCond414) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond415 Using cfiCommon0
        CFI (cfiCond415) NoFunction
        CFI (cfiCond415) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_24
        CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond415) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond415) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond415) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond415) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond415) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond415) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond415) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond415) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond415) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond415) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond415) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond415) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond415) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond415) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond415) CFA_SP SP+0
        CFI (cfiCond415) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker416 Using cfiCommon1
        CFI (cfiPicker416) NoFunction
        CFI (cfiPicker416) Picker
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_294:
        RET
        CFI EndBlock cfiCond394
        CFI EndBlock cfiCond395
        CFI EndBlock cfiCond396
        CFI EndBlock cfiCond397
        CFI EndBlock cfiCond398
        CFI EndBlock cfiCond399
        CFI EndBlock cfiCond400
        CFI EndBlock cfiCond401
        CFI EndBlock cfiCond402
        CFI EndBlock cfiCond403
        CFI EndBlock cfiCond404
        CFI EndBlock cfiCond405
        CFI EndBlock cfiCond406
        CFI EndBlock cfiCond407
        CFI EndBlock cfiCond408
        CFI EndBlock cfiCond409
        CFI EndBlock cfiCond410
        CFI EndBlock cfiCond411
        CFI EndBlock cfiCond412
        CFI EndBlock cfiCond413
        CFI EndBlock cfiCond414
        CFI EndBlock cfiCond415
        CFI EndBlock cfiPicker416

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine103:
        CFI Block cfiCond417 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_16
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond418 Using cfiCommon0
        CFI (cfiCond418) NoFunction
        CFI (cfiCond418) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_17
        CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond418) CFA_SP SP+0
        CFI (cfiCond418) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond419 Using cfiCommon0
        CFI (cfiCond419) NoFunction
        CFI (cfiCond419) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_229
        CFI (cfiCond419) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond419) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond419) CFA_SP SP+-5
        CFI (cfiCond419) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond420 Using cfiCommon0
        CFI (cfiCond420) NoFunction
        CFI (cfiCond420) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_230
        CFI (cfiCond420) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond420) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond420) CFA_SP SP+-5
        CFI (cfiCond420) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond421 Using cfiCommon0
        CFI (cfiCond421) NoFunction
        CFI (cfiCond421) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_231
        CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond421) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond421) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond421) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond421) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond421) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond421) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond421) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond421) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond421) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond421) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond421) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond421) CFA_SP SP+0
        CFI (cfiCond421) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond422 Using cfiCommon0
        CFI (cfiCond422) NoFunction
        CFI (cfiCond422) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_222
        CFI (cfiCond422) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond422) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond422) CFA_SP SP+-5
        CFI (cfiCond422) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond423 Using cfiCommon0
        CFI (cfiCond423) NoFunction
        CFI (cfiCond423) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_223
        CFI (cfiCond423) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond423) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond423) CFA_SP SP+-5
        CFI (cfiCond423) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond424 Using cfiCommon0
        CFI (cfiCond424) NoFunction
        CFI (cfiCond424) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_224
        CFI (cfiCond424) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond424) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond424) CFA_SP SP+-5
        CFI (cfiCond424) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond425 Using cfiCommon0
        CFI (cfiCond425) NoFunction
        CFI (cfiCond425) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_225
        CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond425) CFA_SP SP+0
        CFI (cfiCond425) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond426 Using cfiCommon0
        CFI (cfiCond426) NoFunction
        CFI (cfiCond426) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_226
        CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond426) CFA_SP SP+0
        CFI (cfiCond426) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond427 Using cfiCommon0
        CFI (cfiCond427) NoFunction
        CFI (cfiCond427) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_227
        CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond427) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond427) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond427) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond427) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond427) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond427) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond427) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond427) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond427) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond427) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond427) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond427) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond427) CFA_SP SP+0
        CFI (cfiCond427) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond428 Using cfiCommon0
        CFI (cfiCond428) NoFunction
        CFI (cfiCond428) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_228
        CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond428) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond428) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond428) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond428) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond428) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond428) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond428) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond428) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond428) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond428) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond428) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond428) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond428) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond428) CFA_SP SP+0
        CFI (cfiCond428) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond429 Using cfiCommon0
        CFI (cfiCond429) NoFunction
        CFI (cfiCond429) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_220
        CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond429) CFA_SP SP+0
        CFI (cfiCond429) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond430 Using cfiCommon0
        CFI (cfiCond430) NoFunction
        CFI (cfiCond430) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_221
        CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond430) CFA_SP SP+0
        CFI (cfiCond430) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond431 Using cfiCommon0
        CFI (cfiCond431) NoFunction
        CFI (cfiCond431) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_271
        CFI (cfiCond431) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond431) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond431) CFA_SP SP+-5
        CFI (cfiCond431) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond432 Using cfiCommon0
        CFI (cfiCond432) NoFunction
        CFI (cfiCond432) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_272
        CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond432) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond432) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond432) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond432) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond432) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond432) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond432) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond432) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond432) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond432) CFA_SP SP+0
        CFI (cfiCond432) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond433 Using cfiCommon0
        CFI (cfiCond433) NoFunction
        CFI (cfiCond433) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_273
        CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond433) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond433) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond433) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond433) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond433) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond433) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond433) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond433) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond433) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond433) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond433) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond433) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond433) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond433) CFA_SP SP+0
        CFI (cfiCond433) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond434 Using cfiCommon0
        CFI (cfiCond434) NoFunction
        CFI (cfiCond434) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_275
        CFI (cfiCond434) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond434) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond434) CFA_SP SP+-5
        CFI (cfiCond434) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond435 Using cfiCommon0
        CFI (cfiCond435) NoFunction
        CFI (cfiCond435) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_276
        CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond435) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond435) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond435) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond435) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond435) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond435) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond435) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond435) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond435) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond435) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond435) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond435) CFA_SP SP+0
        CFI (cfiCond435) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond436 Using cfiCommon0
        CFI (cfiCond436) NoFunction
        CFI (cfiCond436) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_274
        CFI (cfiCond436) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond436) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond436) CFA_SP SP+-5
        CFI (cfiCond436) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond437 Using cfiCommon0
        CFI (cfiCond437) NoFunction
        CFI (cfiCond437) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_23
        CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond437) CFA_SP SP+0
        CFI (cfiCond437) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond438 Using cfiCommon0
        CFI (cfiCond438) NoFunction
        CFI (cfiCond438) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_24
        CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond438) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond438) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond438) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond438) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond438) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond438) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond438) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond438) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond438) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond438) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond438) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond438) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond438) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond438) CFA_SP SP+0
        CFI (cfiCond438) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond439 Using cfiCommon0
        CFI (cfiCond439) NoFunction
        CFI (cfiCond439) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_7
        CFI (cfiCond439) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond439) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond439) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond439) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond439) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond439) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond439) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond439) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond439) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond439) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond439) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond439) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond439) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond439) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond439) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond439) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond439) CFA_SP SP+0
        CFI (cfiCond439) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond440 Using cfiCommon0
        CFI (cfiCond440) NoFunction
        CFI (cfiCond440) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_8
        CFI (cfiCond440) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond440) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond440) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond440) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond440) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond440) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond440) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond440) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond440) CFA_SP SP+0
        CFI (cfiCond440) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond441 Using cfiCommon0
        CFI (cfiCond441) NoFunction
        CFI (cfiCond441) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_9
        CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond441) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond441) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond441) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond441) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond441) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond441) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond441) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond441) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond441) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond441) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond441) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond441) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond441) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond441) CFA_SP SP+0
        CFI (cfiCond441) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond442 Using cfiCommon0
        CFI (cfiCond442) NoFunction
        CFI (cfiCond442) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_5
        CFI (cfiCond442) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond442) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond442) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond442) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond442) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond442) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond442) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond442) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond442) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond442) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond442) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond442) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond442) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond442) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond442) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond442) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond442) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond442) CFA_SP SP+0
        CFI (cfiCond442) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond443 Using cfiCommon0
        CFI (cfiCond443) NoFunction
        CFI (cfiCond443) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_6
        CFI (cfiCond443) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond443) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond443) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond443) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond443) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond443) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond443) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond443) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond443) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond443) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond443) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond443) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond443) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond443) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond443) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond443) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond443) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond443) CFA_SP SP+0
        CFI (cfiCond443) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond444 Using cfiCommon0
        CFI (cfiCond444) NoFunction
        CFI (cfiCond444) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_281
        CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond444) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond444) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond444) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond444) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond444) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond444) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond444) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond444) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond444) CFA_SP SP+0
        CFI (cfiCond444) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond445 Using cfiCommon0
        CFI (cfiCond445) NoFunction
        CFI (cfiCond445) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_282
        CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond445) CFA_SP SP+0
        CFI (cfiCond445) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond446 Using cfiCommon0
        CFI (cfiCond446) NoFunction
        CFI (cfiCond446) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_283
        CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond446) CFA_SP SP+0
        CFI (cfiCond446) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond447 Using cfiCommon0
        CFI (cfiCond447) NoFunction
        CFI (cfiCond447) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_287
        CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond447) CFA_SP SP+0
        CFI (cfiCond447) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond448 Using cfiCommon0
        CFI (cfiCond448) NoFunction
        CFI (cfiCond448) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_288
        CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond448) CFA_SP SP+0
        CFI (cfiCond448) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond449 Using cfiCommon0
        CFI (cfiCond449) NoFunction
        CFI (cfiCond449) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_289
        CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond449) CFA_SP SP+0
        CFI (cfiCond449) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker450 Using cfiCommon1
        CFI (cfiPicker450) NoFunction
        CFI (cfiPicker450) Picker
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_336:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond417
        CFI EndBlock cfiCond418
        CFI EndBlock cfiCond419
        CFI EndBlock cfiCond420
        CFI EndBlock cfiCond421
        CFI EndBlock cfiCond422
        CFI EndBlock cfiCond423
        CFI EndBlock cfiCond424
        CFI EndBlock cfiCond425
        CFI EndBlock cfiCond426
        CFI EndBlock cfiCond427
        CFI EndBlock cfiCond428
        CFI EndBlock cfiCond429
        CFI EndBlock cfiCond430
        CFI EndBlock cfiCond431
        CFI EndBlock cfiCond432
        CFI EndBlock cfiCond433
        CFI EndBlock cfiCond434
        CFI EndBlock cfiCond435
        CFI EndBlock cfiCond436
        CFI EndBlock cfiCond437
        CFI EndBlock cfiCond438
        CFI EndBlock cfiCond439
        CFI EndBlock cfiCond440
        CFI EndBlock cfiCond441
        CFI EndBlock cfiCond442
        CFI EndBlock cfiCond443
        CFI EndBlock cfiCond444
        CFI EndBlock cfiCond445
        CFI EndBlock cfiCond446
        CFI EndBlock cfiCond447
        CFI EndBlock cfiCond448
        CFI EndBlock cfiCond449
        CFI EndBlock cfiPicker450
// 1156 
// 1157 /**
// 1158  *  @brief      Get the gyro full-scale range.
// 1159  *  @param[out] fsr Current full-scale range.
// 1160  *  @return     0 if successful.
// 1161  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1162 int mpu_get_gyro_fsr(unsigned short *fsr)
mpu_get_gyro_fsr:
        CFI Block cfiBlock451 Using cfiCommon0
        CFI Function mpu_get_gyro_fsr
        CODE
// 1163 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1164     switch (st.chip_cfg.gyro_fsr) {
        MOV     DPTR,#st + 4
        MOVX    A,@DPTR
        JZ      ??mpu_get_gyro_fsr_0
        DEC     A
        JZ      ??mpu_get_gyro_fsr_1
        DEC     A
        JZ      ??mpu_get_gyro_fsr_2
        DEC     A
        JZ      ??mpu_get_gyro_fsr_3
        SJMP    ??mpu_get_gyro_fsr_4
// 1165     case INV_FSR_250DPS:
// 1166         fsr[0] = 250;
??mpu_get_gyro_fsr_0:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x6
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        SJMP    ??mpu_get_gyro_fsr_5
// 1167         break;
// 1168     case INV_FSR_500DPS:
// 1169         fsr[0] = 500;
??mpu_get_gyro_fsr_1:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0xc
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x1
        SJMP    ??mpu_get_gyro_fsr_5
// 1170         break;
// 1171     case INV_FSR_1000DPS:
// 1172         fsr[0] = 1000;
??mpu_get_gyro_fsr_2:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x18
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x3
        SJMP    ??mpu_get_gyro_fsr_5
// 1173         break;
// 1174     case INV_FSR_2000DPS:
// 1175         fsr[0] = 2000;
??mpu_get_gyro_fsr_3:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x30
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x7
        SJMP    ??mpu_get_gyro_fsr_5
// 1176         break;
// 1177     default:
// 1178         fsr[0] = 0;
??mpu_get_gyro_fsr_4:
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
// 1179         break;
// 1180     }
??mpu_get_gyro_fsr_5:
        LJMP    ??Subroutine122_0 & 0xFFFF
        CFI EndBlock cfiBlock451
// 1181     return 0;
// 1182 }
// 1183 
// 1184 /**
// 1185  *  @brief      Set the gyro full-scale range.
// 1186  *  @param[in]  fsr Desired full-scale range.
// 1187  *  @return     0 if successful.
// 1188  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1189 int mpu_set_gyro_fsr(unsigned short fsr)
mpu_set_gyro_fsr:
        CFI Block cfiBlock452 Using cfiCommon0
        CFI Function mpu_set_gyro_fsr
        CODE
// 1190 {
        FUNCALL mpu_set_gyro_fsr, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
// 1191     unsigned char data;
// 1192 
// 1193     if (!(st.chip_cfg.sensors))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_set_gyro_fsr_0
// 1194         return -1;
??mpu_set_gyro_fsr_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_set_gyro_fsr_2
// 1195 
// 1196     switch (fsr) {
??mpu_set_gyro_fsr_0:
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,#?V0 + 0
        LCALL   ?US_SWITCH_SPARSE
`?<Jumptable for mpu_set_gyro_fsr>_0`:
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        0
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        4
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        250
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??mpu_set_gyro_fsr_3
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        500
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??mpu_set_gyro_fsr_4
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        1000
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??mpu_set_gyro_fsr_5
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        2000
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??mpu_set_gyro_fsr_6
        DATA
        DATA16
        DATA
        DATA16
        DW        ??mpu_set_gyro_fsr_1
        CODE
// 1197     case 250:
// 1198         data = INV_FSR_250DPS << 3;
??mpu_set_gyro_fsr_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        SJMP    ??mpu_set_gyro_fsr_7
// 1199         break;
// 1200     case 500:
// 1201         data = INV_FSR_500DPS << 3;
??mpu_set_gyro_fsr_4:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x8
        SJMP    ??mpu_set_gyro_fsr_7
// 1202         break;
// 1203     case 1000:
// 1204         data = INV_FSR_1000DPS << 3;
??mpu_set_gyro_fsr_5:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x10
        SJMP    ??mpu_set_gyro_fsr_7
// 1205         break;
// 1206     case 2000:
// 1207         data = INV_FSR_2000DPS << 3;
??mpu_set_gyro_fsr_6:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x18
??mpu_set_gyro_fsr_7:
        MOVX    @DPTR,A
// 1208         break;
// 1209     default:
// 1210         return -1;
// 1211     }
// 1212 
// 1213     if (st.chip_cfg.gyro_fsr == (data >> 3))
        MOV     DPTR,#st + 4
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_12:
        JZ      ??mpu_set_gyro_fsr_8
// 1214         return 0;
// 1215     if (i2c_write(st.hw->addr, st.reg->gyro_cfg, 1, &data))
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_23:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_169:
        JNZ     ??mpu_set_gyro_fsr_1
// 1216         return -1;
// 1217     st.chip_cfg.gyro_fsr = data >> 3;
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_235:
        MOV     DPTR,#st + 4
        MOVX    @DPTR,A
// 1218     return 0;
??mpu_set_gyro_fsr_8:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_set_gyro_fsr_2:
        LJMP    ?Subroutine1 & 0xFFFF
        CFI EndBlock cfiBlock452
// 1219 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine88:
        CFI Block cfiCond453 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_235
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond454 Using cfiCommon0
        CFI (cfiCond454) NoFunction
        CFI (cfiCond454) Conditional ??CrossCallReturnLabel_236
        CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond454) CFA_SP SP+0
        CFI (cfiCond454) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker455 Using cfiCommon1
        CFI (cfiPicker455) NoFunction
        CFI (cfiPicker455) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CFI EndBlock cfiCond453
        CFI EndBlock cfiCond454
        CFI EndBlock cfiPicker455
        REQUIRE ??Subroutine118_0
        ; // Fall through to label ??Subroutine118_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine118_0:
        CFI Block cfiCond456 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_20
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond457 Using cfiCommon0
        CFI (cfiCond457) NoFunction
        CFI (cfiCond457) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_21
        CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond457) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond457) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond457) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond457) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond457) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond457) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond457) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond457) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond457) CFA_SP SP+0
        CFI (cfiCond457) CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond458 Using cfiCommon0
        CFI (cfiCond458) NoFunction
        CFI (cfiCond458) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_22
        CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond458) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond458) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond458) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond458) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond458) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond458) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond458) CFA_SP SP+0
        CFI (cfiCond458) CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond459 Using cfiCommon0
        CFI (cfiCond459) NoFunction
        CFI (cfiCond459) Conditional ??CrossCallReturnLabel_235
        CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond459) CFA_SP SP+0
        CFI (cfiCond459) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond460 Using cfiCommon0
        CFI (cfiCond460) NoFunction
        CFI (cfiCond460) Conditional ??CrossCallReturnLabel_236
        CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond460) CFA_SP SP+0
        CFI (cfiCond460) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker461 Using cfiCommon1
        CFI (cfiPicker461) NoFunction
        CFI (cfiPicker461) Picker
        MOVX    A,@DPTR
        RRC     A
        RRC     A
        RRC     A
        ANL     A,#0x1f
        RET
        CFI EndBlock cfiCond456
        CFI EndBlock cfiCond457
        CFI EndBlock cfiCond458
        CFI EndBlock cfiCond459
        CFI EndBlock cfiCond460
        CFI EndBlock cfiPicker461
// 1220 
// 1221 /**
// 1222  *  @brief      Get the accel full-scale range.
// 1223  *  @param[out] fsr Current full-scale range.
// 1224  *  @return     0 if successful.
// 1225  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1226 int mpu_get_accel_fsr(unsigned char *fsr)
mpu_get_accel_fsr:
        CFI Block cfiBlock462 Using cfiCommon0
        CFI Function mpu_get_accel_fsr
        CODE
// 1227 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1228     switch (st.chip_cfg.accel_fsr) {
        MOV     DPTR,#st + 5
        MOVX    A,@DPTR
        JZ      ??mpu_get_accel_fsr_0
        DEC     A
        JZ      ??mpu_get_accel_fsr_1
        DEC     A
        JZ      ??mpu_get_accel_fsr_2
        DEC     A
        JZ      ??mpu_get_accel_fsr_3
        SJMP    ??mpu_get_accel_fsr_4
// 1229     case INV_FSR_2G:
// 1230         fsr[0] = 2;
??mpu_get_accel_fsr_0:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x2
??mpu_get_accel_fsr_5:
        MOVX    @DPTR,A
// 1231         break;
// 1232     case INV_FSR_4G:
// 1233         fsr[0] = 4;
// 1234         break;
// 1235     case INV_FSR_8G:
// 1236         fsr[0] = 8;
// 1237         break;
// 1238     case INV_FSR_16G:
// 1239         fsr[0] = 16;
// 1240         break;
// 1241     default:
// 1242         return -1;
// 1243     }
// 1244     if (st.chip_cfg.accel_half)
        MOV     DPTR,#st + 14
        MOVX    A,@DPTR
        JZ      ??mpu_get_accel_fsr_6
// 1245         fsr[0] <<= 1;
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        CLR     C
        RLC     A
        MOVX    @DPTR,A
// 1246     return 0;
??mpu_get_accel_fsr_6:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_get_accel_fsr_7:
        LJMP    ??Subroutine124_0 & 0xFFFF
??mpu_get_accel_fsr_1:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x4
        SJMP    ??mpu_get_accel_fsr_5
??mpu_get_accel_fsr_2:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x8
        SJMP    ??mpu_get_accel_fsr_5
??mpu_get_accel_fsr_3:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x10
        SJMP    ??mpu_get_accel_fsr_5
??mpu_get_accel_fsr_4:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_get_accel_fsr_7
        CFI EndBlock cfiBlock462
// 1247 }
// 1248 
// 1249 /**
// 1250  *  @brief      Set the accel full-scale range.
// 1251  *  @param[in]  fsr Desired full-scale range.
// 1252  *  @return     0 if successful.
// 1253  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1254 int mpu_set_accel_fsr(unsigned char fsr)
mpu_set_accel_fsr:
        CFI Block cfiBlock463 Using cfiCommon0
        CFI Function mpu_set_accel_fsr
        CODE
// 1255 {
        FUNCALL mpu_set_accel_fsr, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,R1
        MOV     R6,A
// 1256     unsigned char data;
// 1257 
// 1258     if (!(st.chip_cfg.sensors))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_set_accel_fsr_0
// 1259         return -1;
??mpu_set_accel_fsr_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_set_accel_fsr_2
// 1260 
// 1261     switch (fsr) {
??mpu_set_accel_fsr_0:
        MOV     A,R6
        ADD     A,#-0x2
        JZ      ??mpu_set_accel_fsr_3
        ADD     A,#-0x2
        JZ      ??mpu_set_accel_fsr_4
        ADD     A,#-0x4
        JZ      ??mpu_set_accel_fsr_5
        ADD     A,#-0x8
        JZ      ??mpu_set_accel_fsr_6
        SJMP    ??mpu_set_accel_fsr_1
// 1262     case 2:
// 1263         data = INV_FSR_2G << 3;
??mpu_set_accel_fsr_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        SJMP    ??mpu_set_accel_fsr_7
// 1264         break;
// 1265     case 4:
// 1266         data = INV_FSR_4G << 3;
??mpu_set_accel_fsr_4:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x8
        SJMP    ??mpu_set_accel_fsr_7
// 1267         break;
// 1268     case 8:
// 1269         data = INV_FSR_8G << 3;
??mpu_set_accel_fsr_5:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x10
        SJMP    ??mpu_set_accel_fsr_7
// 1270         break;
// 1271     case 16:
// 1272         data = INV_FSR_16G << 3;
??mpu_set_accel_fsr_6:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x18
??mpu_set_accel_fsr_7:
        MOVX    @DPTR,A
// 1273         break;
// 1274     default:
// 1275         return -1;
// 1276     }
// 1277 
// 1278     if (st.chip_cfg.accel_fsr == (data >> 3))
        MOV     DPTR,#st + 5
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_13:
        JZ      ??mpu_set_accel_fsr_8
// 1279         return 0;
// 1280     if (i2c_write(st.hw->addr, st.reg->accel_cfg, 1, &data))
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_283:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_170:
        JNZ     ??mpu_set_accel_fsr_1
// 1281         return -1;
// 1282     st.chip_cfg.accel_fsr = data >> 3;
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_236:
        MOV     DPTR,#st + 5
        MOVX    @DPTR,A
// 1283     return 0;
??mpu_set_accel_fsr_8:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_set_accel_fsr_2:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock463
// 1284 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
        CFI Block cfiCond464 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_12
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond465 Using cfiCommon0
        CFI (cfiCond465) NoFunction
        CFI (cfiCond465) Conditional ??CrossCallReturnLabel_13
        CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond465) CFA_SP SP+0
        CFI (cfiCond465) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker466 Using cfiCommon1
        CFI (cfiPicker466) NoFunction
        CFI (cfiPicker466) Picker
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_120:
        MOV     C,0xE0 /* A   */.7
        RRC     A
        MOV     C,0xE0 /* A   */.7
        RRC     A
        MOV     C,0xE0 /* A   */.7
        RRC     A
        XRL     A,R0
        RET
        CFI EndBlock cfiCond464
        CFI EndBlock cfiCond465
        CFI EndBlock cfiPicker466
// 1285 
// 1286 /**
// 1287  *  @brief      Get the current DLPF setting.
// 1288  *  @param[out] lpf Current LPF setting.
// 1289  *  0 if successful.
// 1290  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1291 int mpu_get_lpf(unsigned short *lpf)
mpu_get_lpf:
        CFI Block cfiBlock467 Using cfiCommon0
        CFI Function mpu_get_lpf
        CODE
// 1292 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1293     switch (st.chip_cfg.lpf) {
        MOV     DPTR,#st + 7
        MOVX    A,@DPTR
        DEC     A
        JZ      ??mpu_get_lpf_0
        DEC     A
        JZ      ??mpu_get_lpf_1
        DEC     A
        JZ      ??mpu_get_lpf_2
        DEC     A
        JZ      ??mpu_get_lpf_3
        DEC     A
        JZ      ??mpu_get_lpf_4
        DEC     A
        JZ      ??mpu_get_lpf_5
        SJMP    ??mpu_get_lpf_6
// 1294     case INV_FILTER_188HZ:
// 1295         lpf[0] = 188;
??mpu_get_lpf_0:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x44
??mpu_get_lpf_7:
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        SJMP    ??mpu_get_lpf_8
// 1296         break;
// 1297     case INV_FILTER_98HZ:
// 1298         lpf[0] = 98;
??mpu_get_lpf_1:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x62
        SJMP    ??mpu_get_lpf_7
// 1299         break;
// 1300     case INV_FILTER_42HZ:
// 1301         lpf[0] = 42;
??mpu_get_lpf_2:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x2a
        SJMP    ??mpu_get_lpf_7
// 1302         break;
// 1303     case INV_FILTER_20HZ:
// 1304         lpf[0] = 20;
??mpu_get_lpf_3:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x14
        SJMP    ??mpu_get_lpf_7
// 1305         break;
// 1306     case INV_FILTER_10HZ:
// 1307         lpf[0] = 10;
??mpu_get_lpf_4:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0xa
        SJMP    ??mpu_get_lpf_7
// 1308         break;
// 1309     case INV_FILTER_5HZ:
// 1310         lpf[0] = 5;
??mpu_get_lpf_5:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x5
        SJMP    ??mpu_get_lpf_7
// 1311         break;
// 1312     case INV_FILTER_256HZ_NOLPF2:
// 1313     case INV_FILTER_2100HZ_NOLPF:
// 1314     default:
// 1315         lpf[0] = 0;
??mpu_get_lpf_6:
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
// 1316         break;
// 1317     }
??mpu_get_lpf_8:
        LJMP    ??Subroutine122_0 & 0xFFFF
        CFI EndBlock cfiBlock467
// 1318     return 0;
// 1319 }
// 1320 
// 1321 /**
// 1322  *  @brief      Set digital low pass filter.
// 1323  *  The following LPF settings are supported: 188, 98, 42, 20, 10, 5.
// 1324  *  @param[in]  lpf Desired LPF setting.
// 1325  *  @return     0 if successful.
// 1326  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1327 int mpu_set_lpf(unsigned short lpf)
mpu_set_lpf:
        CFI Block cfiBlock468 Using cfiCommon0
        CFI Function mpu_set_lpf
        CODE
// 1328 {
        FUNCALL mpu_set_lpf, MPU_Write_Len
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 1)
// 1329     unsigned char data;
// 1330 
// 1331     if (!(st.chip_cfg.sensors))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_set_lpf_0
// 1332         return -1;
??mpu_set_lpf_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_set_lpf_2 & 0xFFFF
// 1333 
// 1334     if (lpf >= 188)
??mpu_set_lpf_0:
        CLR     C
        MOV     A,R2
        SUBB    A,#-0x44
        MOV     A,R3
        SUBB    A,#0x0
        JC      ??mpu_set_lpf_3
// 1335         data = INV_FILTER_188HZ;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x1
        SJMP    ??mpu_set_lpf_4
// 1336     else if (lpf >= 98)
??mpu_set_lpf_3:
        CLR     C
        MOV     A,R2
        SUBB    A,#0x62
        MOV     A,R3
        SUBB    A,#0x0
        JC      ??mpu_set_lpf_5
// 1337         data = INV_FILTER_98HZ;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x2
        SJMP    ??mpu_set_lpf_4
// 1338     else if (lpf >= 42)
??mpu_set_lpf_5:
        CLR     C
        MOV     A,R2
        SUBB    A,#0x2a
        MOV     A,R3
        SUBB    A,#0x0
        JC      ??mpu_set_lpf_6
// 1339         data = INV_FILTER_42HZ;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x3
        SJMP    ??mpu_set_lpf_4
// 1340     else if (lpf >= 20)
??mpu_set_lpf_6:
        CLR     C
        MOV     A,R2
        SUBB    A,#0x14
        MOV     A,R3
        SUBB    A,#0x0
        JC      ??mpu_set_lpf_7
// 1341         data = INV_FILTER_20HZ;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x4
        SJMP    ??mpu_set_lpf_4
// 1342     else if (lpf >= 10)
??mpu_set_lpf_7:
        CLR     C
        MOV     A,R2
        SUBB    A,#0xa
        MOV     A,R3
        SUBB    A,#0x0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        JC      ??mpu_set_lpf_8
// 1343         data = INV_FILTER_10HZ;
        MOV     A,#0x5
        SJMP    ??mpu_set_lpf_4
// 1344     else
// 1345         data = INV_FILTER_5HZ;
??mpu_set_lpf_8:
        MOV     A,#0x6
??mpu_set_lpf_4:
        MOVX    @DPTR,A
// 1346 
// 1347     if (st.chip_cfg.lpf == data)
        MOV     DPTR,#st + 7
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_119:
        XRL     A,R0
        JZ      ??mpu_set_lpf_9
// 1348         return 0;
// 1349     if (i2c_write(st.hw->addr, st.reg->lpf, 1, &data))
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_26:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_171:
        JNZ     ??mpu_set_lpf_1
// 1350         return -1;
// 1351     st.chip_cfg.lpf = data;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     DPTR,#st + 7
        MOVX    @DPTR,A
// 1352     return 0;
??mpu_set_lpf_9:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_set_lpf_2:
        LJMP    ?Subroutine10 & 0xFFFF
        CFI EndBlock cfiBlock468
// 1353 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine85:
        CFI Block cfiCond469 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_12
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond470 Using cfiCommon0
        CFI (cfiCond470) NoFunction
        CFI (cfiCond470) Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_13
        CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond470) CFA_SP SP+0
        CFI (cfiCond470) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond471 Using cfiCommon0
        CFI (cfiCond471) NoFunction
        CFI (cfiCond471) Conditional ??CrossCallReturnLabel_119
        CFI (cfiCond471) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond471) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond471) CFA_SP SP+-5
        CFI (cfiCond471) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiPicker472 Using cfiCommon1
        CFI (cfiPicker472) NoFunction
        CFI (cfiPicker472) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond469
        CFI EndBlock cfiCond470
        CFI EndBlock cfiCond471
        CFI EndBlock cfiPicker472

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
        CFI Block cfiCond473 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_25
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond474 Using cfiCommon0
        CFI (cfiCond474) NoFunction
        CFI (cfiCond474) Conditional ??CrossCallReturnLabel_26
        CFI (cfiCond474) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond474) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond474) CFA_SP SP+-5
        CFI (cfiCond474) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond475 Using cfiCommon0
        CFI (cfiCond475) NoFunction
        CFI (cfiCond475) Conditional ??CrossCallReturnLabel_27
        CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond475) CFA_SP SP+0
        CFI (cfiCond475) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker476 Using cfiCommon1
        CFI (cfiPicker476) NoFunction
        CFI (cfiPicker476) Picker
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_286:
        INC     DPTR
        RET
        CFI EndBlock cfiCond473
        CFI EndBlock cfiCond474
        CFI EndBlock cfiCond475
        CFI EndBlock cfiPicker476
// 1354 
// 1355 /**
// 1356  *  @brief      Get sampling rate.
// 1357  *  @param[out] rate    Current sampling rate (Hz).
// 1358  *  @return     0 if successful.
// 1359  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1360 int mpu_get_sample_rate(unsigned short *rate)
mpu_get_sample_rate:
        CFI Block cfiBlock477 Using cfiCommon0
        CFI Function mpu_get_sample_rate
        CODE
// 1361 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1362     if (st.chip_cfg.dmp_on)
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JZ      ??mpu_get_sample_rate_0
// 1363         return -1;
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??CrossCallReturnLabel_296
// 1364     else
// 1365         rate[0] = st.chip_cfg.sample_rate;
??mpu_get_sample_rate_0:
        MOV     DPTR,#st + 9
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,R0
        LCALL   ?Subroutine53 & 0xFFFF
// 1366     return 0;
??CrossCallReturnLabel_296:
        LJMP    ??Subroutine124_0 & 0xFFFF
        CFI EndBlock cfiBlock477
// 1367 }
// 1368 
// 1369 /**
// 1370  *  @brief      Set sampling rate.
// 1371  *  Sampling rate must be between 4Hz and 1kHz.
// 1372  *  @param[in]  rate    Desired sampling rate (Hz).
// 1373  *  @return     0 if successful.
// 1374  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1375 int mpu_set_sample_rate(unsigned short rate)
mpu_set_sample_rate:
        CFI Block cfiBlock478 Using cfiCommon0
        CFI Function mpu_set_sample_rate
        CODE
// 1376 {
        FUNCALL mpu_set_sample_rate, mpu_lp_accel_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_sample_rate, mpu_lp_accel_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_sample_rate, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_sample_rate, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1377     unsigned char data;
// 1378 
// 1379     if (!(st.chip_cfg.sensors))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_set_sample_rate_0
// 1380         return -1;
??mpu_set_sample_rate_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_set_sample_rate_2 & 0xFFFF
// 1381 
// 1382     if (st.chip_cfg.dmp_on)
??mpu_set_sample_rate_0:
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JNZ     ??mpu_set_sample_rate_1
// 1383         return -1;
// 1384     else {
// 1385         if (st.chip_cfg.lp_accel_mode) {
        MOV     DPTR,#st + 15
        MOVX    A,@DPTR
        JZ      ??mpu_set_sample_rate_3
// 1386             if (rate && (rate <= 40)) {
        MOV     A,R6
        ORL     A,R7
        JZ      ??mpu_set_sample_rate_4
        CLR     C
        MOV     A,R6
        SUBB    A,#0x29
        MOV     A,R7
        SUBB    A,#0x0
        JNC     ??mpu_set_sample_rate_4
// 1387                 /* Just stay in low-power accel mode. */
// 1388                 mpu_lp_accel_mode(rate);
        ; Setup parameters for call to function mpu_lp_accel_mode
        MOV     A,R6
        MOV     R1,A
        LCALL   ??mpu_lp_accel_mode?relay
// 1389                 return 0;
        SJMP    ??mpu_set_sample_rate_5
// 1390             }
// 1391             /* Requested rate exceeds the allowed frequencies in LP accel mode,
// 1392              * switch back to full-power mode.
// 1393              */
// 1394             mpu_lp_accel_mode(0);
??mpu_set_sample_rate_4:
        ; Setup parameters for call to function mpu_lp_accel_mode
        MOV     R1,#0x0
        LCALL   ??mpu_lp_accel_mode?relay
// 1395         }
// 1396         if (rate < 4)
??mpu_set_sample_rate_3:
        CLR     C
        MOV     A,R6
        SUBB    A,#0x4
        MOV     A,R7
        SUBB    A,#0x0
        JNC     ??mpu_set_sample_rate_6
// 1397             rate = 4;
        MOV     R6,#0x4
        MOV     R7,#0x0
        SJMP    ??mpu_set_sample_rate_7
// 1398         else if (rate > 1000)
??mpu_set_sample_rate_6:
        CLR     C
        MOV     A,R6
        SUBB    A,#-0x17
        MOV     A,R7
        SUBB    A,#0x3
        JC      ??mpu_set_sample_rate_7
// 1399             rate = 1000;
        MOV     R6,#-0x18
        MOV     R7,#0x3
// 1400 
// 1401         data = 1000 / rate - 1;
??mpu_set_sample_rate_7:
        MOV     R0,#-0x18
        MOV     R1,#0x3
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ?US_DIV_MOD
        MOV     A,R0
        DEC     A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine50 & 0xFFFF
// 1402         if (i2c_write(st.hw->addr, st.reg->rate_div, 1, &data))
??CrossCallReturnLabel_66:
        MOV     DPTR,#st
        LCALL   ??Subroutine141_0 & 0xFFFF
??CrossCallReturnLabel_321:
        INC     DPTR
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_172:
        JNZ     ??mpu_set_sample_rate_1
// 1403             return -1;
// 1404 
// 1405         st.chip_cfg.sample_rate = 1000 / (1 + data);
        MOV     R0,#-0x18
        MOV     R1,#0x3
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ?S_DIV_MOD
        MOV     DPTR,#st + 9
        MOV     A,R0
        LCALL   ??Subroutine119_0 & 0xFFFF
// 1406 
// 1407 #ifdef AK89xx_SECONDARY
// 1408         mpu_set_compass_sample_rate(min(st.chip_cfg.compass_sample_rate, MAX_COMPASS_SAMPLE_RATE));
// 1409 #endif
// 1410 
// 1411         /* Automatically set LPF to 1/2 sampling rate. */
// 1412         mpu_set_lpf(st.chip_cfg.sample_rate >> 1);
??CrossCallReturnLabel_242:
        ; Setup parameters for call to function mpu_set_lpf
        MOV     DPTR,#st + 9
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        CLR     C
        RRC     A
        MOV     R3,A
        MOV     A,R2
        RRC     A
        MOV     R2,A
        LCALL   ??mpu_set_lpf?relay
// 1413         return 0;
??mpu_set_sample_rate_5:
        MOV     R2,#0x0
        MOV     R3,#0x0
// 1414     }
??mpu_set_sample_rate_2:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock478
// 1415 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
        CFI Block cfiCond479 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_64
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond480 Using cfiCommon0
        CFI (cfiCond480) NoFunction
        CFI (cfiCond480) Conditional ??CrossCallReturnLabel_65
        CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond480) CFA_SP SP+0
        CFI (cfiCond480) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond481 Using cfiCommon0
        CFI (cfiCond481) NoFunction
        CFI (cfiCond481) Conditional ??CrossCallReturnLabel_66
        CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond481) CFA_SP SP+0
        CFI (cfiCond481) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond482 Using cfiCommon0
        CFI (cfiCond482) NoFunction
        CFI (cfiCond482) Conditional ??CrossCallReturnLabel_67
        CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond482) CFA_SP SP+0
        CFI (cfiCond482) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker483 Using cfiCommon1
        CFI (cfiPicker483) NoFunction
        CFI (cfiPicker483) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_308:
        RET
        CFI EndBlock cfiCond479
        CFI EndBlock cfiCond480
        CFI EndBlock cfiCond481
        CFI EndBlock cfiCond482
        CFI EndBlock cfiPicker483

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine93:
        CFI Block cfiCond484 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_64
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond485 Using cfiCommon0
        CFI (cfiCond485) NoFunction
        CFI (cfiCond485) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_65
        CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond485) CFA_SP SP+0
        CFI (cfiCond485) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond486 Using cfiCommon0
        CFI (cfiCond486) NoFunction
        CFI (cfiCond486) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_66
        CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond486) CFA_SP SP+0
        CFI (cfiCond486) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond487 Using cfiCommon0
        CFI (cfiCond487) NoFunction
        CFI (cfiCond487) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_67
        CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond487) CFA_SP SP+0
        CFI (cfiCond487) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond488 Using cfiCommon0
        CFI (cfiCond488) NoFunction
        CFI (cfiCond488) Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_18
        CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond488) CFA_SP SP+0
        CFI (cfiCond488) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond489 Using cfiCommon0
        CFI (cfiCond489) NoFunction
        CFI (cfiCond489) Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_19
        CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond489) CFA_SP SP+0
        CFI (cfiCond489) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond490 Using cfiCommon0
        CFI (cfiCond490) NoFunction
        CFI (cfiCond490) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_301
        CFI (cfiCond490) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond490) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond490) CFA_SP SP+-5
        CFI (cfiCond490) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond491 Using cfiCommon0
        CFI (cfiCond491) NoFunction
        CFI (cfiCond491) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_302
        CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond491) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond491) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond491) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond491) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond491) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond491) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond491) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond491) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond491) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond491) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond491) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond491) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond491) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond491) CFA_SP SP+0
        CFI (cfiCond491) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond492 Using cfiCommon0
        CFI (cfiCond492) NoFunction
        CFI (cfiCond492) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_303
        CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond492) CFA_SP SP+0
        CFI (cfiCond492) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond493 Using cfiCommon0
        CFI (cfiCond493) NoFunction
        CFI (cfiCond493) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_304
        CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond493) CFA_SP SP+0
        CFI (cfiCond493) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond494 Using cfiCommon0
        CFI (cfiCond494) NoFunction
        CFI (cfiCond494) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_305
        CFI (cfiCond494) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond494) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond494) CFA_SP SP+-5
        CFI (cfiCond494) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond495 Using cfiCommon0
        CFI (cfiCond495) NoFunction
        CFI (cfiCond495) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_306
        CFI (cfiCond495) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond495) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond495) CFA_SP SP+-5
        CFI (cfiCond495) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond496 Using cfiCommon0
        CFI (cfiCond496) NoFunction
        CFI (cfiCond496) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_307
        CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond496) CFA_SP SP+0
        CFI (cfiCond496) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker497 Using cfiCommon1
        CFI (cfiPicker497) NoFunction
        CFI (cfiPicker497) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        RET
        CFI EndBlock cfiCond484
        CFI EndBlock cfiCond485
        CFI EndBlock cfiCond486
        CFI EndBlock cfiCond487
        CFI EndBlock cfiCond488
        CFI EndBlock cfiCond489
        CFI EndBlock cfiCond490
        CFI EndBlock cfiCond491
        CFI EndBlock cfiCond492
        CFI EndBlock cfiCond493
        CFI EndBlock cfiCond494
        CFI EndBlock cfiCond495
        CFI EndBlock cfiCond496
        CFI EndBlock cfiPicker497
// 1416 
// 1417 /**
// 1418  *  @brief      Get compass sampling rate.
// 1419  *  @param[out] rate    Current compass sampling rate (Hz).
// 1420  *  @return     0 if successful.
// 1421  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1422 int mpu_get_compass_sample_rate(unsigned short *rate)
mpu_get_compass_sample_rate:
        CFI Block cfiBlock498 Using cfiCommon0
        CFI Function mpu_get_compass_sample_rate
        CODE
// 1423 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1424 #ifdef AK89xx_SECONDARY
// 1425     rate[0] = st.chip_cfg.compass_sample_rate;
// 1426     return 0;
// 1427 #else
// 1428     rate[0] = 0;
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1429     return -1;
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??Subroutine124_0 & 0xFFFF
        CFI EndBlock cfiBlock498
// 1430 #endif
// 1431 }
// 1432 
// 1433 /**
// 1434  *  @brief      Set compass sampling rate.
// 1435  *  The compass on the auxiliary I2C bus is read by the MPU hardware at a
// 1436  *  maximum of 100Hz. The actual rate can be set to a fraction of the gyro
// 1437  *  sampling rate.
// 1438  *
// 1439  *  \n WARNING: The new rate may be different than what was requested. Call
// 1440  *  mpu_get_compass_sample_rate to check the actual setting.
// 1441  *  @param[in]  rate    Desired compass sampling rate (Hz).
// 1442  *  @return     0 if successful.
// 1443  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1444 int mpu_set_compass_sample_rate(unsigned short rate)
mpu_set_compass_sample_rate:
        CFI Block cfiBlock499 Using cfiCommon0
        CFI Function mpu_set_compass_sample_rate
        CODE
// 1445 {
        ; Saved register size: 0
        ; Auto size: 0
// 1446 #ifdef AK89xx_SECONDARY
// 1447     unsigned char div;
// 1448     if (!rate || rate > st.chip_cfg.sample_rate || rate > MAX_COMPASS_SAMPLE_RATE)
// 1449         return -1;
// 1450 
// 1451     div = st.chip_cfg.sample_rate / rate - 1;
// 1452     if (i2c_write(st.hw->addr, st.reg->s4_ctrl, 1, &div))
// 1453         return -1;
// 1454     st.chip_cfg.compass_sample_rate = st.chip_cfg.sample_rate / (div + 1);
// 1455     return 0;
// 1456 #else
// 1457     return -1;
        LJMP    ?Subroutine4 & 0xFFFF
        CFI EndBlock cfiBlock499
// 1458 #endif
// 1459 }
// 1460 
// 1461 /**
// 1462  *  @brief      Get gyro sensitivity scale factor.
// 1463  *  @param[out] sens    Conversion from hardware units to dps.
// 1464  *  @return     0 if successful.
// 1465  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1466 int mpu_get_gyro_sens(float *sens)
mpu_get_gyro_sens:
        CFI Block cfiBlock500 Using cfiCommon0
        CFI Function mpu_get_gyro_sens
        CODE
// 1467 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
// 1468     switch (st.chip_cfg.gyro_fsr) {
        MOV     DPTR,#st + 4
        MOVX    A,@DPTR
        JZ      ??mpu_get_gyro_sens_0
        DEC     A
        JZ      ??mpu_get_gyro_sens_1
        DEC     A
        JZ      ??mpu_get_gyro_sens_2
        DEC     A
        JZ      ??mpu_get_gyro_sens_3
        SJMP    ??mpu_get_gyro_sens_4
// 1469     case INV_FSR_250DPS:
// 1470         sens[0] = 131.f;
??mpu_get_gyro_sens_0:
        MOV     DPTR,#__Constant_43030000
??mpu_get_gyro_sens_5:
        LCALL   ?XLOAD_R2345
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?XSTORE_R2345
// 1471         break;
// 1472     case INV_FSR_500DPS:
// 1473         sens[0] = 65.5f;
// 1474         break;
// 1475     case INV_FSR_1000DPS:
// 1476         sens[0] = 32.8f;
// 1477         break;
// 1478     case INV_FSR_2000DPS:
// 1479         sens[0] = 16.4f;
// 1480         break;
// 1481     default:
// 1482         return -1;
// 1483     }
// 1484     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_get_gyro_sens_6:
        LJMP    ??Subroutine112_0 & 0xFFFF
??mpu_get_gyro_sens_1:
        MOV     DPTR,#__Constant_42830000
        SJMP    ??mpu_get_gyro_sens_5
??mpu_get_gyro_sens_2:
        MOV     DPTR,#__Constant_42033333
        SJMP    ??mpu_get_gyro_sens_5
??mpu_get_gyro_sens_3:
        MOV     DPTR,#__Constant_41833333
        SJMP    ??mpu_get_gyro_sens_5
??mpu_get_gyro_sens_4:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_get_gyro_sens_6
        CFI EndBlock cfiBlock500
// 1485 }
// 1486 
// 1487 /**
// 1488  *  @brief      Get accel sensitivity scale factor.
// 1489  *  @param[out] sens    Conversion from hardware units to g's.
// 1490  *  @return     0 if successful.
// 1491  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1492 int mpu_get_accel_sens(unsigned short *sens)
mpu_get_accel_sens:
        CFI Block cfiBlock501 Using cfiCommon0
        CFI Function mpu_get_accel_sens
        CODE
// 1493 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1494     switch (st.chip_cfg.accel_fsr) {
        MOV     DPTR,#st + 5
        MOVX    A,@DPTR
        JZ      ??mpu_get_accel_sens_0
        DEC     A
        JZ      ??mpu_get_accel_sens_1
        DEC     A
        JZ      ??mpu_get_accel_sens_2
        DEC     A
        JZ      ??mpu_get_accel_sens_3
        SJMP    ??mpu_get_accel_sens_4
// 1495     case INV_FSR_2G:
// 1496         sens[0] = 16384;
??mpu_get_accel_sens_0:
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x40
??mpu_get_accel_sens_5:
        MOVX    @DPTR,A
// 1497         break;
// 1498     case INV_FSR_4G:
// 1499         sens[0] = 8092;
// 1500         break;
// 1501     case INV_FSR_8G:
// 1502         sens[0] = 4096;
// 1503         break;
// 1504     case INV_FSR_16G:
// 1505         sens[0] = 2048;
// 1506         break;
// 1507     default:
// 1508         return -1;
// 1509     }
// 1510     if (st.chip_cfg.accel_half)
        MOV     DPTR,#st + 14
        MOVX    A,@DPTR
        JZ      ??CrossCallReturnLabel_243
// 1511         sens[0] >>= 1;
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_117:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine119_0 & 0xFFFF
// 1512     return 0;
??CrossCallReturnLabel_243:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_get_accel_sens_6:
        LJMP    ??Subroutine124_0 & 0xFFFF
??mpu_get_accel_sens_1:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x64
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x1f
        SJMP    ??mpu_get_accel_sens_5
??mpu_get_accel_sens_2:
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x10
        SJMP    ??mpu_get_accel_sens_5
??mpu_get_accel_sens_3:
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x8
        SJMP    ??mpu_get_accel_sens_5
??mpu_get_accel_sens_4:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_get_accel_sens_6
        CFI EndBlock cfiBlock501
// 1513 }
// 1514 
// 1515 /**
// 1516  *  @brief      Get current FIFO configuration.
// 1517  *  @e sensors can contain a combination of the following flags:
// 1518  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
// 1519  *  \n INV_XYZ_GYRO
// 1520  *  \n INV_XYZ_ACCEL
// 1521  *  @param[out] sensors Mask of sensors in FIFO.
// 1522  *  @return     0 if successful.
// 1523  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1524 int mpu_get_fifo_config(unsigned char *sensors)
mpu_get_fifo_config:
        CFI Block cfiBlock502 Using cfiCommon0
        CFI Function mpu_get_fifo_config
        CODE
// 1525 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1526     sensors[0] = st.chip_cfg.fifo_enable;
        MOV     DPTR,#st + 11
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock502
// 1527     return 0;
// 1528 }
// 1529 
// 1530 /**
// 1531  *  @brief      Select which sensors are pushed to FIFO.
// 1532  *  @e sensors can contain a combination of the following flags:
// 1533  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
// 1534  *  \n INV_XYZ_GYRO
// 1535  *  \n INV_XYZ_ACCEL
// 1536  *  @param[in]  sensors Mask of sensors to push to FIFO.
// 1537  *  @return     0 if successful.
// 1538  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1539 int mpu_configure_fifo(unsigned char sensors)
mpu_configure_fifo:
        CFI Block cfiBlock503 Using cfiCommon0
        CFI Function mpu_configure_fifo
        CODE
// 1540 {
        FUNCALL mpu_configure_fifo, set_int_enable
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_configure_fifo, set_int_enable
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_configure_fifo, mpu_reset_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
// 1541     unsigned char prev;
// 1542     int result = 0;
// 1543 
// 1544     /* Compass data isn't going into the FIFO. Stop trying. */
// 1545     sensors &= ~INV_XYZ_COMPASS;
        MOV     A,R1
        CLR     0xE0 /* A   */.0
        MOV     ?V0 + 0,A
// 1546 
// 1547     if (st.chip_cfg.dmp_on)
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JZ      ??mpu_configure_fifo_0
// 1548         return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??mpu_configure_fifo_1
// 1549     else {
// 1550         if (!(st.chip_cfg.sensors))
??mpu_configure_fifo_0:
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_configure_fifo_2
// 1551             return -1;
??mpu_configure_fifo_3:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_configure_fifo_1
// 1552         prev = st.chip_cfg.fifo_enable;
??mpu_configure_fifo_2:
        MOV     DPTR,#st + 11
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        ANL     A,?V0 + 0
        MOV     R0,A
        MOV     DPTR,#st + 11
        MOVX    @DPTR,A
// 1553         st.chip_cfg.fifo_enable = sensors & st.chip_cfg.sensors;
// 1554         if (st.chip_cfg.fifo_enable != sensors)
        MOV     A,?V0 + 0
        XRL     A,R0
        JZ      ??mpu_configure_fifo_4
// 1555             /* You're not getting what you asked for. Some sensors are
// 1556              * asleep.
// 1557              */
// 1558             result = -1;
        MOV     R6,#-0x1
        MOV     R7,#-0x1
        SJMP    ??mpu_configure_fifo_5
// 1559         else
// 1560             result = 0;
??mpu_configure_fifo_4:
        MOV     R6,#0x0
        MOV     R7,#0x0
// 1561         if (sensors || st.chip_cfg.lp_accel_mode)
??mpu_configure_fifo_5:
        MOV     A,?V0 + 0
        JNZ     ??mpu_configure_fifo_6
        MOV     DPTR,#st + 15
        MOVX    A,@DPTR
        JZ      ??mpu_configure_fifo_7
// 1562             set_int_enable(1);
??mpu_configure_fifo_6:
        ; Setup parameters for call to function set_int_enable
        MOV     R1,#0x1
        LCALL   ??set_int_enable?relay
// 1563         else
// 1564             set_int_enable(0);
// 1565         if (sensors) {
        MOV     A,?V0 + 0
        JNZ     ??mpu_configure_fifo_8
// 1566             if (mpu_reset_fifo()) {
// 1567                 st.chip_cfg.fifo_enable = prev;
// 1568                 return -1;
// 1569             }
// 1570         }
// 1571     }
// 1572 
// 1573     return result;
??mpu_configure_fifo_9:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??mpu_configure_fifo_1:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
??mpu_configure_fifo_7:
        ; Setup parameters for call to function set_int_enable
        MOV     R1,#0x0
        LCALL   ??set_int_enable?relay
        SJMP    ??mpu_configure_fifo_9
??mpu_configure_fifo_8:
        ; Setup parameters for call to function mpu_reset_fifo
        LCALL   ??mpu_reset_fifo?relay
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??mpu_configure_fifo_9
        MOV     A,?V0 + 1
        MOV     DPTR,#st + 11
        MOVX    @DPTR,A
        SJMP    ??mpu_configure_fifo_3
        CFI EndBlock cfiBlock503
// 1574 }
// 1575 
// 1576 /**
// 1577  *  @brief      Get current power state.
// 1578  *  @param[in]  power_on    1 if turned on, 0 if suspended.
// 1579  *  @return     0 if successful.
// 1580  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1581 int mpu_get_power_state(unsigned char *power_on)
mpu_get_power_state:
        CFI Block cfiBlock504 Using cfiCommon0
        CFI Function mpu_get_power_state
        CODE
// 1582 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1583     if (st.chip_cfg.sensors)
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        JZ      ??mpu_get_power_state_0
// 1584         power_on[0] = 1;
        MOV     A,#0x1
        SJMP    ??mpu_get_power_state_1
// 1585     else
// 1586         power_on[0] = 0;
??mpu_get_power_state_0:
        CLR     A
??mpu_get_power_state_1:
        LJMP    ??Subroutine122_0 & 0xFFFF
        CFI EndBlock cfiBlock504
// 1587     return 0;
// 1588 }
// 1589 
// 1590 /**
// 1591  *  @brief      Turn specific sensors on/off.
// 1592  *  @e sensors can contain a combination of the following flags:
// 1593  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
// 1594  *  \n INV_XYZ_GYRO
// 1595  *  \n INV_XYZ_ACCEL
// 1596  *  \n INV_XYZ_COMPASS
// 1597  *  @param[in]  sensors    Mask of sensors to wake.
// 1598  *  @return     0 if successful.
// 1599  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1600 int mpu_set_sensors(unsigned char sensors)
mpu_set_sensors:
        CFI Block cfiBlock505 Using cfiCommon0
        CFI Function mpu_set_sensors
        CODE
// 1601 {
        FUNCALL mpu_set_sensors, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_sensors, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_sensors, mpu_set_int_latched
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_sensors, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,R1
        MOV     R6,A
// 1602     unsigned char data;
// 1603 #ifdef AK89xx_SECONDARY
// 1604     unsigned char user_ctrl;
// 1605 #endif
// 1606 
// 1607     if (sensors & INV_XYZ_GYRO)
        MOV     A,#0x70
        ANL     A,R6
        JZ      ??mpu_set_sensors_0
// 1608         data = INV_CLK_PLL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x1
        SJMP    ??mpu_set_sensors_1
// 1609     else if (sensors)
??mpu_set_sensors_0:
        MOV     A,R6
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        JZ      ??mpu_set_sensors_2
// 1610         data = 0;
        CLR     A
        SJMP    ??mpu_set_sensors_1
// 1611     else
// 1612         data = BIT_SLEEP;
??mpu_set_sensors_2:
        MOV     A,#0x40
??mpu_set_sensors_1:
        LCALL   ?Subroutine50 & 0xFFFF
// 1613     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &data)) {
??CrossCallReturnLabel_67:
        LCALL   ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_143:
        JZ      ??mpu_set_sensors_3
// 1614         st.chip_cfg.sensors = 0;
??mpu_set_sensors_4:
        MOV     DPTR,#st + 6
        CLR     A
        MOVX    @DPTR,A
// 1615         return -1;
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_set_sensors_5
// 1616     }
// 1617     st.chip_cfg.clk_src = data & ~BIT_SLEEP;
??mpu_set_sensors_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ANL     A,#0xbf
        MOV     DPTR,#st + 8
        MOVX    @DPTR,A
// 1618 
// 1619     data = 0;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1620     if (!(sensors & INV_X_GYRO))
        MOV     A,R6
        MOV     C,0xE0 /* A   */.6
        JC      ??mpu_set_sensors_6
// 1621         data |= BIT_STBY_XG;
        MOV     A,#0x4
        MOVX    @DPTR,A
// 1622     if (!(sensors & INV_Y_GYRO))
??mpu_set_sensors_6:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.5
        JC      ??mpu_set_sensors_7
// 1623         data |= BIT_STBY_YG;
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.1
        MOVX    @DPTR,A
// 1624     if (!(sensors & INV_Z_GYRO))
??mpu_set_sensors_7:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.4
        JC      ??mpu_set_sensors_8
// 1625         data |= BIT_STBY_ZG;
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.0
        MOVX    @DPTR,A
// 1626     if (!(sensors & INV_XYZ_ACCEL))
??mpu_set_sensors_8:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.3
        JC      ??mpu_set_sensors_9
// 1627         data |= BIT_STBY_XYZA;
        MOVX    A,@DPTR
        ORL     A,#0x38
        MOVX    @DPTR,A
// 1628     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_2, 1, &data)) {
??mpu_set_sensors_9:
        ; Setup parameters for call to function MPU_Write_Len
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x13
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_150:
        JNZ     ??mpu_set_sensors_4
// 1629         st.chip_cfg.sensors = 0;
// 1630         return -1;
// 1631     }
// 1632 
// 1633     if (sensors && (sensors != INV_XYZ_ACCEL))
        MOV     A,R6
        JZ      ??mpu_set_sensors_10
        MOV     A,#0x8
        XRL     A,R6
        JZ      ??mpu_set_sensors_10
// 1634         /* Latched interrupts only used in LP accel mode. */
// 1635         mpu_set_int_latched(0);
        ; Setup parameters for call to function mpu_set_int_latched
        MOV     R1,#0x0
        LCALL   ??mpu_set_int_latched?relay
// 1636 
// 1637 #ifdef AK89xx_SECONDARY
// 1638 #ifdef AK89xx_BYPASS
// 1639     if (sensors & INV_XYZ_COMPASS)
// 1640         mpu_set_bypass(1);
// 1641     else
// 1642         mpu_set_bypass(0);
// 1643 #else
// 1644     if (i2c_read(st.hw->addr, st.reg->user_ctrl, 1, &user_ctrl))
// 1645         return -1;
// 1646     /* Handle AKM power management. */
// 1647     if (sensors & INV_XYZ_COMPASS) {
// 1648         data = AKM_SINGLE_MEASUREMENT;
// 1649         user_ctrl |= BIT_AUX_IF_EN;
// 1650     } else {
// 1651         data = AKM_POWER_DOWN;
// 1652         user_ctrl &= ~BIT_AUX_IF_EN;
// 1653     }
// 1654     if (st.chip_cfg.dmp_on)
// 1655         user_ctrl |= BIT_DMP_EN;
// 1656     else
// 1657         user_ctrl &= ~BIT_DMP_EN;
// 1658     if (i2c_write(st.hw->addr, st.reg->s1_do, 1, &data))
// 1659         return -1;
// 1660     /* Enable/disable I2C master mode. */
// 1661     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &user_ctrl))
// 1662         return -1;
// 1663 #endif
// 1664 #endif
// 1665 
// 1666     st.chip_cfg.sensors = sensors;
??mpu_set_sensors_10:
        MOV     A,R6
        MOV     DPTR,#st + 6
        MOVX    @DPTR,A
// 1667     st.chip_cfg.lp_accel_mode = 0;
        MOV     DPTR,#st + 15
        CLR     A
        MOVX    @DPTR,A
// 1668     delay_ms(50);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x32
        MOV     R3,A
        LCALL   ??delay_ms?relay
// 1669     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_set_sensors_5:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock505
// 1670 }
// 1671 
// 1672 /**
// 1673  *  @brief      Read the MPU interrupt status registers.
// 1674  *  @param[out] status  Mask of interrupt bits.
// 1675  *  @return     0 if successful.
// 1676  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1677 int mpu_get_int_status(short *status)
mpu_get_int_status:
        CFI Block cfiBlock506 Using cfiCommon0
        CFI Function mpu_get_int_status
        CODE
// 1678 {
        FUNCALL mpu_get_int_status, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1679     unsigned char tmp[2];
// 1680     if (!st.chip_cfg.sensors)
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_get_int_status_0
// 1681         return -1;
??mpu_get_int_status_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??CrossCallReturnLabel_297
// 1682     if (i2c_read(st.hw->addr, st.reg->dmp_int_status, 2, tmp))
??mpu_get_int_status_0:
        ; Setup parameters for call to function MPU_Read_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x2
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x10
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_204:
        JNZ     ??mpu_get_int_status_1
// 1683         return -1;
// 1684     status[0] = (tmp[0] << 8) | tmp[1];
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_42:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_121:
        LCALL   ?Subroutine53 & 0xFFFF
// 1685     return 0;
??CrossCallReturnLabel_297:
        LJMP    ?Subroutine8 & 0xFFFF
        CFI EndBlock cfiBlock506
// 1686 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
        CFI Block cfiCond507 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_38
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond508 Using cfiCommon0
        CFI (cfiCond508) NoFunction
        CFI (cfiCond508) Conditional ??CrossCallReturnLabel_39
        CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond508) CFA_SP SP+0
        CFI (cfiCond508) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond509 Using cfiCommon0
        CFI (cfiCond509) NoFunction
        CFI (cfiCond509) Conditional ??CrossCallReturnLabel_40
        CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond509) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond509) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond509) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond509) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond509) CFA_SP SP+0
        CFI (cfiCond509) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond510 Using cfiCommon0
        CFI (cfiCond510) NoFunction
        CFI (cfiCond510) Conditional ??CrossCallReturnLabel_41
        CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond510) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond510) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond510) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond510) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond510) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond510) CFA_SP SP+0
        CFI (cfiCond510) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond511 Using cfiCommon0
        CFI (cfiCond511) NoFunction
        CFI (cfiCond511) Conditional ??CrossCallReturnLabel_42
        CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond511) CFA_SP SP+0
        CFI (cfiCond511) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond512 Using cfiCommon0
        CFI (cfiCond512) NoFunction
        CFI (cfiCond512) Conditional ??CrossCallReturnLabel_43
        CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond512) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond512) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond512) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond512) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond512) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond512) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond512) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond512) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond512) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond512) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond512) CFA_SP SP+0
        CFI (cfiCond512) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond513 Using cfiCommon0
        CFI (cfiCond513) NoFunction
        CFI (cfiCond513) Conditional ??CrossCallReturnLabel_44
        CFI (cfiCond513) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond513) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond513) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond513) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond513) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond513) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond513) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond513) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond513) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond513) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond513) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond513) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond513) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond513) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond513) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond513) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond513) CFA_SP SP+0
        CFI (cfiCond513) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond514 Using cfiCommon0
        CFI (cfiCond514) NoFunction
        CFI (cfiCond514) Conditional ??CrossCallReturnLabel_45
        CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond514) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond514) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond514) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond514) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond514) CFA_SP SP+0
        CFI (cfiCond514) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond515 Using cfiCommon0
        CFI (cfiCond515) NoFunction
        CFI (cfiCond515) Conditional ??CrossCallReturnLabel_46
        CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond515) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond515) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond515) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond515) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond515) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond515) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond515) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond515) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond515) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond515) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond515) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond515) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond515) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond515) CFA_SP SP+0
        CFI (cfiCond515) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond516 Using cfiCommon0
        CFI (cfiCond516) NoFunction
        CFI (cfiCond516) Conditional ??CrossCallReturnLabel_47
        CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond516) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond516) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond516) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond516) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond516) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond516) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond516) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond516) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond516) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond516) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond516) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond516) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond516) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond516) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond516) CFA_SP SP+0
        CFI (cfiCond516) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker517 Using cfiCommon1
        CFI (cfiPicker517) NoFunction
        CFI (cfiPicker517) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x1
        RET
        CFI EndBlock cfiCond507
        CFI EndBlock cfiCond508
        CFI EndBlock cfiCond509
        CFI EndBlock cfiCond510
        CFI EndBlock cfiCond511
        CFI EndBlock cfiCond512
        CFI EndBlock cfiCond513
        CFI EndBlock cfiCond514
        CFI EndBlock cfiCond515
        CFI EndBlock cfiCond516
        CFI EndBlock cfiPicker517
// 1687 
// 1688 /**
// 1689  *  @brief      Get one packet from the FIFO.
// 1690  *  If @e sensors does not contain a particular sensor, disregard the data
// 1691  *  returned to that pointer.
// 1692  *  \n @e sensors can contain a combination of the following flags:
// 1693  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
// 1694  *  \n INV_XYZ_GYRO
// 1695  *  \n INV_XYZ_ACCEL
// 1696  *  \n If the FIFO has no new data, @e sensors will be zero.
// 1697  *  \n If the FIFO is disabled, @e sensors will be zero and this function will
// 1698  *  return a non-zero error code.
// 1699  *  @param[out] gyro        Gyro data in hardware units.
// 1700  *  @param[out] accel       Accel data in hardware units.
// 1701  *  @param[out] timestamp   Timestamp in milliseconds.
// 1702  *  @param[out] sensors     Mask of sensors read from FIFO.
// 1703  *  @param[out] more        Number of remaining packets.
// 1704  *  @return     0 if successful.
// 1705  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1706 int mpu_read_fifo(short *gyro, short *accel, unsigned long *timestamp,
mpu_read_fifo:
        CFI Block cfiBlock518 Using cfiCommon0
        CFI Function mpu_read_fifo
        CODE
// 1707         unsigned char *sensors, unsigned char *more)
// 1708 {
        FUNCALL mpu_read_fifo, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_read_fifo, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_read_fifo, mpu_reset_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_read_fifo, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 7,R5
        MOV     A,#0x24
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_113:
        MOV     A,#0x26
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 10,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 11,A
// 1709     /* Assumes maximum packet size is gyro (6) + accel (6). */
// 1710     unsigned char data[MAX_PACKET_LENGTH];
// 1711     unsigned char packet_size = 0;
        MOV     ?V0 + 2,#0x0
// 1712     unsigned short fifo_count, index = 0;
        MOV     R6,#0x0
        MOV     R7,#0x0
// 1713 
// 1714     if (st.chip_cfg.dmp_on)
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JZ      ??mpu_read_fifo_0
// 1715         return -1;
??mpu_read_fifo_1:
        MOV     R2,#-0x1
??mpu_read_fifo_2:
        MOV     R3,#-0x1
??mpu_read_fifo_3:
        MOV     A,#0xc
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     R7,#0xe
        LJMP    ?BANKED_LEAVE_XDATA
        CFI CFA_XSP16 add(XSP16, 34)
// 1716 
// 1717     sensors[0] = 0;
??mpu_read_fifo_0:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        CLR     A
        MOVX    @DPTR,A
// 1718     if (!st.chip_cfg.sensors)
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JZ      ??mpu_read_fifo_1
// 1719         return -1;
// 1720     if (!st.chip_cfg.fifo_enable)
        MOV     DPTR,#st + 11
        MOVX    A,@DPTR
        JZ      ??mpu_read_fifo_1
// 1721         return -1;
// 1722 
// 1723     if (st.chip_cfg.fifo_enable & INV_X_GYRO)
        MOV     C,0xE0 /* A   */.6
        JNC     ??mpu_read_fifo_4
// 1724         packet_size += 2;
        MOV     ?V0 + 2,#0x2
// 1725     if (st.chip_cfg.fifo_enable & INV_Y_GYRO)
??mpu_read_fifo_4:
        MOV     C,0xE0 /* A   */.5
        JNC     ??mpu_read_fifo_5
// 1726         packet_size += 2;
        INC     ?V0 + 2
        INC     ?V0 + 2
// 1727     if (st.chip_cfg.fifo_enable & INV_Z_GYRO)
??mpu_read_fifo_5:
        MOV     C,0xE0 /* A   */.4
        JNC     ??mpu_read_fifo_6
// 1728         packet_size += 2;
        INC     ?V0 + 2
        INC     ?V0 + 2
// 1729     if (st.chip_cfg.fifo_enable & INV_XYZ_ACCEL)
??mpu_read_fifo_6:
        MOV     C,0xE0 /* A   */.3
        JNC     ??mpu_read_fifo_7
// 1730         packet_size += 6;
        MOV     A,#0x6
        ADD     A,?V0 + 2
        MOV     ?V0 + 2,A
// 1731 
// 1732     if (i2c_read(st.hw->addr, st.reg->fifo_count_h, 2, data))
??mpu_read_fifo_7:
        ; Setup parameters for call to function MPU_Read_Len
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_7:
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_210:
        JNZ     ??mpu_read_fifo_1
// 1733         return -1;
// 1734     fifo_count = (data[0] << 8) | data[1];
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_43:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     ?V0 + 0,A
        MOV     A,R1
        MOV     ?V0 + 1,A
// 1735     if (fifo_count < packet_size)
        MOV     ?V0 + 12,?V0 + 2
        CLR     C
        MOV     A,R2
        SUBB    A,?V0 + 12
        MOV     A,R1
        SUBB    A,#0x0
        JNC     ??mpu_read_fifo_8
// 1736         return 0;
??mpu_read_fifo_9:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??mpu_read_fifo_3
// 1737 //    log_i("FIFO count: %hd\n", fifo_count);
// 1738     if (fifo_count > (st.hw->max_fifo >> 1)) {
??mpu_read_fifo_8:
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_10:
        SUBB    A,?V0 + 0
        MOV     A,R1
        SUBB    A,?V0 + 1
        JNC     ??mpu_read_fifo_10
// 1739         /* FIFO is 50% full, better check overflow bit. */
// 1740         if (i2c_read(st.hw->addr, st.reg->int_status, 1, data))
        ; Setup parameters for call to function MPU_Read_Len
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_198:
        JNZ     ??mpu_read_fifo_1
// 1741             return -1;
// 1742         if (data[0] & BIT_FIFO_OVERFLOW) {
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.4
        JNC     ??mpu_read_fifo_10
// 1743             mpu_reset_fifo();
        ; Setup parameters for call to function mpu_reset_fifo
        LCALL   ??mpu_reset_fifo?relay
// 1744             return -2;
        MOV     R2,#-0x2
        LJMP    ??mpu_read_fifo_2 & 0xFFFF
// 1745         }
// 1746     }
// 1747     get_ms((unsigned long*)timestamp);
// 1748 
// 1749     if (i2c_read(st.hw->addr, st.reg->fifo_r_w, packet_size, data))
??mpu_read_fifo_10:
        ; Setup parameters for call to function MPU_Read_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,?V0 + 2
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0xb
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_205:
        JZ      $+5
        LJMP    ??mpu_read_fifo_1 & 0xFFFF
// 1750         return -1;
// 1751     more[0] = fifo_count / packet_size - 1;
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     ?V0 + 0,?V0 + 2
        MOV     R2,?V0 + 0
        MOV     R3,#0x0
        LCALL   ?US_DIV_MOD
        MOV     A,R0
        DEC     A
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        MOVX    @DPTR,A
// 1752     sensors[0] = 0;
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        CLR     A
        MOVX    @DPTR,A
// 1753 
// 1754     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_XYZ_ACCEL) {
        MOV     A,?V0 + 2
        JZ      ??mpu_read_fifo_9
        MOV     DPTR,#st + 11
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.3
        JNC     ??mpu_read_fifo_11
// 1755         accel[0] = (data[index+0] << 8) | data[index+1];
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_44:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        LCALL   ??Subroutine115_0 & 0xFFFF
// 1756         accel[1] = (data[index+2] << 8) | data[index+3];
??CrossCallReturnLabel_219:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_56:
        LCALL   ??Subroutine119_0 & 0xFFFF
// 1757         accel[2] = (data[index+4] << 8) | data[index+5];
??CrossCallReturnLabel_244:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_57:
        LCALL   ?Subroutine48 & 0xFFFF
// 1758         sensors[0] |= INV_XYZ_ACCEL;
??CrossCallReturnLabel_237:
        SETB    0xE0 /* A   */.3
        MOVX    @DPTR,A
// 1759         index += 6;
        MOV     R6,#0x6
// 1760     }
// 1761     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_X_GYRO) {
        MOV     A,R6
        XRL     A,?V0 + 2
        JNZ     $+5
        LJMP    ??mpu_read_fifo_9 & 0xFFFF
??mpu_read_fifo_11:
        MOV     DPTR,#st + 11
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.6
        JNC     ??mpu_read_fifo_12
// 1762         gyro[0] = (data[index+0] << 8) | data[index+1];
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,DPL
        ADD     A,R6
        MOV     DPL,A
        MOV     A,DPH
        ADDC    A,#0x0
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_115:
        LCALL   ??Subroutine120_0 & 0xFFFF
// 1763         sensors[0] |= INV_X_GYRO;
??CrossCallReturnLabel_239:
        SETB    0xE0 /* A   */.6
        MOVX    @DPTR,A
// 1764         index += 2;
        MOV     A,R6
        ADD     A,#0x2
        INC     R6
        INC     R6
        CLR     A
        ADDC    A,#0x0
        MOV     R7,A
// 1765     }
// 1766     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_Y_GYRO) {
??mpu_read_fifo_12:
        MOV     A,R6
        XRL     A,?V0 + 2
        JZ      ??mpu_read_fifo_13
        MOV     DPTR,#st + 11
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.5
        JNC     ??mpu_read_fifo_13
// 1767         gyro[1] = (data[index+0] << 8) | data[index+1];
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_48:
        LCALL   ??Subroutine120_0 & 0xFFFF
// 1768         sensors[0] |= INV_Y_GYRO;
??CrossCallReturnLabel_240:
        SETB    0xE0 /* A   */.5
        MOVX    @DPTR,A
// 1769         index += 2;
        MOV     A,R6
        ADD     A,#0x2
        INC     R6
        INC     R6
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
// 1770     }
// 1771     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_Z_GYRO) {
??mpu_read_fifo_13:
        MOV     A,R6
        XRL     A,?V0 + 2
        JNZ     $+5
        LJMP    ??mpu_read_fifo_9 & 0xFFFF
        MOV     DPTR,#st + 11
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.4
        JC      $+5
        LJMP    ??mpu_read_fifo_9 & 0xFFFF
// 1772         gyro[2] = (data[index+0] << 8) | data[index+1];
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_49:
        LCALL   ?Subroutine48 & 0xFFFF
// 1773         sensors[0] |= INV_Z_GYRO;
??CrossCallReturnLabel_238:
        SETB    0xE0 /* A   */.4
        MOVX    @DPTR,A
// 1774         index += 2;
        LJMP    ??mpu_read_fifo_9 & 0xFFFF
        CFI EndBlock cfiBlock518
// 1775     }
// 1776 
// 1777     return 0;
// 1778 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine92:
        CFI Block cfiCond519 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_31
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond520 Using cfiCommon0
        CFI (cfiCond520) NoFunction
        CFI (cfiCond520) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_32
        CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond520) CFA_SP SP+0
        CFI (cfiCond520) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond521 Using cfiCommon0
        CFI (cfiCond521) NoFunction
        CFI (cfiCond521) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_14
        CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond521) CFA_SP SP+0
        CFI (cfiCond521) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond522 Using cfiCommon0
        CFI (cfiCond522) NoFunction
        CFI (cfiCond522) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_15
        CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond522) CFA_SP SP+0
        CFI (cfiCond522) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker523 Using cfiCommon1
        CFI (cfiPicker523) NoFunction
        CFI (cfiPicker523) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond519
        CFI EndBlock cfiCond520
        CFI EndBlock cfiCond521
        CFI EndBlock cfiCond522
        CFI EndBlock cfiPicker523
        REQUIRE ??Subroutine119_0
        ; // Fall through to label ??Subroutine119_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine119_0:
        CFI Block cfiCond524 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_50
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond525 Using cfiCommon0
        CFI (cfiCond525) NoFunction
        CFI (cfiCond525) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_51
        CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond525) CFA_SP SP+0
        CFI (cfiCond525) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond526 Using cfiCommon0
        CFI (cfiCond526) NoFunction
        CFI (cfiCond526) Conditional ??CrossCallReturnLabel_241
        CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond526) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond526) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond526) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond526) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond526) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond526) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond526) CFA_SP SP+0
        CFI (cfiCond526) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond527 Using cfiCommon0
        CFI (cfiCond527) NoFunction
        CFI (cfiCond527) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_217
        CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond527) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond527) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond527) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond527) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond527) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond527) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond527) CFA_SP SP+0
        CFI (cfiCond527) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond528 Using cfiCommon0
        CFI (cfiCond528) NoFunction
        CFI (cfiCond528) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_218
        CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond528) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond528) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond528) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond528) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond528) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond528) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond528) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond528) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond528) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond528) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond528) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond528) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond528) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond528) CFA_SP SP+0
        CFI (cfiCond528) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond529 Using cfiCommon0
        CFI (cfiCond529) NoFunction
        CFI (cfiCond529) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_219
        CFI (cfiCond529) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond529) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond529) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond529) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond529) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond529) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond529) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond529) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond529) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond529) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond529) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond529) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond529) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond529) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond529) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond529) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond529) CFA_SP SP+0
        CFI (cfiCond529) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond530 Using cfiCommon0
        CFI (cfiCond530) NoFunction
        CFI (cfiCond530) Conditional ??CrossCallReturnLabel_242
        CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond530) CFA_SP SP+0
        CFI (cfiCond530) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond531 Using cfiCommon0
        CFI (cfiCond531) NoFunction
        CFI (cfiCond531) Conditional ??CrossCallReturnLabel_243
        CFI (cfiCond531) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond531) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond531) CFA_SP SP+-5
        CFI Block cfiCond532 Using cfiCommon0
        CFI (cfiCond532) NoFunction
        CFI (cfiCond532) Conditional ??CrossCallReturnLabel_244
        CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond532) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond532) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond532) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond532) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond532) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond532) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond532) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond532) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond532) CFA_SP SP+0
        CFI (cfiCond532) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond533 Using cfiCommon0
        CFI (cfiCond533) NoFunction
        CFI (cfiCond533) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_237
        CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond533) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond533) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond533) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond533) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond533) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond533) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond533) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond533) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond533) CFA_SP SP+0
        CFI (cfiCond533) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond534 Using cfiCommon0
        CFI (cfiCond534) NoFunction
        CFI (cfiCond534) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_238
        CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond534) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond534) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond534) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond534) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond534) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond534) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond534) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond534) CFA_SP SP+0
        CFI (cfiCond534) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond535 Using cfiCommon0
        CFI (cfiCond535) NoFunction
        CFI (cfiCond535) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_239
        CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond535) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond535) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond535) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond535) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond535) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond535) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond535) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond535) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond535) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond535) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond535) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond535) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond535) CFA_SP SP+0
        CFI (cfiCond535) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond536 Using cfiCommon0
        CFI (cfiCond536) NoFunction
        CFI (cfiCond536) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_240
        CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond536) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond536) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond536) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond536) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond536) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond536) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond536) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond536) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond536) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond536) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond536) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond536) CFA_SP SP+0
        CFI (cfiCond536) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond537 Using cfiCommon0
        CFI (cfiCond537) NoFunction
        CFI (cfiCond537) Conditional ??CrossCallReturnLabel_245
        CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond537) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond537) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond537) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond537) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond537) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond537) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond537) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond537) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond537) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond537) CFA_SP SP+0
        CFI (cfiCond537) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond538 Using cfiCommon0
        CFI (cfiCond538) NoFunction
        CFI (cfiCond538) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_31
        CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond538) CFA_SP SP+0
        CFI (cfiCond538) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond539 Using cfiCommon0
        CFI (cfiCond539) NoFunction
        CFI (cfiCond539) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_32
        CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond539) CFA_SP SP+0
        CFI (cfiCond539) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond540 Using cfiCommon0
        CFI (cfiCond540) NoFunction
        CFI (cfiCond540) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_14
        CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond540) CFA_SP SP+0
        CFI (cfiCond540) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond541 Using cfiCommon0
        CFI (cfiCond541) NoFunction
        CFI (cfiCond541) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_15
        CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond541) CFA_SP SP+0
        CFI (cfiCond541) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker542 Using cfiCommon1
        CFI (cfiPicker542) NoFunction
        CFI (cfiPicker542) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond524
        CFI EndBlock cfiCond525
        CFI EndBlock cfiCond526
        CFI EndBlock cfiCond527
        CFI EndBlock cfiCond528
        CFI EndBlock cfiCond529
        CFI EndBlock cfiCond530
        CFI EndBlock cfiCond531
        CFI EndBlock cfiCond532
        CFI EndBlock cfiCond533
        CFI EndBlock cfiCond534
        CFI EndBlock cfiCond535
        CFI EndBlock cfiCond536
        CFI EndBlock cfiCond537
        CFI EndBlock cfiCond538
        CFI EndBlock cfiCond539
        CFI EndBlock cfiCond540
        CFI EndBlock cfiCond541
        CFI EndBlock cfiPicker542

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine80:
        CFI Block cfiCond543 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_112
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond544 Using cfiCommon0
        CFI (cfiCond544) NoFunction
        CFI (cfiCond544) Conditional ??CrossCallReturnLabel_113
        CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond544) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond544) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond544) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond544) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond544) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond544) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond544) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond544) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond544) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond544) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond544) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond544) CFA_SP SP+0
        CFI (cfiCond544) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond545 Using cfiCommon0
        CFI (cfiCond545) NoFunction
        CFI (cfiCond545) Conditional ??CrossCallReturnLabel_114, ??CrossCallReturnLabel_2
        CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond545) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond545) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond545) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond545) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond545) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond545) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond545) CFA_SP SP+0
        CFI (cfiCond545) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond546 Using cfiCommon0
        CFI (cfiCond546) NoFunction
        CFI (cfiCond546) Conditional ??CrossCallReturnLabel_114, ??CrossCallReturnLabel_3
        CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond546) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond546) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond546) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond546) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond546) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond546) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond546) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond546) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond546) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond546) CFA_SP SP+0
        CFI (cfiCond546) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond547 Using cfiCommon0
        CFI (cfiCond547) NoFunction
        CFI (cfiCond547) Conditional ??CrossCallReturnLabel_114, ??CrossCallReturnLabel_4
        CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond547) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond547) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond547) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond547) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond547) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond547) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond547) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond547) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond547) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond547) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond547) CFA_SP SP+0
        CFI (cfiCond547) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker548 Using cfiCommon1
        CFI (cfiPicker548) NoFunction
        CFI (cfiPicker548) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        RET
        CFI EndBlock cfiCond543
        CFI EndBlock cfiCond544
        CFI EndBlock cfiCond545
        CFI EndBlock cfiCond546
        CFI EndBlock cfiCond547
        CFI EndBlock cfiPicker548

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
        CFI Block cfiCond549 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_237
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond550 Using cfiCommon0
        CFI (cfiCond550) NoFunction
        CFI (cfiCond550) Conditional ??CrossCallReturnLabel_238
        CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond550) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond550) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond550) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond550) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond550) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond550) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond550) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond550) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond550) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond550) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond550) CFA_SP SP+0
        CFI (cfiCond550) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker551 Using cfiCommon1
        CFI (cfiPicker551) NoFunction
        CFI (cfiPicker551) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond549
        CFI EndBlock cfiCond550
        CFI EndBlock cfiPicker551
        REQUIRE ??Subroutine120_0
        ; // Fall through to label ??Subroutine120_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine120_0:
        CFI Block cfiCond552 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_239
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond553 Using cfiCommon0
        CFI (cfiCond553) NoFunction
        CFI (cfiCond553) Conditional ??CrossCallReturnLabel_240
        CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond553) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond553) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond553) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond553) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond553) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond553) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond553) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond553) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond553) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond553) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond553) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond553) CFA_SP SP+0
        CFI (cfiCond553) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond554 Using cfiCommon0
        CFI (cfiCond554) NoFunction
        CFI (cfiCond554) Conditional ??CrossCallReturnLabel_237
        CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond554) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond554) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond554) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond554) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond554) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond554) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond554) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond554) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond554) CFA_SP SP+0
        CFI (cfiCond554) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond555 Using cfiCommon0
        CFI (cfiCond555) NoFunction
        CFI (cfiCond555) Conditional ??CrossCallReturnLabel_238
        CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond555) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond555) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond555) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond555) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond555) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond555) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond555) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond555) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond555) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond555) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond555) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond555) CFA_SP SP+0
        CFI (cfiCond555) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker556 Using cfiCommon1
        CFI (cfiPicker556) NoFunction
        CFI (cfiPicker556) Picker
        LCALL   ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_250:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond552
        CFI EndBlock cfiCond553
        CFI EndBlock cfiCond554
        CFI EndBlock cfiCond555
        CFI EndBlock cfiPicker556

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
        CFI Block cfiCond557 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_56
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond558 Using cfiCommon0
        CFI (cfiCond558) NoFunction
        CFI (cfiCond558) Conditional ??CrossCallReturnLabel_57
        CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond558) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond558) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond558) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond558) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond558) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond558) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond558) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond558) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond558) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond558) CFA_SP SP+0
        CFI (cfiCond558) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker559 Using cfiCommon1
        CFI (cfiPicker559) NoFunction
        CFI (cfiPicker559) Picker
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond557
        CFI EndBlock cfiCond558
        CFI EndBlock cfiPicker559

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
        CFI Block cfiCond560 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_48
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond561 Using cfiCommon0
        CFI (cfiCond561) NoFunction
        CFI (cfiCond561) Conditional ??CrossCallReturnLabel_49
        CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond561) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond561) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond561) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond561) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond561) CFA_SP SP+0
        CFI (cfiCond561) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker562 Using cfiCommon1
        CFI (cfiPicker562) NoFunction
        CFI (cfiPicker562) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,DPL
        ADD     A,R6
        MOV     DPL,A
        MOV     A,DPH
        ADDC    A,R7
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_116:
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond560
        CFI EndBlock cfiCond561
        CFI EndBlock cfiPicker562

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine81:
        CFI Block cfiCond563 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_115
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond564 Using cfiCommon0
        CFI (cfiCond564) NoFunction
        CFI (cfiCond564) Conditional ??CrossCallReturnLabel_116, ??CrossCallReturnLabel_48
        CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond564) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond564) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond564) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond564) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond564) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond564) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond564) CFA_SP SP+0
        CFI (cfiCond564) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond565 Using cfiCommon0
        CFI (cfiCond565) NoFunction
        CFI (cfiCond565) Conditional ??CrossCallReturnLabel_116, ??CrossCallReturnLabel_49
        CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond565) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond565) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond565) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond565) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond565) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond565) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond565) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond565) CFA_SP SP+0
        CFI (cfiCond565) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker566 Using cfiCommon1
        CFI (cfiPicker566) NoFunction
        CFI (cfiPicker566) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        RET
        CFI EndBlock cfiCond563
        CFI EndBlock cfiCond564
        CFI EndBlock cfiCond565
        CFI EndBlock cfiPicker566
// 1779 
// 1780 /**
// 1781  *  @brief      Get one unparsed packet from the FIFO.
// 1782  *  This function should be used if the packet is to be parsed elsewhere.
// 1783  *  @param[in]  length  Length of one FIFO packet.
// 1784  *  @param[in]  data    FIFO packet.
// 1785  *  @param[in]  more    Number of remaining packets.
// 1786  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1787 int mpu_read_fifo_stream(unsigned short length, unsigned char *data,
mpu_read_fifo_stream:
        CFI Block cfiBlock567 Using cfiCommon0
        CFI Function mpu_read_fifo_stream
        CODE
// 1788     unsigned char *more)
// 1789 {
        FUNCALL mpu_read_fifo_stream, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_read_fifo_stream, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_read_fifo_stream, mpu_reset_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_read_fifo_stream, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 4,R4
        MOV     ?V0 + 5,R5
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
// 1790     unsigned char tmp[2];
// 1791     unsigned short fifo_count;
// 1792     if (!st.chip_cfg.dmp_on)
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JNZ     ??mpu_read_fifo_stream_0
// 1793         return -1;
??mpu_read_fifo_stream_1:
        MOV     R2,#-0x1
??mpu_read_fifo_stream_2:
        MOV     R3,#-0x1
        SJMP    ??CrossCallReturnLabel_298
// 1794     if (!st.chip_cfg.sensors)
??mpu_read_fifo_stream_0:
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JZ      ??mpu_read_fifo_stream_1
// 1795         return -1;
// 1796 
// 1797     if (i2c_read(st.hw->addr, st.reg->fifo_count_h, 2, tmp))
        ; Setup parameters for call to function MPU_Read_Len
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_8:
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_211:
        JNZ     ??mpu_read_fifo_stream_1
// 1798         return -1;
// 1799     fifo_count = (tmp[0] << 8) | tmp[1];
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_45:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
// 1800     if (fifo_count < length) {
        CLR     C
        MOV     A,R6
        SUBB    A,?V0 + 0
        MOV     A,R7
        SUBB    A,?V0 + 1
        JNC     ??mpu_read_fifo_stream_3
// 1801         more[0] = 0;
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        CLR     A
        MOVX    @DPTR,A
        SJMP    ??mpu_read_fifo_stream_1
// 1802         return -1;
// 1803     }
// 1804     if (fifo_count > (st.hw->max_fifo >> 1)) {
??mpu_read_fifo_stream_3:
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_11:
        SUBB    A,R6
        MOV     A,R1
        SUBB    A,R7
        JNC     ??mpu_read_fifo_stream_4
// 1805         /* FIFO is 50% full, better check overflow bit. */
// 1806         if (i2c_read(st.hw->addr, st.reg->int_status, 1, tmp))
        ; Setup parameters for call to function MPU_Read_Len
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_199:
        JNZ     ??mpu_read_fifo_stream_1
// 1807             return -1;
// 1808         if (tmp[0] & BIT_FIFO_OVERFLOW) {
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.4
        JNC     ??mpu_read_fifo_stream_4
// 1809             mpu_reset_fifo();
        ; Setup parameters for call to function mpu_reset_fifo
        LCALL   ??mpu_reset_fifo?relay
// 1810             return -2;
        MOV     R2,#-0x2
        SJMP    ??mpu_read_fifo_stream_2
// 1811         }
// 1812     }
// 1813 
// 1814     if (i2c_read(st.hw->addr, st.reg->fifo_r_w, length, data))
??mpu_read_fifo_stream_4:
        ; Setup parameters for call to function MPU_Read_Len
        MOV     R4,?V0 + 4
        MOV     R5,?V0 + 5
        MOV     R3,?V0 + 0
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0xb
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_206:
        JNZ     ??mpu_read_fifo_stream_1
// 1815         return -1;
// 1816     more[0] = fifo_count / length - 1;
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        MOV     R1,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ?US_DIV_MOD
        MOV     A,R0
        DEC     A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine137_0 & 0xFFFF
// 1817     return 0;
??CrossCallReturnLabel_298:
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock567
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
// 1818 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
        CFI Block cfiBlock568 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock568

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
        CFI Block cfiCond569 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_10
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond570 Using cfiCommon0
        CFI (cfiCond570) NoFunction
        CFI (cfiCond570) Conditional ??CrossCallReturnLabel_11
        CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond570) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond570) CFA_SP SP+0
        CFI (cfiCond570) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker571 Using cfiCommon1
        CFI (cfiPicker571) NoFunction
        CFI (cfiPicker571) Picker
        MOV     DPTR,#st + 2
        LCALL   ??Subroutine132_0 & 0xFFFF
??CrossCallReturnLabel_284:
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_118:
        CLR     C
        RET
        CFI EndBlock cfiCond569
        CFI EndBlock cfiCond570
        CFI EndBlock cfiPicker571

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine84:
        CFI Block cfiCond572 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_117
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond573 Using cfiCommon0
        CFI (cfiCond573) NoFunction
        CFI (cfiCond573) Conditional ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_10
        CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond573) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond573) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond573) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond573) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond573) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond573) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond573) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond573) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond573) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond573) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond573) CFA_SP SP+0
        CFI (cfiCond573) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond574 Using cfiCommon0
        CFI (cfiCond574) NoFunction
        CFI (cfiCond574) Conditional ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_11
        CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond574) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond574) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond574) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond574) CFA_SP SP+0
        CFI (cfiCond574) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker575 Using cfiCommon1
        CFI (cfiPicker575) NoFunction
        CFI (cfiPicker575) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        CLR     C
        RRC     A
        MOV     R1,A
        MOV     A,R0
        RRC     A
        RET
        CFI EndBlock cfiCond572
        CFI EndBlock cfiCond573
        CFI EndBlock cfiCond574
        CFI EndBlock cfiPicker575

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
        CFI Block cfiCond576 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_7
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond577 Using cfiCommon0
        CFI (cfiCond577) NoFunction
        CFI (cfiCond577) Conditional ??CrossCallReturnLabel_8
        CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond577) CFA_SP SP+0
        CFI (cfiCond577) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond578 Using cfiCommon0
        CFI (cfiCond578) NoFunction
        CFI (cfiCond578) Conditional ??CrossCallReturnLabel_9
        CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond578) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond578) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond578) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond578) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond578) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond578) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond578) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond578) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond578) CFA_SP SP+0
        CFI (cfiCond578) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker579 Using cfiCommon1
        CFI (cfiPicker579) NoFunction
        CFI (cfiPicker579) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x2
        MOV     DPTR,#st
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_111:
        RET
        CFI EndBlock cfiCond576
        CFI EndBlock cfiCond577
        CFI EndBlock cfiCond578
        CFI EndBlock cfiPicker579

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
        CFI Block cfiCond580 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_7
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond581 Using cfiCommon0
        CFI (cfiCond581) NoFunction
        CFI (cfiCond581) Conditional ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_8
        CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond581) CFA_SP SP+0
        CFI (cfiCond581) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond582 Using cfiCommon0
        CFI (cfiCond582) NoFunction
        CFI (cfiCond582) Conditional ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_9
        CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond582) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond582) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond582) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond582) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond582) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond582) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond582) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond582) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond582) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond582) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond582) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond582) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond582) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond582) CFA_SP SP+0
        CFI (cfiCond582) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond583 Using cfiCommon0
        CFI (cfiCond583) NoFunction
        CFI (cfiCond583) Conditional ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_5
        CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond583) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond583) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond583) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond583) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond583) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond583) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond583) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond583) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond583) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond583) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond583) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond583) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond583) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond583) CFA_SP SP+0
        CFI (cfiCond583) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond584 Using cfiCommon0
        CFI (cfiCond584) NoFunction
        CFI (cfiCond584) Conditional ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_6
        CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond584) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond584) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond584) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond584) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond584) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond584) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond584) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond584) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond584) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond584) CFA_SP SP+0
        CFI (cfiCond584) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker585 Using cfiCommon1
        CFI (cfiPicker585) NoFunction
        CFI (cfiPicker585) Picker
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_292:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond580
        CFI EndBlock cfiCond581
        CFI EndBlock cfiCond582
        CFI EndBlock cfiCond583
        CFI EndBlock cfiCond584
        CFI EndBlock cfiPicker585
// 1819 
// 1820 /**
// 1821  *  @brief      Set device to bypass mode.
// 1822  *  @param[in]  bypass_on   1 to enable bypass mode.
// 1823  *  @return     0 if successful.
// 1824  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1825 int mpu_set_bypass(unsigned char bypass_on)
mpu_set_bypass:
        CFI Block cfiBlock586 Using cfiCommon0
        CFI Function mpu_set_bypass
        CODE
// 1826 {
        FUNCALL mpu_set_bypass, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_bypass, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_bypass, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_bypass, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_bypass, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_bypass, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_bypass, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_bypass, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,R1
        MOV     R6,A
// 1827     unsigned char tmp;
// 1828 
// 1829     if (st.chip_cfg.bypass_mode == bypass_on)
        MOV     DPTR,#st + 13
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     $+5
        LJMP    ??mpu_set_bypass_0 & 0xFFFF
// 1830         return 0;
// 1831 
// 1832     if (bypass_on) {
        MOV     A,R6
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        JZ      ??mpu_set_bypass_1
// 1833         if (i2c_read(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
        ; Setup parameters for call to function MPU_Read_Len
        LCALL   ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_220:
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_212:
        JZ      ??mpu_set_bypass_2
// 1834             return -1;
??mpu_set_bypass_3:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_set_bypass_4 & 0xFFFF
// 1835         tmp &= ~BIT_AUX_IF_EN;
??mpu_set_bypass_2:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        CLR     0xE0 /* A   */.5
        MOVX    @DPTR,A
// 1836         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_225:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_173:
        JNZ     ??mpu_set_bypass_3
// 1837             return -1;
// 1838         delay_ms(3);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x3
        LCALL   ?Subroutine60 & 0xFFFF
// 1839         tmp = BIT_BYPASS_EN;
??CrossCallReturnLabel_82:
        MOV     A,#0x2
        MOVX    @DPTR,A
// 1840         if (st.chip_cfg.active_low_int)
        MOV     DPTR,#st + 27
        MOVX    A,@DPTR
        JZ      ??mpu_set_bypass_5
// 1841             tmp |= BIT_ACTL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7e
        MOVX    @DPTR,A
// 1842         if (st.chip_cfg.latched_int)
??mpu_set_bypass_5:
        MOV     DPTR,#st + 28
        MOVX    A,@DPTR
        JZ      ??mpu_set_bypass_6
// 1843             tmp |= BIT_LATCH_EN | BIT_ANY_RD_CLR;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ORL     A,#0x30
        MOVX    @DPTR,A
// 1844         if (i2c_write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
??mpu_set_bypass_6:
        ; Setup parameters for call to function MPU_Write_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x14
        LCALL   ??Subroutine108_0 & 0xFFFF
// 1845             return -1;
// 1846     } else {
??CrossCallReturnLabel_151:
        JNZ     ??mpu_set_bypass_3
        SJMP    ??mpu_set_bypass_7
// 1847         /* Enable I2C master mode if compass is being used. */
// 1848         if (i2c_read(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
??mpu_set_bypass_1:
        ; Setup parameters for call to function MPU_Read_Len
        LCALL   ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_221:
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_213:
        JNZ     ??mpu_set_bypass_3
// 1849             return -1;
// 1850         if (st.chip_cfg.sensors & INV_XYZ_COMPASS)
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JNC     ??mpu_set_bypass_8
// 1851             tmp |= BIT_AUX_IF_EN;
        SETB    0xE0 /* A   */.5
        SJMP    ??mpu_set_bypass_9
// 1852         else
// 1853             tmp &= ~BIT_AUX_IF_EN;
??mpu_set_bypass_8:
        CLR     0xE0 /* A   */.5
??mpu_set_bypass_9:
        MOVX    @DPTR,A
// 1854         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_226:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_174:
        JNZ     ??mpu_set_bypass_3
// 1855             return -1;
// 1856         delay_ms(3);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x3
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
// 1857         if (st.chip_cfg.active_low_int)
        MOV     DPTR,#st + 27
        LCALL   ??Subroutine121_0 & 0xFFFF
??CrossCallReturnLabel_252:
        JZ      ??mpu_set_bypass_10
// 1858             tmp = BIT_ACTL;
        MOV     A,#-0x80
        SJMP    ??mpu_set_bypass_11
// 1859         else
// 1860             tmp = 0;
??mpu_set_bypass_10:
        CLR     A
??mpu_set_bypass_11:
        MOVX    @DPTR,A
// 1861         if (st.chip_cfg.latched_int)
        MOV     DPTR,#st + 28
        MOVX    A,@DPTR
        JZ      ??mpu_set_bypass_12
// 1862             tmp |= BIT_LATCH_EN | BIT_ANY_RD_CLR;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ORL     A,#0x30
        MOVX    @DPTR,A
// 1863         if (i2c_write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
??mpu_set_bypass_12:
        ; Setup parameters for call to function MPU_Write_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x14
        LCALL   ??Subroutine108_0 & 0xFFFF
// 1864             return -1;
// 1865     }
??CrossCallReturnLabel_152:
        JZ      $+5
        LJMP    ??mpu_set_bypass_3 & 0xFFFF
// 1866     st.chip_cfg.bypass_mode = bypass_on;
??mpu_set_bypass_7:
        MOV     A,R6
        MOV     DPTR,#st + 13
        MOVX    @DPTR,A
// 1867     return 0;
??mpu_set_bypass_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_set_bypass_4:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock586
// 1868 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
        CFI Block cfiCond587 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_254
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond588 Using cfiCommon0
        CFI (cfiCond588) NoFunction
        CFI (cfiCond588) Conditional ??CrossCallReturnLabel_255
        CFI (cfiCond588) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond588) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond588) CFA_SP SP+-5
        CFI (cfiCond588) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiPicker589 Using cfiCommon1
        CFI (cfiPicker589) NoFunction
        CFI (cfiPicker589) Picker
        MOV     DPTR,#st + 12
        CFI EndBlock cfiCond587
        CFI EndBlock cfiCond588
        CFI EndBlock cfiPicker589
        REQUIRE ??Subroutine121_0
        ; // Fall through to label ??Subroutine121_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine121_0:
        CFI Block cfiCond590 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_251
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond591 Using cfiCommon0
        CFI (cfiCond591) NoFunction
        CFI (cfiCond591) Conditional ??CrossCallReturnLabel_252
        CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond591) CFA_SP SP+0
        CFI (cfiCond591) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond592 Using cfiCommon0
        CFI (cfiCond592) NoFunction
        CFI (cfiCond592) Conditional ??CrossCallReturnLabel_253
        CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond592) CFA_SP SP+0
        CFI (cfiCond592) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond593 Using cfiCommon0
        CFI (cfiCond593) NoFunction
        CFI (cfiCond593) Conditional ??CrossCallReturnLabel_254
        CFI (cfiCond593) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond593) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond593) CFA_SP SP+-5
        CFI (cfiCond593) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond594 Using cfiCommon0
        CFI (cfiCond594) NoFunction
        CFI (cfiCond594) Conditional ??CrossCallReturnLabel_255
        CFI (cfiCond594) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond594) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond594) CFA_SP SP+-5
        CFI (cfiCond594) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiPicker595 Using cfiCommon1
        CFI (cfiPicker595) NoFunction
        CFI (cfiPicker595) Picker
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond590
        CFI EndBlock cfiCond591
        CFI EndBlock cfiCond592
        CFI EndBlock cfiCond593
        CFI EndBlock cfiCond594
        CFI EndBlock cfiPicker595
// 1869 
// 1870 /**
// 1871  *  @brief      Set interrupt level.
// 1872  *  @param[in]  active_low  1 for active low, 0 for active high.
// 1873  *  @return     0 if successful.
// 1874  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1875 int mpu_set_int_level(unsigned char active_low)
mpu_set_int_level:
        CFI Block cfiBlock596 Using cfiCommon0
        CFI Function mpu_set_int_level
        CODE
// 1876 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1877     st.chip_cfg.active_low_int = active_low;
        MOV     A,R1
        MOV     DPTR,#st + 27
        SJMP    ??Subroutine122_0
        CFI EndBlock cfiBlock596
// 1878     return 0;
// 1879 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
        CFI Block cfiBlock597 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        CFI EndBlock cfiBlock597
        REQUIRE ??Subroutine122_0
        ; // Fall through to label ??Subroutine122_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine122_0:
        CFI Block cfiBlock598 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        MOVX    @DPTR,A
        MOV     R2,#0x0
        CFI EndBlock cfiBlock598
        REQUIRE ??Subroutine123_0
        ; // Fall through to label ??Subroutine123_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine123_0:
        CFI Block cfiBlock599 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        MOV     R3,#0x0
        CFI EndBlock cfiBlock599
        REQUIRE ??Subroutine124_0
        ; // Fall through to label ??Subroutine124_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine124_0:
        CFI Block cfiBlock600 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock600
// 1880 
// 1881 /**
// 1882  *  @brief      Enable latched interrupts.
// 1883  *  Any MPU register will clear the interrupt.
// 1884  *  @param[in]  enable  1 to enable, 0 to disable.
// 1885  *  @return     0 if successful.
// 1886  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1887 int mpu_set_int_latched(unsigned char enable)
mpu_set_int_latched:
        CFI Block cfiBlock601 Using cfiCommon0
        CFI Function mpu_set_int_latched
        CODE
// 1888 {
        FUNCALL mpu_set_int_latched, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,R1
        MOV     R6,A
// 1889     unsigned char tmp;
// 1890     if (st.chip_cfg.latched_int == enable)
        MOV     DPTR,#st + 28
        MOVX    A,@DPTR
        XRL     A,R6
        JZ      ??mpu_set_int_latched_0
// 1891         return 0;
// 1892 
// 1893     if (enable)
        MOV     A,R6
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        JZ      ??mpu_set_int_latched_1
// 1894         tmp = BIT_LATCH_EN | BIT_ANY_RD_CLR;
        MOV     A,#0x30
        SJMP    ??mpu_set_int_latched_2
// 1895     else
// 1896         tmp = 0;
??mpu_set_int_latched_1:
        CLR     A
??mpu_set_int_latched_2:
        MOVX    @DPTR,A
// 1897     if (st.chip_cfg.bypass_mode)
        MOV     DPTR,#st + 13
        MOVX    A,@DPTR
        JZ      ??mpu_set_int_latched_3
// 1898         tmp |= BIT_BYPASS_EN;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.1
        MOVX    @DPTR,A
// 1899     if (st.chip_cfg.active_low_int)
??mpu_set_int_latched_3:
        MOV     DPTR,#st + 27
        MOVX    A,@DPTR
        JZ      ??mpu_set_int_latched_4
// 1900         tmp |= BIT_ACTL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.7
        MOVX    @DPTR,A
// 1901     if (i2c_write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
??mpu_set_int_latched_4:
        ; Setup parameters for call to function MPU_Write_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x14
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_153:
        JZ      ??mpu_set_int_latched_5
// 1902         return -1;
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_set_int_latched_6
// 1903     st.chip_cfg.latched_int = enable;
??mpu_set_int_latched_5:
        MOV     A,R6
        MOV     DPTR,#st + 28
        MOVX    @DPTR,A
// 1904     return 0;
??mpu_set_int_latched_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_set_int_latched_6:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock601
// 1905 }
// 1906 
// 1907 #ifdef MPU6050

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1908 static int get_accel_prod_shift(float *st_shift)
get_accel_prod_shift:
        CFI Block cfiBlock602 Using cfiCommon0
        CFI Function get_accel_prod_shift
        CODE
// 1909 {
        FUNCALL get_accel_prod_shift, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 7
        MOV     A,#-0x7
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
// 1910     unsigned char tmp[4], shift_code[3], ii;
// 1911 
// 1912     if (i2c_read(st.hw->addr, 0x0D, 4, tmp))
        ; Setup parameters for call to function MPU_Read_Len
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x4
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_256:
        JZ      ??get_accel_prod_shift_0
// 1913         return 0x07;
        MOV     R2,#0x7
        LJMP    ??get_accel_prod_shift_1 & 0xFFFF
// 1914 
// 1915     shift_code[0] = ((tmp[0] & 0xE0) >> 3) | ((tmp[3] & 0x30) >> 4);
??get_accel_prod_shift_0:
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        SWAP    A
        ANL     A,#0xf
        ANL     A,#0x3
        MOV     R0,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_20:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1916     shift_code[1] = ((tmp[1] & 0xE0) >> 3) | ((tmp[3] & 0x0C) >> 2);
        MOV     A,R1
        RRC     A
        RRC     A
        ANL     A,#0x3f
        ANL     A,#0x3
        MOV     R0,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_21:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1917     shift_code[2] = ((tmp[2] & 0xE0) >> 3) | (tmp[3] & 0x03);
        MOV     A,#0x3
        ANL     A,R1
        MOV     R0,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_22:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1918     for (ii = 0; ii < 3; ii++) {
        MOV     R6,#0x0
// 1919         if (!shift_code[ii]) {
??get_accel_prod_shift_2:
        MOV     ?V0 + 0,R6
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_100:
        JNZ     ??get_accel_prod_shift_3
// 1920             st_shift[ii] = 0.f;
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     ?V0 + 1,#0x0
        MOV     A,#0x2
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_102:
        LCALL   ?XSTORE_R2345
// 1921             continue;
        SJMP    ??get_accel_prod_shift_4
// 1922         }
// 1923         /* Equivalent to..
// 1924          * st_shift[ii] = 0.34f * powf(0.92f/0.34f, (shift_code[ii]-1) / 30.f)
// 1925          */
// 1926         st_shift[ii] = 0.34f;
??get_accel_prod_shift_3:
        MOV     DPTR,#__Constant_3eae147b
        LCALL   ?XLOAD_R2345
        MOV     ?V0 + 1,#0x0
        MOV     A,#0x2
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_103:
        LCALL   ?XSTORE_R2345
        SJMP    ??get_accel_prod_shift_5
// 1927         while (--shift_code[ii])
// 1928             st_shift[ii] *= 1.034f;
??get_accel_prod_shift_6:
        MOV     ?V0 + 1,#0x0
        MOV     A,#0x2
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,?V0 + 8
        ADD     A,?V0 + 0
        MOV     R2,A
        MOV     A,?V0 + 9
        ADDC    A,?V0 + 1
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_3f845a1d
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
??get_accel_prod_shift_5:
        MOV     DPL,R6
        MOV     ?V0 + 0,DPL
        LCALL   ?Subroutine69 & 0xFFFF
// 1929     }
??CrossCallReturnLabel_101:
        DEC     A
        MOVX    @DPTR,A
        JNZ     ??get_accel_prod_shift_6
??get_accel_prod_shift_4:
        INC     R6
        MOV     A,R6
        CLR     C
        SUBB    A,#0x3
        JC      ??get_accel_prod_shift_2
// 1930     return 0;
        MOV     R2,#0x0
??get_accel_prod_shift_1:
        MOV     R3,#0x0
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock602
// 1931 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
        CFI Block cfiCond603 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_102
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond604 Using cfiCommon0
        CFI (cfiCond604) NoFunction
        CFI (cfiCond604) Conditional ??CrossCallReturnLabel_103
        CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond604) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond604) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond604) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond604) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond604) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond604) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond604) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond604) CFA_SP SP+0
        CFI (cfiCond604) CFA_XSP16 add(XSP16, 25)
        CFI Block cfiPicker605 Using cfiCommon1
        CFI (cfiPicker605) NoFunction
        CFI (cfiPicker605) Picker
        MOV     A,?V0 + 8
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,?V0 + 9
        ADDC    A,?V0 + 1
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond603
        CFI EndBlock cfiCond604
        CFI EndBlock cfiPicker605

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
        CFI Block cfiCond606 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_100
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond607 Using cfiCommon0
        CFI (cfiCond607) NoFunction
        CFI (cfiCond607) Conditional ??CrossCallReturnLabel_101
        CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond607) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond607) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond607) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond607) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond607) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond607) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond607) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond607) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond607) CFA_SP SP+0
        CFI (cfiCond607) CFA_XSP16 add(XSP16, 25)
        CFI Block cfiPicker608 Using cfiCommon1
        CFI (cfiPicker608) NoFunction
        CFI (cfiPicker608) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,DPL
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,DPH
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond606
        CFI EndBlock cfiCond607
        CFI EndBlock cfiPicker608

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
        CFI Block cfiCond609 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_20
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond610 Using cfiCommon0
        CFI (cfiCond610) NoFunction
        CFI (cfiCond610) Conditional ??CrossCallReturnLabel_21
        CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond610) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond610) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond610) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond610) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond610) CFA_SP SP+0
        CFI (cfiCond610) CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond611 Using cfiCommon0
        CFI (cfiCond611) NoFunction
        CFI (cfiCond611) Conditional ??CrossCallReturnLabel_22
        CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond611) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond611) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond611) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond611) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond611) CFA_SP SP+0
        CFI (cfiCond611) CFA_XSP16 add(XSP16, 25)
        CFI Block cfiPicker612 Using cfiCommon1
        CFI (cfiPicker612) NoFunction
        CFI (cfiPicker612) Picker
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_234:
        ANL     A,#0x1c
        ORL     A,R0
        RET
        CFI EndBlock cfiCond609
        CFI EndBlock cfiCond610
        CFI EndBlock cfiCond611
        CFI EndBlock cfiPicker612

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
        CFI Block cfiCond613 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_256
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond614 Using cfiCommon0
        CFI (cfiCond614) NoFunction
        CFI (cfiCond614) Conditional ??CrossCallReturnLabel_257
        CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond614) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond614) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond614) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond614) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond614) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond614) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond614) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond614) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond614) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond614) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond614) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond614) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond614) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond614) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond614) CFA_SP SP+0
        CFI (cfiCond614) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiPicker615 Using cfiCommon1
        CFI (cfiPicker615) NoFunction
        CFI (cfiPicker615) Picker
        MOV     R2,#0xd
        CFI EndBlock cfiCond613
        CFI EndBlock cfiCond614
        CFI EndBlock cfiPicker615
        REQUIRE ??Subroutine125_0
        ; // Fall through to label ??Subroutine125_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine125_0:
        CFI Block cfiCond616 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_258
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond617 Using cfiCommon0
        CFI (cfiCond617) NoFunction
        CFI (cfiCond617) Conditional ??CrossCallReturnLabel_259
        CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond617) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond617) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond617) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond617) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond617) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond617) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond617) CFA_SP SP+0
        CFI (cfiCond617) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond618 Using cfiCommon0
        CFI (cfiCond618) NoFunction
        CFI (cfiCond618) Conditional ??CrossCallReturnLabel_260
        CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond618) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond618) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond618) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond618) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond618) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond618) CFA_SP SP+0
        CFI (cfiCond618) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond619 Using cfiCommon0
        CFI (cfiCond619) NoFunction
        CFI (cfiCond619) Conditional ??CrossCallReturnLabel_256
        CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond619) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond619) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond619) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond619) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond619) CFA_SP SP+0
        CFI (cfiCond619) CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond620 Using cfiCommon0
        CFI (cfiCond620) NoFunction
        CFI (cfiCond620) Conditional ??CrossCallReturnLabel_257
        CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond620) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond620) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond620) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond620) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond620) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond620) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond620) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond620) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond620) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond620) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond620) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond620) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond620) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond620) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond620) CFA_SP SP+0
        CFI (cfiCond620) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiPicker621 Using cfiCommon1
        CFI (cfiPicker621) NoFunction
        CFI (cfiPicker621) Picker
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_262:
        LCALL   ??MPU_Read_Len?relay
        MOV     A,R1
        RET
        CFI EndBlock cfiCond616
        CFI EndBlock cfiCond617
        CFI EndBlock cfiCond618
        CFI EndBlock cfiCond619
        CFI EndBlock cfiCond620
        CFI EndBlock cfiPicker621
// 1932 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1933 static int accel_self_test(long *bias_regular, long *bias_st)
accel_self_test:
        CFI Block cfiBlock622 Using cfiCommon0
        CFI Function accel_self_test
        CODE
// 1934 {
        FUNCALL accel_self_test, get_accel_prod_shift
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL accel_self_test, labs
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL accel_self_test, fabsf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 14
        MOV     A,#-0xe
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine52 & 0xFFFF
// 1935     int jj, result = 0;
// 1936     float st_shift[3], st_shift_cust, st_shift_var;
// 1937 
// 1938     get_accel_prod_shift(st_shift);
??CrossCallReturnLabel_70:
        ; Setup parameters for call to function get_accel_prod_shift
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??get_accel_prod_shift?relay
// 1939     for(jj = 0; jj < 3; jj++) {
        MOV     R6,#0x0
        MOV     R7,#0x0
// 1940         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
??accel_self_test_0:
        MOV     ?V0 + 2,R6
        MOV     ?V0 + 3,R7
        MOV     A,#0x2
        MOV     R0,#?V0 + 2
        LCALL   ?S_SHL
        MOV     ?V0 + 0,?V0 + 2
        MOV     ?V0 + 1,?V0 + 3
        ; Setup parameters for call to function labs
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,?V0 + 0
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,?V0 + 1
        MOV     DPL,R0
        MOV     DPH,A
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     A,?V0 + 14
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,?V0 + 15
        ADDC    A,?V0 + 1
        MOV     DPH,A
        MOV     R0,#?V0 + 4
        LCALL   ?L_SUB_X
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        MOV     R4,?V0 + 6
        MOV     R5,?V0 + 7
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_98:
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_37800000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
// 1941         if (st_shift[jj]) {
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_104:
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_0
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_EQ
        JZ      ??accel_self_test_1
// 1942             st_shift_var = st_shift_cust / st_shift[jj] - 1.f;
// 1943             if (fabs(st_shift_var) > test.max_accel_var)
        ; Setup parameters for call to function fabsf
        MOV     ?V0 + 0,R6
        MOV     ?V0 + 1,R7
        MOV     A,#0x2
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_105:
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_DIV
        MOV     DPTR,#__Constant_bf800000
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_ADD
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_96:
        JC      ??accel_self_test_2
// 1944                 result |= 1 << jj;
??accel_self_test_3:
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        MOV     A,R6
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        LCALL   ?Subroutine72 & 0xFFFF
// 1945         } else if ((st_shift_cust < test.min_g) ||
??CrossCallReturnLabel_106:
        SJMP    ??accel_self_test_2
// 1946             (st_shift_cust > test.max_g))
??accel_self_test_1:
        MOV     DPTR,#__Constant_3e99999a
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_LT
        JC      ??accel_self_test_3
        MOV     DPTR,#__Constant_3f733334
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_GE
        JC      ??accel_self_test_3
// 1947             result |= 1 << jj;
// 1948     }
??accel_self_test_2:
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_74:
        JNC     $+5
        LJMP    ??accel_self_test_0 & 0xFFFF
// 1949 
// 1950     return result;
        MOV     R2,?V0 + 12
        MOV     R3,?V0 + 13
        MOV     A,#0xe
        CFI EndBlock cfiBlock622
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
// 1951 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
        CFI Block cfiBlock623 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 24)
        CFI Valid
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock623

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
        CFI Block cfiCond624 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_104
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond625 Using cfiCommon0
        CFI (cfiCond625) NoFunction
        CFI (cfiCond625) Conditional ??CrossCallReturnLabel_105
        CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond625) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond625) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond625) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond625) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond625) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond625) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond625) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond625) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond625) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond625) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond625) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond625) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond625) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond625) CFA_SP SP+0
        CFI (cfiCond625) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiPicker626 Using cfiCommon1
        CFI (cfiPicker626) NoFunction
        CFI (cfiPicker626) Picker
        MOV     A,DPL
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,DPH
        ADDC    A,?V0 + 1
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond624
        CFI EndBlock cfiCond625
        CFI EndBlock cfiPicker626
// 1952 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1953 static int gyro_self_test(long *bias_regular, long *bias_st)
gyro_self_test:
        CFI Block cfiBlock627 Using cfiCommon0
        CFI Function gyro_self_test
        CODE
// 1954 {
        FUNCALL gyro_self_test, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL gyro_self_test, labs
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL gyro_self_test, fabsf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 5
        MOV     A,#-0x5
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine52 & 0xFFFF
// 1955     int jj, result = 0;
// 1956     unsigned char tmp[3];
// 1957     float st_shift, st_shift_cust, st_shift_var;
// 1958 
// 1959     if (i2c_read(st.hw->addr, 0x0D, 3, tmp))
??CrossCallReturnLabel_71:
        ; Setup parameters for call to function MPU_Read_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x3
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_257:
        JZ      ??gyro_self_test_0
// 1960         return 0x07;
        MOV     R2,#0x7
        MOV     R3,#0x0
        LJMP    ??gyro_self_test_1 & 0xFFFF
// 1961 
// 1962     tmp[0] &= 0x1F;
??gyro_self_test_0:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ANL     A,#0x1f
        MOVX    @DPTR,A
// 1963     tmp[1] &= 0x1F;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ANL     A,#0x1f
        MOVX    @DPTR,A
// 1964     tmp[2] &= 0x1F;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ANL     A,#0x1f
        MOVX    @DPTR,A
// 1965 
// 1966     for (jj = 0; jj < 3; jj++) {
        MOV     R6,#0x0
        MOV     R7,#0x0
// 1967         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
??gyro_self_test_2:
        MOV     ?V0 + 0,R6
        MOV     ?V0 + 1,R7
        MOV     A,#0x2
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        ; Setup parameters for call to function labs
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,R2
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R3
        MOV     DPL,R0
        MOV     DPH,A
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     A,?V0 + 14
        ADD     A,R2
        MOV     DPL,A
        MOV     A,?V0 + 15
        ADDC    A,R3
        MOV     DPH,A
        MOV     R0,#?V0 + 0
        LCALL   ?L_SUB_X
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_99:
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_37800000
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_MUL
// 1968         if (tmp[jj]) {
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_94:
        JZ      ??gyro_self_test_3
// 1969             st_shift = 3275.f / test.gyro_sens;
        MOV     DPTR,#__Constant_41c80000
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        SJMP    ??gyro_self_test_4
// 1970             while (--tmp[jj])
// 1971                 st_shift *= 1.046f;
??gyro_self_test_5:
        MOV     DPTR,#__Constant_3f85e354
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
??gyro_self_test_4:
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_95:
        DEC     A
        MOVX    @DPTR,A
        JNZ     ??gyro_self_test_5
// 1972             st_shift_var = st_shift_cust / st_shift - 1.f;
// 1973             if (fabs(st_shift_var) > test.max_gyro_var)
        ; Setup parameters for call to function fabsf
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_DIV
        MOV     DPTR,#__Constant_bf800000
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_ADD
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_97:
        JC      ??gyro_self_test_6
// 1974                 result |= 1 << jj;
??gyro_self_test_7:
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        MOV     A,R6
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        LCALL   ?Subroutine72 & 0xFFFF
// 1975         } else if ((st_shift_cust < test.min_dps) ||
??CrossCallReturnLabel_107:
        SJMP    ??gyro_self_test_6
// 1976             (st_shift_cust > test.max_dps))
??gyro_self_test_3:
        MOV     DPTR,#__Constant_41200000
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_LT
        JC      ??gyro_self_test_7
        MOV     DPTR,#__Constant_42d20001
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_GE
        JC      ??gyro_self_test_7
// 1977             result |= 1 << jj;
// 1978     }
??gyro_self_test_6:
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_75:
        JNC     $+5
        LJMP    ??gyro_self_test_2 & 0xFFFF
// 1979     return result;
        MOV     R2,?V0 + 12
        MOV     R3,?V0 + 13
??gyro_self_test_1:
        MOV     A,#0x5
        LJMP    ?Subroutine6 & 0xFFFF
        CFI EndBlock cfiBlock627
// 1980 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
        CFI Block cfiCond628 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_106
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond629 Using cfiCommon0
        CFI (cfiCond629) NoFunction
        CFI (cfiCond629) Conditional ??CrossCallReturnLabel_107
        CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond629) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond629) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond629) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond629) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond629) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond629) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond629) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond629) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond629) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond629) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond629) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond629) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond629) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond629) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond629) CFA_SP SP+0
        CFI (cfiCond629) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiPicker630 Using cfiCommon1
        CFI (cfiPicker630) NoFunction
        CFI (cfiPicker630) Picker
        MOV     A,?V0 + 0
        ORL     A,?V0 + 12
        MOV     ?V0 + 12,A
        MOV     A,?V0 + 1
        ORL     A,?V0 + 13
        MOV     ?V0 + 13,A
        RET
        CFI EndBlock cfiCond628
        CFI EndBlock cfiCond629
        CFI EndBlock cfiPicker630

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
        CFI Block cfiCond631 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_98
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond632 Using cfiCommon0
        CFI (cfiCond632) NoFunction
        CFI (cfiCond632) Conditional ??CrossCallReturnLabel_99
        CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond632) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond632) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond632) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond632) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond632) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond632) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond632) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond632) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond632) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond632) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond632) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond632) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond632) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond632) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond632) CFA_SP SP+0
        CFI (cfiCond632) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiPicker633 Using cfiCommon1
        CFI (cfiPicker633) NoFunction
        CFI (cfiPicker633) Picker
        LCALL   ??labs?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 7,R5
        MOV     R0,#?V0 + 4
        RET
        CFI EndBlock cfiCond631
        CFI EndBlock cfiCond632
        CFI EndBlock cfiPicker633

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
        CFI Block cfiCond634 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_96
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond635 Using cfiCommon0
        CFI (cfiCond635) NoFunction
        CFI (cfiCond635) Conditional ??CrossCallReturnLabel_97
        CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond635) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond635) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond635) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond635) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond635) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond635) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond635) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond635) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond635) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond635) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond635) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond635) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond635) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond635) CFA_SP SP+0
        CFI (cfiCond635) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiPicker636 Using cfiCommon1
        CFI (cfiPicker636) NoFunction
        CFI (cfiPicker636) Picker
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        MOV     R4,?V0 + 6
        MOV     R5,?V0 + 7
        LCALL   ??fabsf?relay
        CLR     C
        MOV     A,R2
        SUBB    A,#0x1
        MOV     A,R3
        LCALL   ??Subroutine133_0 & 0xFFFF
??CrossCallReturnLabel_314:
        RET
        CFI EndBlock cfiCond634
        CFI EndBlock cfiCond635
        CFI EndBlock cfiPicker636

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
        CFI Block cfiCond637 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_94
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond638 Using cfiCommon0
        CFI (cfiCond638) NoFunction
        CFI (cfiCond638) Conditional ??CrossCallReturnLabel_95
        CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond638) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond638) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond638) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond638) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond638) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond638) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond638) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond638) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond638) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond638) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond638) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond638) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond638) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond638) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond638) CFA_SP SP+0
        CFI (cfiCond638) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiPicker639 Using cfiCommon1
        CFI (cfiPicker639) NoFunction
        CFI (cfiPicker639) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,DPL
        ADD     A,R6
        MOV     DPL,A
        MOV     A,DPH
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond637
        CFI EndBlock cfiCond638
        CFI EndBlock cfiPicker639

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
        CFI Block cfiCond640 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_74
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond641 Using cfiCommon0
        CFI (cfiCond641) NoFunction
        CFI (cfiCond641) Conditional ??CrossCallReturnLabel_75
        CFI (cfiCond641) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond641) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond641) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond641) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond641) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond641) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond641) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond641) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond641) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond641) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond641) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond641) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond641) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond641) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond641) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond641) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond641) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond641) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond641) CFA_SP SP+0
        CFI (cfiCond641) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiPicker642 Using cfiCommon1
        CFI (cfiPicker642) NoFunction
        CFI (cfiPicker642) Picker
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_131:
        SUBB    A,#0x3
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_315:
        RET
        CFI EndBlock cfiCond640
        CFI EndBlock cfiCond641
        CFI EndBlock cfiPicker642

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
        CFI Block cfiCond643 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_70
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond644 Using cfiCommon0
        CFI (cfiCond644) NoFunction
        CFI (cfiCond644) Conditional ??CrossCallReturnLabel_71
        CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond644) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond644) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond644) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond644) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond644) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond644) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond644) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond644) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond644) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond644) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond644) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond644) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond644) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond644) CFA_SP SP+0
        CFI (cfiCond644) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiPicker645 Using cfiCommon1
        CFI (cfiPicker645) NoFunction
        CFI (cfiPicker645) Picker
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     ?V0 + 14,R4
        MOV     ?V0 + 15,R5
        MOV     ?V0 + 12,#0x0
        MOV     ?V0 + 13,#0x0
        RET
        CFI EndBlock cfiCond643
        CFI EndBlock cfiCond644
        CFI EndBlock cfiPicker645
// 1981 
// 1982 #ifdef AK89xx_SECONDARY
// 1983 static int compass_self_test(void)
// 1984 {
// 1985     unsigned char tmp[6];
// 1986     unsigned char tries = 10;
// 1987     int result = 0x07;
// 1988     short data;
// 1989 
// 1990     mpu_set_bypass(1);
// 1991 
// 1992     tmp[0] = AKM_POWER_DOWN;
// 1993     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp))
// 1994         return 0x07;
// 1995     tmp[0] = AKM_BIT_SELF_TEST;
// 1996     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_ASTC, 1, tmp))
// 1997         goto AKM_restore;
// 1998     tmp[0] = AKM_MODE_SELF_TEST;
// 1999     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp))
// 2000         goto AKM_restore;
// 2001 
// 2002     do {
// 2003         delay_ms(10);
// 2004         if (i2c_read(st.chip_cfg.compass_addr, AKM_REG_ST1, 1, tmp))
// 2005             goto AKM_restore;
// 2006         if (tmp[0] & AKM_DATA_READY)
// 2007             break;
// 2008     } while (tries--);
// 2009     if (!(tmp[0] & AKM_DATA_READY))
// 2010         goto AKM_restore;
// 2011 
// 2012     if (i2c_read(st.chip_cfg.compass_addr, AKM_REG_HXL, 6, tmp))
// 2013         goto AKM_restore;
// 2014 
// 2015     result = 0;
// 2016     data = (short)(tmp[1] << 8) | tmp[0];
// 2017     if ((data > 100) || (data < -100))
// 2018         result |= 0x01;
// 2019     data = (short)(tmp[3] << 8) | tmp[2];
// 2020     if ((data > 100) || (data < -100))
// 2021         result |= 0x02;
// 2022     data = (short)(tmp[5] << 8) | tmp[4];
// 2023     if ((data > -300) || (data < -1000))
// 2024         result |= 0x04;
// 2025 
// 2026 AKM_restore:
// 2027     tmp[0] = 0 | SUPPORTS_AK89xx_HIGH_SENS;
// 2028     i2c_write(st.chip_cfg.compass_addr, AKM_REG_ASTC, 1, tmp);
// 2029     tmp[0] = SUPPORTS_AK89xx_HIGH_SENS;
// 2030     i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp);
// 2031     mpu_set_bypass(0);
// 2032     return result;
// 2033 }
// 2034 #endif
// 2035 #endif
// 2036 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2037 static int get_st_biases(long *gyro, long *accel, unsigned char hw_test)
get_st_biases:
        CFI Block cfiBlock646 Using cfiCommon0
        CFI Function get_st_biases
        CODE
// 2038 {
        FUNCALL get_st_biases, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 47, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 47, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x17
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 23)
        ; Saved register size: 23
        ; Auto size: 24
        MOV     A,#-0x18
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 47)
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     ?V0 + 14,R1
// 2039     unsigned char data[MAX_PACKET_LENGTH];
// 2040     unsigned char packet_count, ii;
// 2041     unsigned short fifo_count;
// 2042 
// 2043     data[0] = 0x01;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x1
        MOVX    @DPTR,A
// 2044     data[1] = 0;
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        LCALL   ??Subroutine106_0 & 0xFFFF
// 2045     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, data))
??CrossCallReturnLabel_140:
        JZ      ??get_st_biases_0
// 2046         return -1;
??get_st_biases_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??get_st_biases_2 & 0xFFFF
// 2047     delay_ms(200);
??get_st_biases_0:
        ; Setup parameters for call to function delay_ms
        MOV     R2,#-0x38
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
// 2048     data[0] = 0;
        LCALL   ?Subroutine46 & 0xFFFF
// 2049     if (i2c_write(st.hw->addr, st.reg->int_enable, 1, data))
??CrossCallReturnLabel_302:
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_154:
        JNZ     ??get_st_biases_1
// 2050         return -1;
// 2051     if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, data))
        ; Setup parameters for call to function MPU_Write_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_276:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_175:
        JNZ     ??get_st_biases_1
// 2052         return -1;
// 2053     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, data))
        ; Setup parameters for call to function MPU_Write_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        LCALL   ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_144:
        JNZ     ??get_st_biases_1
// 2054         return -1;
// 2055     if (i2c_write(st.hw->addr, st.reg->i2c_mst, 1, data))
        ; Setup parameters for call to function MPU_Write_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x17
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_155:
        JNZ     ??get_st_biases_1
// 2056         return -1;
// 2057     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, data))
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_231:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_176:
        JNZ     ??get_st_biases_1
// 2058         return -1;
// 2059     data[0] = BIT_FIFO_RST | BIT_DMP_RST;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0xc
        MOVX    @DPTR,A
// 2060     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, data))
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_227:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_177:
        JNZ     ??get_st_biases_1
// 2061         return -1;
// 2062     delay_ms(15);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0xf
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
// 2063     data[0] = st.test->reg_lpf;
        MOV     DPTR,#st + 33
        LCALL   ??Subroutine141_0 & 0xFFFF
??CrossCallReturnLabel_322:
        INC     DPTR
        LCALL   ?Subroutine14 & 0xFFFF
// 2064     if (i2c_write(st.hw->addr, st.reg->lpf, 1, data))
??CrossCallReturnLabel_0:
        INC     DPTR
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_178:
        JNZ     ??get_st_biases_1
// 2065         return -1;
// 2066     data[0] = st.test->reg_rate_div;
        MOV     DPTR,#st + 33
        LCALL   ??Subroutine141_0 & 0xFFFF
??CrossCallReturnLabel_323:
        LCALL   ?Subroutine14 & 0xFFFF
// 2067     if (i2c_write(st.hw->addr, st.reg->rate_div, 1, data))
??CrossCallReturnLabel_1:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_179:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2068         return -1;
// 2069     if (hw_test)
        MOV     A,?V0 + 14
        MOV     DPTR,#st + 33
        JZ      ??get_st_biases_3
// 2070         data[0] = st.test->reg_gyro_fsr | 0xE0;
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_5:
        ORL     A,#0xe0
        SJMP    ??CrossCallReturnLabel_6
// 2071     else
// 2072         data[0] = st.test->reg_gyro_fsr;
??get_st_biases_3:
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_6:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 2073     if (i2c_write(st.hw->addr, st.reg->gyro_cfg, 1, data))
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_24:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_180:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2074         return -1;
// 2075 
// 2076     if (hw_test)
        MOV     A,?V0 + 14
        JZ      ??get_st_biases_4
// 2077         data[0] = st.test->reg_accel_fsr | 0xE0;
        MOV     DPTR,#st + 33
        MOVX    A,@DPTR
        ADD     A,#0xb
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_192:
        ORL     A,#0xe0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        SJMP    ??get_st_biases_5
// 2078     else
// 2079         data[0] = test.reg_accel_fsr;
??get_st_biases_4:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x18
??get_st_biases_5:
        LCALL   ?Subroutine20 & 0xFFFF
// 2080     if (i2c_write(st.hw->addr, st.reg->accel_cfg, 1, data))
??CrossCallReturnLabel_281:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_181:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2081         return -1;
// 2082     if (hw_test)
        MOV     A,?V0 + 14
        JZ      ??get_st_biases_6
// 2083         delay_ms(200);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#-0x38
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
// 2084 
// 2085     /* Fill FIFO for test.wait_ms milliseconds. */
// 2086     data[0] = BIT_FIFO_EN;
??get_st_biases_6:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x40
        MOVX    @DPTR,A
// 2087     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, data))
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_228:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_182:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2088         return -1;
// 2089 
// 2090     data[0] = INV_XYZ_GYRO | INV_XYZ_ACCEL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x78
        LCALL   ??Subroutine128_0 & 0xFFFF
// 2091     if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, data))
??CrossCallReturnLabel_273:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_183:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2092         return -1;
// 2093     delay_ms(test.wait_ms);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x32
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
// 2094     data[0] = 0;
        LCALL   ?Subroutine31 & 0xFFFF
// 2095     if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, data))
??CrossCallReturnLabel_272:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_184:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2096         return -1;
// 2097 
// 2098     if (i2c_read(st.hw->addr, st.reg->fifo_count_h, 2, data))
        ; Setup parameters for call to function MPU_Read_Len
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_9:
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_214:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2099         return -1;
// 2100 
// 2101     fifo_count = (data[0] << 8) | data[1];
// 2102     packet_count = fifo_count / MAX_PACKET_LENGTH;
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_46:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     R2,#0xc
        MOV     R3,#0x0
        LCALL   ?US_DIV_MOD
        MOV     A,R0
        MOV     ?V0 + 1,A
// 2103     gyro[0] = gyro[1] = gyro[2] = 0;
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?XSTORE_R2345
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?XSTORE_R2345
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        LCALL   ?XSTORE_R2345
// 2104     accel[0] = accel[1] = accel[2] = 0;
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?XSTORE_R2345
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?XSTORE_R2345
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?XSTORE_R2345
// 2105 
// 2106     for (ii = 0; ii < packet_count; ii++) {
        MOV     ?V0 + 0,#0x0
        LJMP    ??get_st_biases_7 & 0xFFFF
// 2107         short accel_cur[3], gyro_cur[3];
// 2108         if (i2c_read(st.hw->addr, st.reg->fifo_r_w, MAX_PACKET_LENGTH, data))
??get_st_biases_8:
        ; Setup parameters for call to function MPU_Read_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0xc
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0xb
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_207:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2109             return -1;
// 2110         accel_cur[0] = ((short)data[0] << 8) | data[1];
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_47:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine54 & 0xFFFF
// 2111         accel_cur[1] = ((short)data[2] << 8) | data[3];
??CrossCallReturnLabel_218:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
// 2112         accel_cur[2] = ((short)data[4] << 8) | data[5];
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
// 2113         accel[0] += (long)accel_cur[0];
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_3:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0 + 4
        LCALL   ?L_ADD_TO_X
// 2114         accel[1] += (long)accel_cur[1];
        MOV     ?V0 + 4,R4
        MOV     A,R5
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_90:
        MOV     R0,#?V0 + 4
        LCALL   ?L_ADD_TO_X
// 2115         accel[2] += (long)accel_cur[2];
        MOV     ?V0 + 4,R2
        MOV     A,R3
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_91:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R0,#?V0 + 4
        LCALL   ?L_ADD_TO_X
// 2116         gyro_cur[0] = (((short)data[6] << 8) | data[7]);
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        LCALL   ??Subroutine119_0 & 0xFFFF
// 2117         gyro_cur[1] = (((short)data[8] << 8) | data[9]);
??CrossCallReturnLabel_245:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
// 2118         gyro_cur[2] = (((short)data[10] << 8) | data[11]);
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
// 2119         gyro[0] += (long)gyro_cur[0];
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_4:
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        MOV     R0,#?V0 + 4
        LCALL   ?L_ADD_TO_X
// 2120         gyro[1] += (long)gyro_cur[1];
        MOV     ?V0 + 4,R4
        MOV     A,R5
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_86:
        MOV     R0,#?V0 + 4
        LCALL   ?L_ADD_TO_X
// 2121         gyro[2] += (long)gyro_cur[2];
        MOV     ?V0 + 4,R2
        MOV     A,R3
        LCALL   ?Subroutine62 & 0xFFFF
// 2122     }
??CrossCallReturnLabel_87:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R0,#?V0 + 4
        LCALL   ?L_ADD_TO_X
        INC     ?V0 + 0
??get_st_biases_7:
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,?V0 + 1
        JNC     $+5
        LJMP    ??get_st_biases_8 & 0xFFFF
// 2123 #ifdef EMPL_NO_64BIT
// 2124     gyro[0] = (long)(((float)gyro[0]*65536.f) / test.gyro_sens / packet_count);
// 2125     gyro[1] = (long)(((float)gyro[1]*65536.f) / test.gyro_sens / packet_count);
// 2126     gyro[2] = (long)(((float)gyro[2]*65536.f) / test.gyro_sens / packet_count);
// 2127     if (has_accel) {
// 2128         accel[0] = (long)(((float)accel[0]*65536.f) / test.accel_sens /
// 2129             packet_count);
// 2130         accel[1] = (long)(((float)accel[1]*65536.f) / test.accel_sens /
// 2131             packet_count);
// 2132         accel[2] = (long)(((float)accel[2]*65536.f) / test.accel_sens /
// 2133             packet_count);
// 2134         /* Don't remove gravity! */
// 2135         accel[2] -= 65536L;
// 2136     }
// 2137 #else
// 2138     gyro[0] = (long)(((long long)gyro[0]<<16) / test.gyro_sens / packet_count);
        MOV     A,?V0 + 1
        MOV     ?V0 + 4,A
        CLR     A
        MOV     ?V0 + 5,A
        MOV     ?V0 + 6,A
        MOV     ?V0 + 7,A
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     A,#0x10
        MOV     R0,#?V0 + 0
        LCALL   ?L_SHL
        MOV     DPTR,#__Constant_83
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?UL_DIV_MOD
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 9,?V0 + 5
        MOV     ?V0 + 10,?V0 + 6
        MOV     ?V0 + 11,?V0 + 7
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?UL_DIV_MOD
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 2139     gyro[1] = (long)(((long long)gyro[1]<<16) / test.gyro_sens / packet_count);
        MOV     A,?V0 + 12
        ADD     A,#0x4
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_269:
        LCALL   ?L_MOV_X
        MOV     A,#0x10
        MOV     R0,#?V0 + 0
        LCALL   ?L_SHL
        MOV     DPTR,#__Constant_83
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?UL_DIV_MOD
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 9,?V0 + 5
        MOV     ?V0 + 10,?V0 + 6
        MOV     ?V0 + 11,?V0 + 7
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?UL_DIV_MOD
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 2140     gyro[2] = (long)(((long long)gyro[2]<<16) / test.gyro_sens / packet_count);
        MOV     A,?V0 + 12
        ADD     A,#0x8
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_270:
        LCALL   ?L_MOV_X
        MOV     A,#0x10
        MOV     R0,#?V0 + 0
        LCALL   ?L_SHL
        MOV     DPTR,#__Constant_83
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?UL_DIV_MOD
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 9,?V0 + 5
        MOV     ?V0 + 10,?V0 + 6
        MOV     ?V0 + 11,?V0 + 7
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?UL_DIV_MOD
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 2141     accel[0] = (long)(((long long)accel[0]<<16) / test.accel_sens /
// 2142         packet_count);
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     A,#0x10
        MOV     R0,#?V0 + 8
        LCALL   ?L_SHL
        MOV     A,#0xb
        MOV     R0,#?V0 + 8
        LCALL   ?UL_SHR
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?UL_DIV_MOD
        MOV     ?V0 + 0,?V0 + 8
        MOV     ?V0 + 1,?V0 + 9
        MOV     ?V0 + 2,?V0 + 10
        MOV     ?V0 + 3,?V0 + 11
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 2143     accel[1] = (long)(((long long)accel[1]<<16) / test.accel_sens /
// 2144         packet_count);
        MOV     A,R6
        ADD     A,#0x4
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     A,#0x10
        MOV     R0,#?V0 + 8
        LCALL   ?L_SHL
        MOV     A,#0xb
        MOV     R0,#?V0 + 8
        LCALL   ?UL_SHR
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?UL_DIV_MOD
        MOV     ?V0 + 0,?V0 + 8
        MOV     ?V0 + 1,?V0 + 9
        MOV     ?V0 + 2,?V0 + 10
        MOV     ?V0 + 3,?V0 + 11
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 2145     accel[2] = (long)(((long long)accel[2]<<16) / test.accel_sens /
// 2146         packet_count);
        MOV     A,R6
        ADD     A,#0x8
        MOV     R2,A
        MOV     A,R7
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_268:
        LCALL   ?L_MOV_X
        MOV     A,#0x10
        MOV     R0,#?V0 + 0
        LCALL   ?L_SHL
        MOV     A,#0xb
        MOV     R0,#?V0 + 0
        LCALL   ?UL_SHR
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?UL_DIV_MOD
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 2147     /* Don't remove gravity! */
// 2148     if (accel[2] > 0L)
        MOV     DPTR,#__Constant_1
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     DPH,R3
        MOV     DPL,R2
        MOV     R0,#?V0 + 0
        LCALL   ?SL_GT_X
        JC      ??get_st_biases_9
// 2149         accel[2] -= 65536L;
        MOV     DPTR,#__Constant_ffff0000
        SJMP    ??get_st_biases_10
// 2150     else
// 2151         accel[2] += 65536L;
??get_st_biases_9:
        MOV     DPTR,#__Constant_10000
??get_st_biases_10:
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R0,#?V0 + 0
        LCALL   ?L_ADD_TO_X
// 2152 #endif
// 2153 
// 2154     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
??get_st_biases_2:
        MOV     A,#0x18
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 23)
        MOV     R7,#0xf
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock646
// 2155 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine83:
        CFI Block cfiCond647 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_190
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond648 Using cfiCommon0
        CFI (cfiCond648) NoFunction
        CFI (cfiCond648) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_191
        CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond648) CFA_SP SP+0
        CFI (cfiCond648) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond649 Using cfiCommon0
        CFI (cfiCond649) NoFunction
        CFI (cfiCond649) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_188
        CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond649) CFA_SP SP+0
        CFI (cfiCond649) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond650 Using cfiCommon0
        CFI (cfiCond650) NoFunction
        CFI (cfiCond650) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_189
        CFI (cfiCond650) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond650) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond650) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond650) CFA_SP SP+0
        CFI (cfiCond650) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond651 Using cfiCommon0
        CFI (cfiCond651) NoFunction
        CFI (cfiCond651) Conditional ??CrossCallReturnLabel_192
        CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond651) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond651) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond651) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond651) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond651) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond651) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond651) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond651) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond651) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond651) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond651) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond651) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond651) CFA_SP SP+0
        CFI (cfiCond651) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker652 Using cfiCommon1
        CFI (cfiPicker652) NoFunction
        CFI (cfiPicker652) Picker
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_196:
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond647
        CFI EndBlock cfiCond648
        CFI EndBlock cfiCond649
        CFI EndBlock cfiCond650
        CFI EndBlock cfiCond651
        CFI EndBlock cfiPicker652

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
        CFI Block cfiCond653 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_90
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond654 Using cfiCommon0
        CFI (cfiCond654) NoFunction
        CFI (cfiCond654) Conditional ??CrossCallReturnLabel_91
        CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond654) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond654) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond654) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond654) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond654) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond654) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond654) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond654) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond654) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond654) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond654) CFA_SP SP+0
        CFI (cfiCond654) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker655 Using cfiCommon1
        CFI (cfiPicker655) NoFunction
        CFI (cfiPicker655) Picker
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_267:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond653
        CFI EndBlock cfiCond654
        CFI EndBlock cfiPicker655

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine95:
        CFI Block cfiCond656 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_90
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond657 Using cfiCommon0
        CFI (cfiCond657) NoFunction
        CFI (cfiCond657) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_91
        CFI (cfiCond657) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond657) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond657) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond657) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond657) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond657) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond657) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond657) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond657) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond657) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond657) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond657) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond657) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond657) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond657) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond657) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond657) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond657) CFA_SP SP+0
        CFI (cfiCond657) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond658 Using cfiCommon0
        CFI (cfiCond658) NoFunction
        CFI (cfiCond658) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_86
        CFI (cfiCond658) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond658) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond658) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond658) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond658) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond658) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond658) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond658) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond658) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond658) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond658) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond658) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond658) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond658) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond658) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond658) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond658) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond658) CFA_SP SP+0
        CFI (cfiCond658) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond659 Using cfiCommon0
        CFI (cfiCond659) NoFunction
        CFI (cfiCond659) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_87
        CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond659) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond659) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond659) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond659) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond659) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond659) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond659) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond659) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond659) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond659) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond659) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond659) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond659) CFA_SP SP+0
        CFI (cfiCond659) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker660 Using cfiCommon1
        CFI (cfiPicker660) NoFunction
        CFI (cfiPicker660) Picker
        MOV     ?V0 + 5,A
        CFI EndBlock cfiCond656
        CFI EndBlock cfiCond657
        CFI EndBlock cfiCond658
        CFI EndBlock cfiCond659
        CFI EndBlock cfiPicker660
        REQUIRE ??Subroutine126_0
        ; // Fall through to label ??Subroutine126_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine126_0:
        CFI Block cfiCond661 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond662 Using cfiCommon0
        CFI (cfiCond662) NoFunction
        CFI (cfiCond662) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_3
        CFI (cfiCond662) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond662) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond662) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond662) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond662) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond662) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond662) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond662) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond662) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond662) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond662) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond662) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond662) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond662) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond662) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond662) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond662) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond662) CFA_SP SP+0
        CFI (cfiCond662) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond663 Using cfiCommon0
        CFI (cfiCond663) NoFunction
        CFI (cfiCond663) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_4
        CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond663) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond663) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond663) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond663) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond663) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond663) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond663) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond663) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond663) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond663) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond663) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond663) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond663) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond663) CFA_SP SP+0
        CFI (cfiCond663) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond664 Using cfiCommon0
        CFI (cfiCond664) NoFunction
        CFI (cfiCond664) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_90
        CFI (cfiCond664) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond664) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond664) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond664) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond664) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond664) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond664) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond664) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond664) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond664) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond664) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond664) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond664) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond664) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond664) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond664) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond664) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond664) CFA_SP SP+0
        CFI (cfiCond664) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond665 Using cfiCommon0
        CFI (cfiCond665) NoFunction
        CFI (cfiCond665) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_91
        CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond665) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond665) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond665) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond665) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond665) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond665) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond665) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond665) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond665) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond665) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond665) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond665) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond665) CFA_SP SP+0
        CFI (cfiCond665) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond666 Using cfiCommon0
        CFI (cfiCond666) NoFunction
        CFI (cfiCond666) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_86
        CFI (cfiCond666) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond666) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond666) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond666) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond666) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond666) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond666) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond666) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond666) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond666) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond666) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond666) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond666) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond666) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond666) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond666) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond666) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond666) CFA_SP SP+0
        CFI (cfiCond666) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond667 Using cfiCommon0
        CFI (cfiCond667) NoFunction
        CFI (cfiCond667) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_87
        CFI (cfiCond667) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond667) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond667) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond667) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond667) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond667) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond667) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond667) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond667) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond667) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond667) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond667) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond667) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond667) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond667) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond667) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond667) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond667) CFA_SP SP+0
        CFI (cfiCond667) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker668 Using cfiCommon1
        CFI (cfiPicker668) NoFunction
        CFI (cfiPicker668) Picker
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 6,A
        MOV     ?V0 + 7,A
        RET
        CFI EndBlock cfiCond661
        CFI EndBlock cfiCond662
        CFI EndBlock cfiCond663
        CFI EndBlock cfiCond664
        CFI EndBlock cfiCond665
        CFI EndBlock cfiCond666
        CFI EndBlock cfiCond667
        CFI EndBlock cfiPicker668

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
        CFI Block cfiCond669 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_86
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond670 Using cfiCommon0
        CFI (cfiCond670) NoFunction
        CFI (cfiCond670) Conditional ??CrossCallReturnLabel_87
        CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond670) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond670) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond670) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond670) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond670) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond670) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond670) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond670) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond670) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond670) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond670) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond670) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond670) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond670) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond670) CFA_SP SP+0
        CFI (cfiCond670) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker671 Using cfiCommon1
        CFI (cfiPicker671) NoFunction
        CFI (cfiPicker671) Picker
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_266:
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond669
        CFI EndBlock cfiCond670
        CFI EndBlock cfiPicker671

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
        CFI Block cfiCond672 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_269
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond673 Using cfiCommon0
        CFI (cfiCond673) NoFunction
        CFI (cfiCond673) Conditional ??CrossCallReturnLabel_270
        CFI (cfiCond673) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond673) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond673) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond673) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond673) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond673) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond673) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond673) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond673) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond673) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond673) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond673) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond673) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond673) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond673) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond673) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond673) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond673) CFA_SP SP+0
        CFI (cfiCond673) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker674 Using cfiCommon1
        CFI (cfiPicker674) NoFunction
        CFI (cfiPicker674) Picker
        MOV     R2,A
        MOV     A,?V0 + 13
        CFI EndBlock cfiCond672
        CFI EndBlock cfiCond673
        CFI EndBlock cfiPicker674
        REQUIRE ??Subroutine127_0
        ; // Fall through to label ??Subroutine127_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine127_0:
        CFI Block cfiCond675 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_268
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond676 Using cfiCommon0
        CFI (cfiCond676) NoFunction
        CFI (cfiCond676) Conditional ??CrossCallReturnLabel_269
        CFI (cfiCond676) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond676) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond676) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond676) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond676) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond676) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond676) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond676) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond676) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond676) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond676) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond676) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond676) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond676) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond676) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond676) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond676) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond676) CFA_SP SP+0
        CFI (cfiCond676) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond677 Using cfiCommon0
        CFI (cfiCond677) NoFunction
        CFI (cfiCond677) Conditional ??CrossCallReturnLabel_270
        CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond677) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond677) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond677) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond677) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond677) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond677) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond677) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond677) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond677) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond677) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond677) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond677) CFA_SP SP+0
        CFI (cfiCond677) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker678 Using cfiCommon1
        CFI (cfiPicker678) NoFunction
        CFI (cfiPicker678) Picker
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     R0,#?V0 + 0
        RET
        CFI EndBlock cfiCond675
        CFI EndBlock cfiCond676
        CFI EndBlock cfiCond677
        CFI EndBlock cfiPicker678

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
        CFI Block cfiCond679 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_271
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond680 Using cfiCommon0
        CFI (cfiCond680) NoFunction
        CFI (cfiCond680) Conditional ??CrossCallReturnLabel_272
        CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond680) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond680) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond680) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond680) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond680) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond680) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond680) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond680) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond680) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond680) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond680) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond680) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond680) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond680) CFA_SP SP+0
        CFI (cfiCond680) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker681 Using cfiCommon1
        CFI (cfiPicker681) NoFunction
        CFI (cfiPicker681) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        CFI EndBlock cfiCond679
        CFI EndBlock cfiCond680
        CFI EndBlock cfiPicker681
        REQUIRE ??Subroutine128_0
        ; // Fall through to label ??Subroutine128_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine128_0:
        CFI Block cfiCond682 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_273
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond683 Using cfiCommon0
        CFI (cfiCond683) NoFunction
        CFI (cfiCond683) Conditional ??CrossCallReturnLabel_271
        CFI (cfiCond683) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond683) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond683) CFA_SP SP+-5
        CFI (cfiCond683) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond684 Using cfiCommon0
        CFI (cfiCond684) NoFunction
        CFI (cfiCond684) Conditional ??CrossCallReturnLabel_272
        CFI (cfiCond684) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond684) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond684) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond684) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond684) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond684) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond684) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond684) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond684) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond684) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond684) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond684) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond684) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond684) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond684) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond684) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond684) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond684) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond684) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond684) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond684) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond684) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond684) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond684) CFA_SP SP+0
        CFI (cfiCond684) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker685 Using cfiCommon1
        CFI (cfiPicker685) NoFunction
        CFI (cfiPicker685) Picker
        MOVX    @DPTR,A
        CFI EndBlock cfiCond682
        CFI EndBlock cfiCond683
        CFI EndBlock cfiCond684
        CFI EndBlock cfiPicker685
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        REQUIRE ??Subroutine129_0
        ; // Fall through to label ??Subroutine129_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine129_0:
        CFI Block cfiCond686 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_275
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond687 Using cfiCommon0
        CFI (cfiCond687) NoFunction
        CFI (cfiCond687) Conditional ??CrossCallReturnLabel_276
        CFI (cfiCond687) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond687) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond687) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond687) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond687) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond687) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond687) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond687) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond687) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond687) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond687) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond687) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond687) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond687) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond687) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond687) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond687) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond687) CFA_SP SP+0
        CFI (cfiCond687) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond688 Using cfiCommon0
        CFI (cfiCond688) NoFunction
        CFI (cfiCond688) Conditional ??CrossCallReturnLabel_273
        CFI (cfiCond688) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond688) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond688) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond688) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond688) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond688) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond688) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond688) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond688) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond688) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond688) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond688) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond688) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond688) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond688) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond688) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond688) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond688) CFA_SP SP+0
        CFI (cfiCond688) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond689 Using cfiCommon0
        CFI (cfiCond689) NoFunction
        CFI (cfiCond689) Conditional ??CrossCallReturnLabel_271
        CFI (cfiCond689) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond689) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond689) CFA_SP SP+-5
        CFI (cfiCond689) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond690 Using cfiCommon0
        CFI (cfiCond690) NoFunction
        CFI (cfiCond690) Conditional ??CrossCallReturnLabel_272
        CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond690) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond690) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond690) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond690) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond690) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond690) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond690) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond690) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond690) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond690) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond690) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond690) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond690) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond690) CFA_SP SP+0
        CFI (cfiCond690) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker691 Using cfiCommon1
        CFI (cfiPicker691) NoFunction
        CFI (cfiPicker691) Picker
        MOV     R4,DPL
        MOV     R5,DPH
        CFI EndBlock cfiCond686
        CFI EndBlock cfiCond687
        CFI EndBlock cfiCond688
        CFI EndBlock cfiCond689
        CFI EndBlock cfiCond690
        CFI EndBlock cfiPicker691
        REQUIRE ??Subroutine130_0
        ; // Fall through to label ??Subroutine130_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine130_0:
        CFI Block cfiCond692 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_274
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond693 Using cfiCommon0
        CFI (cfiCond693) NoFunction
        CFI (cfiCond693) Conditional ??CrossCallReturnLabel_275
        CFI (cfiCond693) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond693) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond693) CFA_SP SP+-5
        CFI (cfiCond693) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond694 Using cfiCommon0
        CFI (cfiCond694) NoFunction
        CFI (cfiCond694) Conditional ??CrossCallReturnLabel_276
        CFI (cfiCond694) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond694) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond694) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond694) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond694) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond694) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond694) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond694) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond694) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond694) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond694) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond694) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond694) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond694) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond694) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond694) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond694) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond694) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond694) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond694) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond694) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond694) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond694) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond694) CFA_SP SP+0
        CFI (cfiCond694) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond695 Using cfiCommon0
        CFI (cfiCond695) NoFunction
        CFI (cfiCond695) Conditional ??CrossCallReturnLabel_273
        CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond695) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond695) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond695) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond695) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond695) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond695) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond695) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond695) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond695) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond695) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond695) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond695) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond695) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond695) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond695) CFA_SP SP+0
        CFI (cfiCond695) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond696 Using cfiCommon0
        CFI (cfiCond696) NoFunction
        CFI (cfiCond696) Conditional ??CrossCallReturnLabel_271
        CFI (cfiCond696) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond696) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond696) CFA_SP SP+-5
        CFI (cfiCond696) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond697 Using cfiCommon0
        CFI (cfiCond697) NoFunction
        CFI (cfiCond697) Conditional ??CrossCallReturnLabel_272
        CFI (cfiCond697) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond697) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond697) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond697) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond697) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond697) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond697) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond697) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond697) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond697) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond697) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond697) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond697) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond697) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond697) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond697) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond697) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond697) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond697) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond697) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond697) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond697) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond697) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond697) CFA_SP SP+0
        CFI (cfiCond697) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker698 Using cfiCommon1
        CFI (cfiPicker698) NoFunction
        CFI (cfiPicker698) Picker
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_278:
        RET
        CFI EndBlock cfiCond692
        CFI EndBlock cfiCond693
        CFI EndBlock cfiCond694
        CFI EndBlock cfiCond695
        CFI EndBlock cfiCond696
        CFI EndBlock cfiCond697
        CFI EndBlock cfiPicker698

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine77:
        CFI Block cfiCond699 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_271
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond700 Using cfiCommon0
        CFI (cfiCond700) NoFunction
        CFI (cfiCond700) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_272
        CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond700) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond700) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond700) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond700) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond700) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond700) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond700) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond700) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond700) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond700) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond700) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond700) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond700) CFA_SP SP+0
        CFI (cfiCond700) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond701 Using cfiCommon0
        CFI (cfiCond701) NoFunction
        CFI (cfiCond701) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_273
        CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond701) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond701) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond701) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond701) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond701) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond701) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond701) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond701) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond701) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond701) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond701) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond701) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond701) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond701) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond701) CFA_SP SP+0
        CFI (cfiCond701) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond702 Using cfiCommon0
        CFI (cfiCond702) NoFunction
        CFI (cfiCond702) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_275
        CFI (cfiCond702) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond702) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond702) CFA_SP SP+-5
        CFI (cfiCond702) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond703 Using cfiCommon0
        CFI (cfiCond703) NoFunction
        CFI (cfiCond703) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_276
        CFI (cfiCond703) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond703) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond703) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond703) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond703) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond703) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond703) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond703) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond703) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond703) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond703) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond703) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond703) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond703) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond703) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond703) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond703) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond703) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond703) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond703) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond703) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond703) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond703) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond703) CFA_SP SP+0
        CFI (cfiCond703) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond704 Using cfiCommon0
        CFI (cfiCond704) NoFunction
        CFI (cfiCond704) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_274
        CFI (cfiCond704) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond704) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond704) CFA_SP SP+-5
        CFI (cfiCond704) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond705 Using cfiCommon0
        CFI (cfiCond705) NoFunction
        CFI (cfiCond705) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_23
        CFI (cfiCond705) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond705) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond705) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond705) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond705) CFA_SP SP+0
        CFI (cfiCond705) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond706 Using cfiCommon0
        CFI (cfiCond706) NoFunction
        CFI (cfiCond706) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_24
        CFI (cfiCond706) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond706) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond706) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond706) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond706) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond706) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond706) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond706) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond706) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond706) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond706) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond706) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond706) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond706) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond706) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond706) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond706) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond706) CFA_SP SP+0
        CFI (cfiCond706) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker707 Using cfiCommon1
        CFI (cfiPicker707) NoFunction
        CFI (cfiPicker707) Picker
        MOV     R3,#0x1
        MOV     DPTR,#st
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_280:
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond699
        CFI EndBlock cfiCond700
        CFI EndBlock cfiCond701
        CFI EndBlock cfiCond702
        CFI EndBlock cfiCond703
        CFI EndBlock cfiCond704
        CFI EndBlock cfiCond705
        CFI EndBlock cfiCond706
        CFI EndBlock cfiPicker707

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
        CFI Block cfiCond708 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_23
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond709 Using cfiCommon0
        CFI (cfiCond709) NoFunction
        CFI (cfiCond709) Conditional ??CrossCallReturnLabel_24
        CFI (cfiCond709) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond709) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond709) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond709) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond709) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond709) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond709) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond709) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond709) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond709) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond709) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond709) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond709) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond709) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond709) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond709) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond709) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond709) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond709) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond709) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond709) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond709) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond709) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond709) CFA_SP SP+0
        CFI (cfiCond709) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker710 Using cfiCommon1
        CFI (cfiPicker710) NoFunction
        CFI (cfiPicker710) Picker
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_277:
        INC     DPTR
        RET
        CFI EndBlock cfiCond708
        CFI EndBlock cfiCond709
        CFI EndBlock cfiPicker710

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
        CFI Block cfiCond711 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_281
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond712 Using cfiCommon0
        CFI (cfiCond712) NoFunction
        CFI (cfiCond712) Conditional ??CrossCallReturnLabel_282
        CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond712) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond712) CFA_SP SP+0
        CFI (cfiCond712) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker713 Using cfiCommon1
        CFI (cfiPicker713) NoFunction
        CFI (cfiPicker713) Picker
        MOVX    @DPTR,A
        CFI EndBlock cfiCond711
        CFI EndBlock cfiCond712
        CFI EndBlock cfiPicker713
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        REQUIRE ??Subroutine131_0
        ; // Fall through to label ??Subroutine131_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine131_0:
        CFI Block cfiCond714 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_283
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond715 Using cfiCommon0
        CFI (cfiCond715) NoFunction
        CFI (cfiCond715) Conditional ??CrossCallReturnLabel_281
        CFI (cfiCond715) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond715) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond715) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond715) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond715) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond715) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond715) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond715) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond715) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond715) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond715) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond715) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond715) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond715) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond715) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond715) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond715) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond715) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond715) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond715) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond715) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond715) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond715) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond715) CFA_SP SP+0
        CFI (cfiCond715) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond716 Using cfiCommon0
        CFI (cfiCond716) NoFunction
        CFI (cfiCond716) Conditional ??CrossCallReturnLabel_282
        CFI (cfiCond716) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond716) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond716) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond716) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond716) CFA_SP SP+0
        CFI (cfiCond716) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker717 Using cfiCommon1
        CFI (cfiPicker717) NoFunction
        CFI (cfiPicker717) Picker
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_290:
        RET
        CFI EndBlock cfiCond714
        CFI EndBlock cfiCond715
        CFI EndBlock cfiCond716
        CFI EndBlock cfiPicker717

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine76:
        CFI Block cfiCond718 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_281
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond719 Using cfiCommon0
        CFI (cfiCond719) NoFunction
        CFI (cfiCond719) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_282
        CFI (cfiCond719) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond719) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond719) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond719) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond719) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond719) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond719) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond719) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond719) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond719) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond719) CFA_SP SP+0
        CFI (cfiCond719) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond720 Using cfiCommon0
        CFI (cfiCond720) NoFunction
        CFI (cfiCond720) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_283
        CFI (cfiCond720) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond720) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond720) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond720) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond720) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond720) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond720) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond720) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond720) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond720) CFA_SP SP+0
        CFI (cfiCond720) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond721 Using cfiCommon0
        CFI (cfiCond721) NoFunction
        CFI (cfiCond721) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_287
        CFI (cfiCond721) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond721) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond721) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond721) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond721) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond721) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond721) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond721) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond721) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond721) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond721) CFA_SP SP+0
        CFI (cfiCond721) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond722 Using cfiCommon0
        CFI (cfiCond722) NoFunction
        CFI (cfiCond722) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_288
        CFI (cfiCond722) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond722) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond722) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond722) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond722) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond722) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond722) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond722) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond722) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond722) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond722) CFA_SP SP+0
        CFI (cfiCond722) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond723 Using cfiCommon0
        CFI (cfiCond723) NoFunction
        CFI (cfiCond723) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_289
        CFI (cfiCond723) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond723) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond723) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond723) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond723) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond723) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond723) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond723) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond723) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond723) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond723) CFA_SP SP+0
        CFI (cfiCond723) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker724 Using cfiCommon1
        CFI (cfiPicker724) NoFunction
        CFI (cfiPicker724) Picker
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_293:
        RET
        CFI EndBlock cfiCond718
        CFI EndBlock cfiCond719
        CFI EndBlock cfiCond720
        CFI EndBlock cfiCond721
        CFI EndBlock cfiCond722
        CFI EndBlock cfiCond723
        CFI EndBlock cfiPicker724

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine97:
        CFI Block cfiCond725 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_7
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond726 Using cfiCommon0
        CFI (cfiCond726) NoFunction
        CFI (cfiCond726) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_8
        CFI (cfiCond726) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond726) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond726) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond726) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond726) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond726) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond726) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond726) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond726) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond726) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond726) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond726) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond726) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond726) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond726) CFA_SP SP+0
        CFI (cfiCond726) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond727 Using cfiCommon0
        CFI (cfiCond727) NoFunction
        CFI (cfiCond727) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_9
        CFI (cfiCond727) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond727) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond727) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond727) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond727) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond727) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond727) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond727) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond727) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond727) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond727) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond727) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond727) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond727) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond727) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond727) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond727) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond727) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond727) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond727) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond727) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond727) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond727) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond727) CFA_SP SP+0
        CFI (cfiCond727) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond728 Using cfiCommon0
        CFI (cfiCond728) NoFunction
        CFI (cfiCond728) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_5
        CFI (cfiCond728) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond728) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond728) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond728) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond728) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond728) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond728) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond728) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond728) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond728) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond728) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond728) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond728) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond728) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond728) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond728) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond728) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond728) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond728) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond728) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond728) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond728) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond728) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond728) CFA_SP SP+0
        CFI (cfiCond728) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond729 Using cfiCommon0
        CFI (cfiCond729) NoFunction
        CFI (cfiCond729) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_6
        CFI (cfiCond729) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond729) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond729) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond729) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond729) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond729) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond729) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond729) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond729) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond729) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond729) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond729) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond729) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond729) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond729) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond729) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond729) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond729) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond729) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond729) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond729) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond729) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond729) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond729) CFA_SP SP+0
        CFI (cfiCond729) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond730 Using cfiCommon0
        CFI (cfiCond730) NoFunction
        CFI (cfiCond730) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_281
        CFI (cfiCond730) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond730) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond730) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond730) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond730) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond730) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond730) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond730) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond730) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond730) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond730) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond730) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond730) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond730) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond730) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond730) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond730) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond730) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond730) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond730) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond730) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond730) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond730) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond730) CFA_SP SP+0
        CFI (cfiCond730) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond731 Using cfiCommon0
        CFI (cfiCond731) NoFunction
        CFI (cfiCond731) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_282
        CFI (cfiCond731) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond731) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond731) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond731) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond731) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond731) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond731) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond731) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond731) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond731) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond731) CFA_SP SP+0
        CFI (cfiCond731) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond732 Using cfiCommon0
        CFI (cfiCond732) NoFunction
        CFI (cfiCond732) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_283
        CFI (cfiCond732) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond732) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond732) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond732) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond732) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond732) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond732) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond732) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond732) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond732) CFA_SP SP+0
        CFI (cfiCond732) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond733 Using cfiCommon0
        CFI (cfiCond733) NoFunction
        CFI (cfiCond733) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_287
        CFI (cfiCond733) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond733) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond733) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond733) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond733) CFA_SP SP+0
        CFI (cfiCond733) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond734 Using cfiCommon0
        CFI (cfiCond734) NoFunction
        CFI (cfiCond734) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_288
        CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond734) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond734) CFA_SP SP+0
        CFI (cfiCond734) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond735 Using cfiCommon0
        CFI (cfiCond735) NoFunction
        CFI (cfiCond735) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_289
        CFI (cfiCond735) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond735) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond735) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond735) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond735) CFA_SP SP+0
        CFI (cfiCond735) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker736 Using cfiCommon1
        CFI (cfiPicker736) NoFunction
        CFI (cfiPicker736) Picker
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_295:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond725
        CFI EndBlock cfiCond726
        CFI EndBlock cfiCond727
        CFI EndBlock cfiCond728
        CFI EndBlock cfiCond729
        CFI EndBlock cfiCond730
        CFI EndBlock cfiCond731
        CFI EndBlock cfiCond732
        CFI EndBlock cfiCond733
        CFI EndBlock cfiCond734
        CFI EndBlock cfiCond735
        CFI EndBlock cfiPicker736

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
        CFI Block cfiCond737 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_5
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond738 Using cfiCommon0
        CFI (cfiCond738) NoFunction
        CFI (cfiCond738) Conditional ??CrossCallReturnLabel_6
        CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond738) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond738) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond738) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond738) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond738) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond738) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond738) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond738) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond738) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond738) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond738) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond738) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond738) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond738) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond738) CFA_SP SP+0
        CFI (cfiCond738) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker739 Using cfiCommon1
        CFI (cfiPicker739) NoFunction
        CFI (cfiPicker739) Picker
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_110:
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond737
        CFI EndBlock cfiCond738
        CFI EndBlock cfiPicker739

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
        CFI Block cfiCond740 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond741 Using cfiCommon0
        CFI (cfiCond741) NoFunction
        CFI (cfiCond741) Conditional ??CrossCallReturnLabel_3
        CFI (cfiCond741) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond741) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond741) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond741) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond741) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond741) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond741) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond741) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond741) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond741) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond741) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond741) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond741) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond741) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond741) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond741) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond741) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond741) CFA_SP SP+0
        CFI (cfiCond741) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond742 Using cfiCommon0
        CFI (cfiCond742) NoFunction
        CFI (cfiCond742) Conditional ??CrossCallReturnLabel_4
        CFI (cfiCond742) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond742) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond742) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond742) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond742) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond742) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond742) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond742) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond742) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond742) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond742) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond742) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond742) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond742) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond742) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond742) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond742) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond742) CFA_SP SP+0
        CFI (cfiCond742) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker743 Using cfiCommon1
        CFI (cfiPicker743) NoFunction
        CFI (cfiPicker743) Picker
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_114:
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_265:
        RET
        CFI EndBlock cfiCond740
        CFI EndBlock cfiCond741
        CFI EndBlock cfiCond742
        CFI EndBlock cfiPicker743

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
        CFI Block cfiCond744 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond745 Using cfiCommon0
        CFI (cfiCond745) NoFunction
        CFI (cfiCond745) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond745) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond745) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond745) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond745) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond745) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond745) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond745) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond745) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond745) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond745) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond745) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond745) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond745) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond745) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond745) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond745) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond745) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond745) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond745) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond745) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond745) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond745) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond745) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond745) CFA_SP SP+0
        CFI (cfiCond745) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker746 Using cfiCommon1
        CFI (cfiPicker746) NoFunction
        CFI (cfiPicker746) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_285:
        RET
        CFI EndBlock cfiCond744
        CFI EndBlock cfiCond745
        CFI EndBlock cfiPicker746

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine79:
        CFI Block cfiCond747 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_25
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond748 Using cfiCommon0
        CFI (cfiCond748) NoFunction
        CFI (cfiCond748) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_26
        CFI (cfiCond748) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond748) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond748) CFA_SP SP+-5
        CFI (cfiCond748) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond749 Using cfiCommon0
        CFI (cfiCond749) NoFunction
        CFI (cfiCond749) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_27
        CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond749) CFA_SP SP+0
        CFI (cfiCond749) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond750 Using cfiCommon0
        CFI (cfiCond750) NoFunction
        CFI (cfiCond750) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_0
        CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond750) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond750) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond750) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond750) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond750) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond750) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond750) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond750) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond750) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond750) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond750) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond750) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond750) CFA_SP SP+0
        CFI (cfiCond750) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond751 Using cfiCommon0
        CFI (cfiCond751) NoFunction
        CFI (cfiCond751) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_1
        CFI (cfiCond751) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond751) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond751) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond751) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond751) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond751) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond751) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond751) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond751) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond751) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond751) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond751) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond751) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond751) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond751) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond751) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond751) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond751) CFA_SP SP+0
        CFI (cfiCond751) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker752 Using cfiCommon1
        CFI (cfiPicker752) NoFunction
        CFI (cfiPicker752) Picker
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        CFI EndBlock cfiCond747
        CFI EndBlock cfiCond748
        CFI EndBlock cfiCond749
        CFI EndBlock cfiCond750
        CFI EndBlock cfiCond751
        CFI EndBlock cfiPicker752
        REQUIRE ??Subroutine132_0
        ; // Fall through to label ??Subroutine132_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine132_0:
        CFI Block cfiCond753 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_10
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond754 Using cfiCommon0
        CFI (cfiCond754) NoFunction
        CFI (cfiCond754) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_11
        CFI (cfiCond754) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond754) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond754) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond754) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond754) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond754) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond754) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond754) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond754) CFA_SP SP+0
        CFI (cfiCond754) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond755 Using cfiCommon0
        CFI (cfiCond755) NoFunction
        CFI (cfiCond755) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_25
        CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond755) CFA_SP SP+0
        CFI (cfiCond755) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond756 Using cfiCommon0
        CFI (cfiCond756) NoFunction
        CFI (cfiCond756) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_26
        CFI (cfiCond756) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond756) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond756) CFA_SP SP+-5
        CFI (cfiCond756) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond757 Using cfiCommon0
        CFI (cfiCond757) NoFunction
        CFI (cfiCond757) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_27
        CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond757) CFA_SP SP+0
        CFI (cfiCond757) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond758 Using cfiCommon0
        CFI (cfiCond758) NoFunction
        CFI (cfiCond758) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_0
        CFI (cfiCond758) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond758) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond758) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond758) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond758) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond758) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond758) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond758) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond758) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond758) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond758) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond758) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond758) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond758) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond758) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond758) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond758) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond758) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond758) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond758) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond758) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond758) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond758) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond758) CFA_SP SP+0
        CFI (cfiCond758) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond759 Using cfiCommon0
        CFI (cfiCond759) NoFunction
        CFI (cfiCond759) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_1
        CFI (cfiCond759) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond759) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond759) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond759) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond759) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond759) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond759) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond759) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond759) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond759) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond759) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond759) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond759) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond759) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond759) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond759) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond759) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond759) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond759) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond759) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond759) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond759) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond759) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond759) CFA_SP SP+0
        CFI (cfiCond759) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker760 Using cfiCommon1
        CFI (cfiPicker760) NoFunction
        CFI (cfiPicker760) Picker
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_332:
        INC     DPTR
        RET
        CFI EndBlock cfiCond753
        CFI EndBlock cfiCond754
        CFI EndBlock cfiCond755
        CFI EndBlock cfiCond756
        CFI EndBlock cfiCond757
        CFI EndBlock cfiCond758
        CFI EndBlock cfiCond759
        CFI EndBlock cfiPicker760
// 2156 
// 2157 /**
// 2158  *  @brief      Trigger gyro/accel/compass self-test.
// 2159  *  On success/error, the self-test returns a mask representing the sensor(s)
// 2160  *  that failed. For each bit, a one (1) represents a "pass" case; conversely,
// 2161  *  a zero (0) indicates a failure.
// 2162  *
// 2163  *  \n The mask is defined as follows:
// 2164  *  \n Bit 0:   Gyro.
// 2165  *  \n Bit 1:   Accel.
// 2166  *  \n Bit 2:   Compass.
// 2167  *
// 2168  *  \n Currently, the hardware self-test is unsupported for MPU6500. However,
// 2169  *  this function can still be used to obtain the accel and gyro biases.
// 2170  *
// 2171  *  \n This function must be called with the device either face-up or face-down
// 2172  *  (z-axis is parallel to gravity).
// 2173  *  @param[out] gyro        Gyro biases in q16 format.
// 2174  *  @param[out] accel       Accel biases (if applicable) in q16 format.
// 2175  *  @return     Result mask (see above).
// 2176  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2177 int mpu_run_self_test(long *gyro, long *accel)
mpu_run_self_test:
        CFI Block cfiBlock761 Using cfiCommon0
        CFI Function mpu_run_self_test
        CODE
// 2178 {
        FUNCALL mpu_run_self_test, mpu_set_dmp_state
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_get_gyro_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_get_accel_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_get_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_get_sample_rate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_get_fifo_config
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, get_st_biases
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, get_st_biases
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, accel_self_test
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, gyro_self_test
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_set_gyro_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_set_accel_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_set_sample_rate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_set_sensors
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_configure_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_set_dmp_state
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 32
        MOV     A,#-0x20
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 48)
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
// 2179 #ifdef MPU6050
// 2180     const unsigned char tries = 2;
// 2181     long gyro_st[3], accel_st[3];
// 2182     unsigned char accel_result, gyro_result;
// 2183 #ifdef AK89xx_SECONDARY
// 2184     unsigned char compass_result;
// 2185 #endif
// 2186     int ii;
// 2187 #endif
// 2188     int result;
// 2189     unsigned char accel_fsr, fifo_sensors, sensors_on;
// 2190     unsigned short gyro_fsr, sample_rate, lpf;
// 2191     unsigned char dmp_was_on;
// 2192 
// 2193     if (st.chip_cfg.dmp_on) {
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JZ      ??mpu_run_self_test_0
// 2194         mpu_set_dmp_state(0);
        ; Setup parameters for call to function mpu_set_dmp_state
        MOV     R1,#0x0
        LCALL   ??mpu_set_dmp_state?relay
// 2195         dmp_was_on = 1;
        MOV     ?V0 + 0,#0x1
        SJMP    ??mpu_run_self_test_1
// 2196     } else
// 2197         dmp_was_on = 0;
??mpu_run_self_test_0:
        MOV     ?V0 + 0,#0x0
// 2198 
// 2199     /* Get initial settings. */
// 2200     mpu_get_gyro_fsr(&gyro_fsr);
??mpu_run_self_test_1:
        ; Setup parameters for call to function mpu_get_gyro_fsr
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_get_gyro_fsr?relay
// 2201     mpu_get_accel_fsr(&accel_fsr);
        ; Setup parameters for call to function mpu_get_accel_fsr
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_get_accel_fsr?relay
// 2202     mpu_get_lpf(&lpf);
        ; Setup parameters for call to function mpu_get_lpf
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_get_lpf?relay
// 2203     mpu_get_sample_rate(&sample_rate);
        ; Setup parameters for call to function mpu_get_sample_rate
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_get_sample_rate?relay
// 2204     sensors_on = st.chip_cfg.sensors;
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
// 2205     mpu_get_fifo_config(&fifo_sensors);
        ; Setup parameters for call to function mpu_get_fifo_config
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_get_fifo_config?relay
// 2206 
// 2207     /* For older chips, the self-test will be different. */
// 2208 #if defined MPU6050
// 2209     for (ii = 0; ii < tries; ii++)
        MOV     R6,#0x0
        MOV     R7,#0x0
// 2210         if (!get_st_biases(gyro, accel, 0))
??mpu_run_self_test_2:
        ; Setup parameters for call to function get_st_biases
        MOV     R1,#0x0
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_108:
        JZ      ??mpu_run_self_test_3
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_76:
        JC      ??mpu_run_self_test_2
// 2211             break;
// 2212     if (ii == tries) {
??mpu_run_self_test_3:
        MOV     A,#0x2
        XRL     A,R6
        JNZ     ??mpu_run_self_test_4
        MOV     A,R7
??mpu_run_self_test_4:
        JNZ     ??mpu_run_self_test_5
// 2213         /* If we reach this point, we most likely encountered an I2C error.
// 2214          * We'll just report an error for all three sensors.
// 2215          */
// 2216         result = 0;
??mpu_run_self_test_6:
        MOV     R6,#0x0
// 2217         goto restore;
        SJMP    ??mpu_run_self_test_7
// 2218     }
// 2219     for (ii = 0; ii < tries; ii++)
??mpu_run_self_test_5:
        MOV     R6,#0x0
        MOV     R7,#0x0
// 2220         if (!get_st_biases(gyro_st, accel_st, 1))
??mpu_run_self_test_8:
        ; Setup parameters for call to function get_st_biases
        MOV     R1,#0x1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_109:
        JZ      ??mpu_run_self_test_9
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_77:
        JC      ??mpu_run_self_test_8
// 2221             break;
// 2222     if (ii == tries) {
??mpu_run_self_test_9:
        MOV     A,#0x2
        XRL     A,R6
        JNZ     ??mpu_run_self_test_10
        MOV     A,R7
??mpu_run_self_test_10:
        JZ      ??mpu_run_self_test_6
// 2223         /* Again, probably an I2C error. */
// 2224         result = 0;
// 2225         goto restore;
// 2226     }
// 2227     accel_result = accel_self_test(accel, accel_st);
        ; Setup parameters for call to function accel_self_test
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??accel_self_test?relay
        MOV     A,R2
        MOV     ?V0 + 2,A
// 2228     gyro_result = gyro_self_test(gyro, gyro_st);
        ; Setup parameters for call to function gyro_self_test
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ??gyro_self_test?relay
// 2229 
// 2230     result = 0;
        MOV     R6,#0x0
// 2231     if (!gyro_result)
        MOV     A,R2
        JNZ     ??mpu_run_self_test_11
// 2232         result |= 0x01;
        INC     R6
// 2233     if (!accel_result)
??mpu_run_self_test_11:
        MOV     A,?V0 + 2
        JNZ     ??mpu_run_self_test_7
// 2234         result |= 0x02;
        MOV     A,#0x2
        ORL     A,R6
        MOV     R6,A
// 2235 
// 2236 #ifdef AK89xx_SECONDARY
// 2237     compass_result = compass_self_test();
// 2238     if (!compass_result)
// 2239         result |= 0x04;
// 2240 #endif
// 2241 restore:
// 2242 #elif defined MPU6500
// 2243     /* For now, this function will return a "pass" result for all three sensors
// 2244      * for compatibility with current test applications.
// 2245      */
// 2246     get_st_biases(gyro, accel, 0);
// 2247     result = 0x7;
// 2248 #endif
// 2249     /* Set to invalid values to ensure no I2C writes are skipped. */
// 2250     st.chip_cfg.gyro_fsr = 0xFF;
??mpu_run_self_test_7:
        LCALL   ?Subroutine47 & 0xFFFF
// 2251     st.chip_cfg.accel_fsr = 0xFF;
// 2252     st.chip_cfg.lpf = 0xFF;
// 2253     st.chip_cfg.sample_rate = 0xFFFF;
// 2254     st.chip_cfg.sensors = 0xFF;
// 2255     st.chip_cfg.fifo_enable = 0xFF;
// 2256     st.chip_cfg.clk_src = INV_CLK_PLL;
// 2257     mpu_set_gyro_fsr(gyro_fsr);
??CrossCallReturnLabel_60:
        ; Setup parameters for call to function mpu_set_gyro_fsr
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine42 & 0xFFFF
// 2258     mpu_set_accel_fsr(accel_fsr);
??CrossCallReturnLabel_52:
        ; Setup parameters for call to function mpu_set_accel_fsr
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??mpu_set_accel_fsr?relay
// 2259     mpu_set_lpf(lpf);
        ; Setup parameters for call to function mpu_set_lpf
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine43 & 0xFFFF
// 2260     mpu_set_sample_rate(sample_rate);
??CrossCallReturnLabel_54:
        ; Setup parameters for call to function mpu_set_sample_rate
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine35 & 0xFFFF
// 2261     mpu_set_sensors(sensors_on);
??CrossCallReturnLabel_28:
        ; Setup parameters for call to function mpu_set_sensors
        MOV     R1,?V0 + 1
        LCALL   ??mpu_set_sensors?relay
// 2262     mpu_configure_fifo(fifo_sensors);
        ; Setup parameters for call to function mpu_configure_fifo
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??mpu_configure_fifo?relay
// 2263 
// 2264     if (dmp_was_on)
        MOV     A,?V0 + 0
        MOV     C,0xE0 /* A   */.0
        JNC     ??mpu_run_self_test_12
// 2265         mpu_set_dmp_state(1);
        ; Setup parameters for call to function mpu_set_dmp_state
        MOV     R1,#0x1
        LCALL   ??mpu_set_dmp_state?relay
// 2266 
// 2267     return result;
??mpu_run_self_test_12:
        MOV     A,R6
        MOV     R2,A
        MOV     R3,#0x0
        MOV     A,#0x20
        CFI EndBlock cfiBlock761
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2
// 2268 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        CFI Block cfiBlock762 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Valid
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock762

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
        CFI Block cfiCond763 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_108
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond764 Using cfiCommon0
        CFI (cfiCond764) NoFunction
        CFI (cfiCond764) Conditional ??CrossCallReturnLabel_109
        CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond764) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond764) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond764) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond764) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond764) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond764) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond764) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond764) CFA_SP SP+0
        CFI (cfiCond764) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiPicker765 Using cfiCommon1
        CFI (cfiPicker765) NoFunction
        CFI (cfiPicker765) Picker
        LCALL   ??get_st_biases?relay
        MOV     ?V0 + 7,R3
        MOV     A,R2
        ORL     A,?V0 + 7
        RET
        CFI EndBlock cfiCond763
        CFI EndBlock cfiCond764
        CFI EndBlock cfiPicker765

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
        CFI Block cfiCond766 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_76
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond767 Using cfiCommon0
        CFI (cfiCond767) NoFunction
        CFI (cfiCond767) Conditional ??CrossCallReturnLabel_77
        CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond767) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond767) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond767) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond767) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond767) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond767) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond767) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond767) CFA_SP SP+0
        CFI (cfiCond767) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiPicker768 Using cfiCommon1
        CFI (cfiPicker768) NoFunction
        CFI (cfiPicker768) Picker
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_132:
        SUBB    A,#0x2
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_316:
        RET
        CFI EndBlock cfiCond766
        CFI EndBlock cfiCond767
        CFI EndBlock cfiPicker768

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine96:
        CFI Block cfiCond769 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_74
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond770 Using cfiCommon0
        CFI (cfiCond770) NoFunction
        CFI (cfiCond770) Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_75
        CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond770) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond770) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond770) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond770) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond770) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond770) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond770) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond770) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond770) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond770) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond770) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond770) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond770) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond770) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond770) CFA_SP SP+0
        CFI (cfiCond770) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond771 Using cfiCommon0
        CFI (cfiCond771) NoFunction
        CFI (cfiCond771) Conditional ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_76
        CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond771) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond771) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond771) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond771) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond771) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond771) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond771) CFA_SP SP+0
        CFI (cfiCond771) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond772 Using cfiCommon0
        CFI (cfiCond772) NoFunction
        CFI (cfiCond772) Conditional ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_77
        CFI (cfiCond772) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond772) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond772) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond772) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond772) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond772) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond772) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond772) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond772) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond772) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond772) CFA_SP SP+0
        CFI (cfiCond772) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiPicker773 Using cfiCommon1
        CFI (cfiPicker773) NoFunction
        CFI (cfiPicker773) Picker
        MOV     A,R6
        ADD     A,#0x1
        INC     R6
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        CLR     C
        MOV     A,R6
        RET
        CFI EndBlock cfiCond769
        CFI EndBlock cfiCond770
        CFI EndBlock cfiCond771
        CFI EndBlock cfiCond772
        CFI EndBlock cfiPicker773

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine94:
        CFI Block cfiCond774 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_74
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond775 Using cfiCommon0
        CFI (cfiCond775) NoFunction
        CFI (cfiCond775) Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_75
        CFI (cfiCond775) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond775) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond775) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond775) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond775) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond775) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond775) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond775) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond775) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond775) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond775) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond775) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond775) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond775) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond775) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond775) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond775) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond775) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond775) CFA_SP SP+0
        CFI (cfiCond775) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond776 Using cfiCommon0
        CFI (cfiCond776) NoFunction
        CFI (cfiCond776) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_76
        CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond776) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond776) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond776) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond776) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond776) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond776) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond776) CFA_SP SP+0
        CFI (cfiCond776) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond777 Using cfiCommon0
        CFI (cfiCond777) NoFunction
        CFI (cfiCond777) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_77
        CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond777) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond777) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond777) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond777) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond777) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond777) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond777) CFA_SP SP+0
        CFI (cfiCond777) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiPicker778 Using cfiCommon1
        CFI (cfiPicker778) NoFunction
        CFI (cfiPicker778) Picker
        MOV     A,R7
        CFI EndBlock cfiCond774
        CFI EndBlock cfiCond775
        CFI EndBlock cfiCond776
        CFI EndBlock cfiCond777
        CFI EndBlock cfiPicker778
        REQUIRE ??Subroutine133_0
        ; // Fall through to label ??Subroutine133_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine133_0:
        CFI Block cfiCond779 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_96
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond780 Using cfiCommon0
        CFI (cfiCond780) NoFunction
        CFI (cfiCond780) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_97
        CFI (cfiCond780) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond780) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond780) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond780) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond780) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond780) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond780) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond780) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond780) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond780) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond780) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond780) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond780) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond780) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond780) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond780) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond780) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond780) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond780) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond780) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond780) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond780) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond780) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond780) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond780) CFA_SP SP+0
        CFI (cfiCond780) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond781 Using cfiCommon0
        CFI (cfiCond781) NoFunction
        CFI (cfiCond781) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_312
        CFI (cfiCond781) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond781) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond781) CFA_SP SP+-5
        CFI Block cfiCond782 Using cfiCommon0
        CFI (cfiCond782) NoFunction
        CFI (cfiCond782) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_313
        CFI (cfiCond782) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond782) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond782) CFA_SP SP+-5
        CFI Block cfiCond783 Using cfiCommon0
        CFI (cfiCond783) NoFunction
        CFI (cfiCond783) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_311
        CFI (cfiCond783) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond783) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond783) CFA_SP SP+-5
        CFI Block cfiCond784 Using cfiCommon0
        CFI (cfiCond784) NoFunction
        CFI (cfiCond784) Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_74
        CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond784) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond784) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond784) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond784) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond784) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond784) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond784) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond784) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond784) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond784) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond784) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond784) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond784) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond784) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond784) CFA_SP SP+0
        CFI (cfiCond784) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond785 Using cfiCommon0
        CFI (cfiCond785) NoFunction
        CFI (cfiCond785) Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_75
        CFI (cfiCond785) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond785) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond785) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond785) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond785) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond785) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond785) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond785) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond785) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond785) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond785) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond785) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond785) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond785) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond785) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond785) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond785) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond785) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond785) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond785) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond785) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond785) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond785) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond785) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond785) CFA_SP SP+0
        CFI (cfiCond785) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond786 Using cfiCommon0
        CFI (cfiCond786) NoFunction
        CFI (cfiCond786) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_76
        CFI (cfiCond786) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond786) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond786) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond786) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond786) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond786) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond786) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond786) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond786) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond786) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond786) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond786) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond786) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond786) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond786) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond786) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond786) CFA_SP SP+0
        CFI (cfiCond786) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond787 Using cfiCommon0
        CFI (cfiCond787) NoFunction
        CFI (cfiCond787) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_77
        CFI (cfiCond787) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond787) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond787) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond787) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond787) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond787) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond787) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond787) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond787) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond787) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond787) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond787) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond787) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond787) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond787) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond787) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond787) CFA_SP SP+0
        CFI (cfiCond787) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiPicker788 Using cfiCommon1
        CFI (cfiPicker788) NoFunction
        CFI (cfiPicker788) Picker
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        RET
        CFI EndBlock cfiCond779
        CFI EndBlock cfiCond780
        CFI EndBlock cfiCond781
        CFI EndBlock cfiCond782
        CFI EndBlock cfiCond783
        CFI EndBlock cfiCond784
        CFI EndBlock cfiCond785
        CFI EndBlock cfiCond786
        CFI EndBlock cfiCond787
        CFI EndBlock cfiPicker788
// 2269 
// 2270 /**
// 2271  *  @brief      Write to the DMP memory.
// 2272  *  This function prevents I2C writes past the bank boundaries. The DMP memory
// 2273  *  is only accessible when the chip is awake.
// 2274  *  @param[in]  mem_addr    Memory location (bank << 8 | start address)
// 2275  *  @param[in]  length      Number of bytes to write.
// 2276  *  @param[in]  data        Bytes to write to memory.
// 2277  *  @return     0 if successful.
// 2278  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2279 int mpu_write_mem(unsigned short mem_addr, unsigned short length,
mpu_write_mem:
        CFI Block cfiBlock789 Using cfiCommon0
        CFI Function mpu_write_mem
        CODE
// 2280         unsigned char *data)
// 2281 {
        FUNCALL mpu_write_mem, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_write_mem, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
// 2282     unsigned char tmp[2];
// 2283 
// 2284     if (!data)
        MOV     A,R6
        ORL     A,R7
        JNZ     ??mpu_write_mem_0
// 2285         return -1;
??mpu_write_mem_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_write_mem_2
// 2286     if (!st.chip_cfg.sensors)
??mpu_write_mem_0:
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JZ      ??mpu_write_mem_1
// 2287         return -1;
// 2288 
// 2289     tmp[0] = (unsigned char)(mem_addr >> 8);
        MOV     A,R3
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 2290     tmp[1] = (unsigned char)(mem_addr & 0xFF);
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine19 & 0xFFFF
// 2291 
// 2292     /* Check bank boundaries. */
// 2293     if (tmp[1] + length > st.hw->bank_size)
??CrossCallReturnLabel_287:
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_58:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,R0
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R1
        JC      ??mpu_write_mem_1
// 2294         return -1;
// 2295 
// 2296     if (i2c_write(st.hw->addr, st.reg->bank_sel, 2, tmp))
        ; Setup parameters for call to function MPU_Write_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x2
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x18
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_156:
        JNZ     ??mpu_write_mem_1
// 2297         return -1;
// 2298     if (i2c_write(st.hw->addr, st.reg->mem_r_w, length, data))
        ; Setup parameters for call to function MPU_Write_Len
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R3,?V0 + 0
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x15
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_157:
        JNZ     ??mpu_write_mem_1
// 2299         return -1;
// 2300     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
        CFI EndBlock cfiBlock789
??mpu_write_mem_2:
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 2301 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
        CFI Block cfiBlock790 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
        SJMP    ??Subroutine135_0
        CFI EndBlock cfiBlock790

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
        CFI Block cfiCond791 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_287
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond792 Using cfiCommon0
        CFI (cfiCond792) NoFunction
        CFI (cfiCond792) Conditional ??CrossCallReturnLabel_288
        CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond792) CFA_SP SP+0
        CFI (cfiCond792) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker793 Using cfiCommon1
        CFI (cfiPicker793) NoFunction
        CFI (cfiPicker793) Picker
        MOV     A,R2
        MOVX    @DPTR,A
        MOV     DPTR,#st + 2
        CFI EndBlock cfiCond791
        CFI EndBlock cfiCond792
        CFI EndBlock cfiPicker793
        REQUIRE ??Subroutine134_0
        ; // Fall through to label ??Subroutine134_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine134_0:
        CFI Block cfiCond794 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_289
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond795 Using cfiCommon0
        CFI (cfiCond795) NoFunction
        CFI (cfiCond795) Conditional ??CrossCallReturnLabel_287
        CFI (cfiCond795) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond795) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond795) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond795) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond795) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond795) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond795) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond795) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond795) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond795) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond795) CFA_SP SP+0
        CFI (cfiCond795) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond796 Using cfiCommon0
        CFI (cfiCond796) NoFunction
        CFI (cfiCond796) Conditional ??CrossCallReturnLabel_288
        CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond796) CFA_SP SP+0
        CFI (cfiCond796) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker797 Using cfiCommon1
        CFI (cfiPicker797) NoFunction
        CFI (cfiPicker797) Picker
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_291:
        INC     DPTR
        RET
        CFI EndBlock cfiCond794
        CFI EndBlock cfiCond795
        CFI EndBlock cfiCond796
        CFI EndBlock cfiPicker797

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiBlock798 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
        CFI EndBlock cfiBlock798
        REQUIRE ??Subroutine135_0
        ; // Fall through to label ??Subroutine135_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine135_0:
        CFI Block cfiBlock799 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock799
        REQUIRE ??Subroutine136_0
        ; // Fall through to label ??Subroutine136_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine136_0:
        CFI Block cfiBlock800 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock800
// 2302 
// 2303 /**
// 2304  *  @brief      Read from the DMP memory.
// 2305  *  This function prevents I2C reads past the bank boundaries. The DMP memory
// 2306  *  is only accessible when the chip is awake.
// 2307  *  @param[in]  mem_addr    Memory location (bank << 8 | start address)
// 2308  *  @param[in]  length      Number of bytes to read.
// 2309  *  @param[out] data        Bytes read from memory.
// 2310  *  @return     0 if successful.
// 2311  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2312 int mpu_read_mem(unsigned short mem_addr, unsigned short length,
mpu_read_mem:
        CFI Block cfiBlock801 Using cfiCommon0
        CFI Function mpu_read_mem
        CODE
// 2313         unsigned char *data)
// 2314 {
        FUNCALL mpu_read_mem, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_read_mem, MPU_Read_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
// 2315     unsigned char tmp[2];
// 2316 
// 2317     if (!data)
        MOV     A,R6
        ORL     A,R7
        JNZ     ??mpu_read_mem_0
// 2318         return -1;
??mpu_read_mem_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_read_mem_2
// 2319     if (!st.chip_cfg.sensors)
??mpu_read_mem_0:
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JZ      ??mpu_read_mem_1
// 2320         return -1;
// 2321 
// 2322     tmp[0] = (unsigned char)(mem_addr >> 8);
        MOV     A,R3
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 2323     tmp[1] = (unsigned char)(mem_addr & 0xFF);
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine19 & 0xFFFF
// 2324 
// 2325     /* Check bank boundaries. */
// 2326     if (tmp[1] + length > st.hw->bank_size)
??CrossCallReturnLabel_288:
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_59:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,R0
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R1
        JC      ??mpu_read_mem_1
// 2327         return -1;
// 2328 
// 2329     if (i2c_write(st.hw->addr, st.reg->bank_sel, 2, tmp))
        ; Setup parameters for call to function MPU_Write_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x2
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x18
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_158:
        JNZ     ??mpu_read_mem_1
// 2330         return -1;
// 2331     if (i2c_read(st.hw->addr, st.reg->mem_r_w, length, data))
        ; Setup parameters for call to function MPU_Read_Len
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R3,?V0 + 0
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x15
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_208:
        JNZ     ??mpu_read_mem_1
// 2332         return -1;
// 2333     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_read_mem_2:
        LJMP    ?Subroutine7 & 0xFFFF
        CFI EndBlock cfiBlock801
// 2334 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
        CFI Block cfiCond802 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_58
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-2
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond803 Using cfiCommon0
        CFI (cfiCond803) NoFunction
        CFI (cfiCond803) Conditional ??CrossCallReturnLabel_59
        CFI (cfiCond803) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond803) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond803) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond803) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond803) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond803) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond803) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond803) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond803) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond803) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond803) CFA_SP SP+-2
        CFI (cfiCond803) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker804 Using cfiCommon1
        CFI (cfiPicker804) NoFunction
        CFI (cfiPicker804) Picker
        MOVX    A,@DPTR
        ADD     A,?V0 + 0
        MOV     R0,A
        CLR     A
        ADDC    A,?V0 + 1
        MOV     R1,A
        RET
        CFI EndBlock cfiCond802
        CFI EndBlock cfiCond803
        CFI EndBlock cfiPicker804
// 2335 
// 2336 /**
// 2337  *  @brief      Load and verify DMP image.
// 2338  *  @param[in]  length      Length of DMP image.
// 2339  *  @param[in]  firmware    DMP code.
// 2340  *  @param[in]  start_addr  Starting address of DMP code memory.
// 2341  *  @param[in]  sample_rate Fixed sampling rate used when DMP is enabled.
// 2342  *  @return     0 if successful.
// 2343  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2344 int mpu_load_firmware(unsigned short length, const unsigned char *firmware,
mpu_load_firmware:
        CFI Block cfiBlock805 Using cfiCommon0
        CFI Function mpu_load_firmware
        CODE
// 2345     unsigned short start_addr, unsigned short sample_rate)
// 2346 {
        FUNCALL mpu_load_firmware, mpu_write_mem
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_load_firmware, mpu_read_mem
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_load_firmware, memcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_load_firmware, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 18
        MOV     A,#-0x12
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 4,R4
        MOV     ?V0 + 5,R5
        MOV     A,#0x26
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
        MOV     A,#0x28
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
// 2347     unsigned short ii;
// 2348     unsigned short this_write;
// 2349     /* Must divide evenly into st.hw->bank_size to avoid bank crossings. */
// 2350 #define LOAD_CHUNK  (16)
// 2351     unsigned char cur[LOAD_CHUNK], tmp[2];
// 2352 
// 2353     if (st.chip_cfg.dmp_loaded)
        MOV     DPTR,#st + 30
        MOVX    A,@DPTR
        JZ      ??mpu_load_firmware_0
// 2354         /* DMP should only be loaded once. */
// 2355         return -1;
??mpu_load_firmware_1:
        MOV     R2,#-0x1
??mpu_load_firmware_2:
        MOV     R3,#-0x1
        LJMP    ??CrossCallReturnLabel_299 & 0xFFFF
// 2356 
// 2357     if (!firmware)
??mpu_load_firmware_0:
        MOV     A,R4
        ORL     A,?V0 + 5
        JZ      ??mpu_load_firmware_1
// 2358         return -1;
// 2359     for (ii = 0; ii < length; ii += this_write) {
        MOV     R6,#0x0
        MOV     R7,#0x0
        SJMP    ??mpu_load_firmware_3
??mpu_load_firmware_4:
        MOV     A,R6
        ADD     A,?V0 + 10
        MOV     R6,A
        MOV     A,R7
        ADDC    A,?V0 + 11
        MOV     R7,A
??mpu_load_firmware_3:
        CLR     C
        MOV     A,R6
        SUBB    A,?V0 + 0
        MOV     A,R7
        SUBB    A,?V0 + 1
        JC      $+5
        LJMP    ??mpu_load_firmware_5 & 0xFFFF
// 2360         this_write = min(LOAD_CHUNK, length - ii);
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,R6
        MOV     R0,A
        MOV     A,?V0 + 1
        SUBB    A,R7
        MOV     R1,A
        CLR     C
        MOV     A,R0
        SUBB    A,#0x11
        MOV     A,R1
        SUBB    A,#0x0
        JC      ??mpu_load_firmware_6
        MOV     ?V0 + 10,#0x10
        MOV     ?V0 + 11,#0x0
        SJMP    ??mpu_load_firmware_7
??mpu_load_firmware_6:
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,R6
        MOV     ?V0 + 10,A
        MOV     A,?V0 + 1
        SUBB    A,R7
        MOV     ?V0 + 11,A
// 2361         if (mpu_write_mem(ii, this_write, (unsigned char*)&firmware[ii]))
??mpu_load_firmware_7:
        ; Setup parameters for call to function mpu_write_mem
        MOV     A,?V0 + 4
        ADD     A,R6
        MOV     ?V0 + 8,A
        MOV     A,?V0 + 5
        ADDC    A,R7
        MOV     ?V0 + 9,A
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 40)
        MOV     R4,?V0 + 10
        MOV     R5,?V0 + 11
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??mpu_write_mem?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     ?V0 + 9,R3
        MOV     A,R2
        ORL     A,?V0 + 9
        JNZ     ??mpu_load_firmware_1
// 2362             return -1;
// 2363         if (mpu_read_mem(ii, this_write, cur))
        ; Setup parameters for call to function mpu_read_mem
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 8,DPL
        MOV     ?V0 + 9,DPH
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 40)
        MOV     R4,?V0 + 10
        MOV     R5,?V0 + 11
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??mpu_read_mem?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     ?V0 + 9,R3
        MOV     A,R2
        ORL     A,?V0 + 9
        JZ      $+5
        LJMP    ??mpu_load_firmware_1 & 0xFFFF
// 2364             return -1;
// 2365         if (memcmp(firmware+ii, cur, this_write))
        ; Setup parameters for call to function memcmp
        MOV     R0,#?V0 + 10
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 40)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,?V0 + 4
        ADD     A,R6
        MOV     R2,A
        MOV     A,?V0 + 5
        ADDC    A,R7
        MOV     R3,A
        LCALL   ??memcmp?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     ?V0 + 9,R3
        MOV     A,R2
        ORL     A,?V0 + 9
        JNZ     $+5
        LJMP    ??mpu_load_firmware_4 & 0xFFFF
// 2366             return -2;
        MOV     R2,#-0x2
        LJMP    ??mpu_load_firmware_2 & 0xFFFF
// 2367     }
// 2368 
// 2369     /* Set program start address. */
// 2370     tmp[0] = start_addr >> 8;
??mpu_load_firmware_5:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,?V0 + 3
        MOVX    @DPTR,A
// 2371     tmp[1] = start_addr & 0xFF;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 2
        LCALL   ?Subroutine49 & 0xFFFF
// 2372     if (i2c_write(st.hw->addr, st.reg->prgm_start_h, 2, tmp))
??CrossCallReturnLabel_62:
        MOVX    A,@DPTR
        ADD     A,#0x1a
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_159:
        JZ      $+5
        LJMP    ??mpu_load_firmware_1 & 0xFFFF
// 2373         return -1;
// 2374 
// 2375     st.chip_cfg.dmp_loaded = 1;
        MOV     DPTR,#st + 30
        MOV     A,#0x1
        MOVX    @DPTR,A
// 2376     st.chip_cfg.dmp_sample_rate = sample_rate;
        INC     DPTR
        MOV     A,?V0 + 6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 7
        LCALL   ??Subroutine137_0 & 0xFFFF
// 2377     return 0;
??CrossCallReturnLabel_299:
        MOV     A,#0x12
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock805
// 2378 }
// 2379 
// 2380 /**
// 2381  *  @brief      Enable/disable DMP support.
// 2382  *  @param[in]  enable  1 to turn on the DMP.
// 2383  *  @return     0 if successful.
// 2384  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2385 int mpu_set_dmp_state(unsigned char enable)
mpu_set_dmp_state:
        CFI Block cfiBlock806 Using cfiCommon0
        CFI Function mpu_set_dmp_state
        CODE
// 2386 {
        FUNCALL mpu_set_dmp_state, set_int_enable
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, mpu_set_bypass
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, mpu_set_sample_rate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, set_int_enable
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, mpu_reset_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, set_int_enable
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, mpu_reset_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,R1
        MOV     R6,A
// 2387     unsigned char tmp;
// 2388     if (st.chip_cfg.dmp_on == enable)
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??mpu_set_dmp_state_0
// 2389         return 0;
??mpu_set_dmp_state_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_set_dmp_state_2:
        LJMP    ?Subroutine0 & 0xFFFF
// 2390 
// 2391     if (enable) {
??mpu_set_dmp_state_0:
        MOV     A,R6
        JZ      ??mpu_set_dmp_state_3
// 2392         if (!st.chip_cfg.dmp_loaded)
        INC     DPTR
        MOVX    A,@DPTR
        JNZ     ??mpu_set_dmp_state_4
// 2393             return -1;
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_set_dmp_state_2
// 2394         /* Disable data ready interrupt. */
// 2395         set_int_enable(0);
??mpu_set_dmp_state_4:
        ; Setup parameters for call to function set_int_enable
        MOV     R1,#0x0
        LCALL   ??set_int_enable?relay
// 2396         /* Disable bypass mode. */
// 2397         mpu_set_bypass(0);
        ; Setup parameters for call to function mpu_set_bypass
        MOV     R1,#0x0
        LCALL   ??mpu_set_bypass?relay
// 2398         /* Keep constant sample rate, FIFO rate controlled by DMP. */
// 2399         mpu_set_sample_rate(st.chip_cfg.dmp_sample_rate);
        ; Setup parameters for call to function mpu_set_sample_rate
        MOV     DPTR,#st + 31
        LCALL   ?Subroutine35 & 0xFFFF
// 2400         /* Remove FIFO elements. */
// 2401         tmp = 0;
??CrossCallReturnLabel_29:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        LCALL   ?Subroutine26 & 0xFFFF
// 2402         i2c_write(st.hw->addr, 0x23, 1, &tmp);
// 2403         st.chip_cfg.dmp_on = 1;
??CrossCallReturnLabel_18:
        MOV     A,#0x1
        MOVX    @DPTR,A
// 2404         /* Enable DMP interrupt. */
// 2405         set_int_enable(1);
        ; Setup parameters for call to function set_int_enable
        MOV     R1,A
        LCALL   ??set_int_enable?relay
// 2406         mpu_reset_fifo();
        ; Setup parameters for call to function mpu_reset_fifo
??mpu_set_dmp_state_5:
        LCALL   ??mpu_reset_fifo?relay
        SJMP    ??mpu_set_dmp_state_1
// 2407     } else {
// 2408         /* Disable DMP interrupt. */
// 2409         set_int_enable(0);
??mpu_set_dmp_state_3:
        ; Setup parameters for call to function set_int_enable
        MOV     R1,#0x0
        LCALL   ??set_int_enable?relay
// 2410         /* Restore FIFO settings. */
// 2411         tmp = st.chip_cfg.fifo_enable;
        MOV     DPTR,#st + 11
        LCALL   ??Subroutine121_0 & 0xFFFF
??CrossCallReturnLabel_253:
        LCALL   ?Subroutine26 & 0xFFFF
// 2412         i2c_write(st.hw->addr, 0x23, 1, &tmp);
// 2413         st.chip_cfg.dmp_on = 0;
??CrossCallReturnLabel_19:
        CLR     A
        MOVX    @DPTR,A
// 2414         mpu_reset_fifo();
        ; Setup parameters for call to function mpu_reset_fifo
        SJMP    ??mpu_set_dmp_state_5
        CFI EndBlock cfiBlock806
// 2415     }
// 2416     return 0;
// 2417 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
        CFI Block cfiCond807 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_28
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond808 Using cfiCommon0
        CFI (cfiCond808) NoFunction
        CFI (cfiCond808) Conditional ??CrossCallReturnLabel_29
        CFI (cfiCond808) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond808) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond808) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond808) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond808) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond808) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond808) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond808) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond808) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond808) CFA_SP SP+0
        CFI (cfiCond808) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond809 Using cfiCommon0
        CFI (cfiCond809) NoFunction
        CFI (cfiCond809) Conditional ??CrossCallReturnLabel_30
        CFI (cfiCond809) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond809) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond809) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond809) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond809) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond809) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond809) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond809) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond809) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond809) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond809) CFA_SP SP+0
        CFI (cfiCond809) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker810 Using cfiCommon1
        CFI (cfiPicker810) NoFunction
        CFI (cfiPicker810) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_125:
        LCALL   ??mpu_set_sample_rate?relay
        RET
        CFI EndBlock cfiCond807
        CFI EndBlock cfiCond808
        CFI EndBlock cfiCond809
        CFI EndBlock cfiPicker810

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
        CFI Block cfiCond811 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_18
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond812 Using cfiCommon0
        CFI (cfiCond812) NoFunction
        CFI (cfiCond812) Conditional ??CrossCallReturnLabel_19
        CFI (cfiCond812) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond812) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond812) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond812) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond812) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond812) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond812) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond812) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond812) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond812) CFA_SP SP+0
        CFI (cfiCond812) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker813 Using cfiCommon1
        CFI (cfiPicker813) NoFunction
        CFI (cfiPicker813) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_309:
        MOV     R2,#0x23
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_261:
        LCALL   ??MPU_Write_Len?relay
        MOV     DPTR,#st + 29
        RET
        CFI EndBlock cfiCond811
        CFI EndBlock cfiCond812
        CFI EndBlock cfiPicker813

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine82:
        CFI Block cfiCond814 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_256
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond815 Using cfiCommon0
        CFI (cfiCond815) NoFunction
        CFI (cfiCond815) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_257
        CFI (cfiCond815) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond815) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond815) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond815) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond815) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond815) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond815) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond815) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond815) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond815) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond815) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond815) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond815) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond815) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond815) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond815) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond815) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond815) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond815) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond815) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond815) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond815) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond815) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond815) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond815) CFA_SP SP+0
        CFI (cfiCond815) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond816 Using cfiCommon0
        CFI (cfiCond816) NoFunction
        CFI (cfiCond816) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_258
        CFI (cfiCond816) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond816) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond816) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond816) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond816) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond816) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond816) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond816) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond816) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond816) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond816) CFA_SP SP+0
        CFI (cfiCond816) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond817 Using cfiCommon0
        CFI (cfiCond817) NoFunction
        CFI (cfiCond817) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_259
        CFI (cfiCond817) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond817) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond817) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond817) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond817) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond817) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond817) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond817) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond817) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond817) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond817) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond817) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond817) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond817) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond817) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond817) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond817) CFA_SP SP+0
        CFI (cfiCond817) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond818 Using cfiCommon0
        CFI (cfiCond818) NoFunction
        CFI (cfiCond818) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_260
        CFI (cfiCond818) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond818) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond818) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond818) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond818) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond818) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond818) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond818) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond818) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond818) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond818) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond818) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond818) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond818) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond818) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond818) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond818) CFA_SP SP+0
        CFI (cfiCond818) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond819 Using cfiCommon0
        CFI (cfiCond819) NoFunction
        CFI (cfiCond819) Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_18
        CFI (cfiCond819) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond819) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond819) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond819) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond819) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond819) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond819) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond819) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond819) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond819) CFA_SP SP+0
        CFI (cfiCond819) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond820 Using cfiCommon0
        CFI (cfiCond820) NoFunction
        CFI (cfiCond820) Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_19
        CFI (cfiCond820) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond820) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond820) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond820) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond820) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond820) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond820) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond820) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond820) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond820) CFA_SP SP+0
        CFI (cfiCond820) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker821 Using cfiCommon1
        CFI (cfiPicker821) NoFunction
        CFI (cfiPicker821) Picker
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_264:
        RET
        CFI EndBlock cfiCond814
        CFI EndBlock cfiCond815
        CFI EndBlock cfiCond816
        CFI EndBlock cfiCond817
        CFI EndBlock cfiCond818
        CFI EndBlock cfiCond819
        CFI EndBlock cfiCond820
        CFI EndBlock cfiPicker821

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine99:
        CFI Block cfiCond822 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_137
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond823 Using cfiCommon0
        CFI (cfiCond823) NoFunction
        CFI (cfiCond823) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_138
        CFI (cfiCond823) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond823) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond823) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond823) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond823) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond823) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond823) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond823) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond823) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond823) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond823) CFA_SP SP+0
        CFI (cfiCond823) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond824 Using cfiCommon0
        CFI (cfiCond824) NoFunction
        CFI (cfiCond824) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_139
        CFI (cfiCond824) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond824) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond824) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond824) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond824) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond824) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond824) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond824) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond824) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond824) CFA_SP SP+0
        CFI (cfiCond824) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond825 Using cfiCommon0
        CFI (cfiCond825) NoFunction
        CFI (cfiCond825) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_140
        CFI (cfiCond825) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond825) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond825) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond825) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond825) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond825) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond825) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond825) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond825) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond825) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond825) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond825) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond825) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond825) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond825) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond825) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond825) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond825) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond825) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond825) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond825) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond825) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond825) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond825) CFA_SP SP+0
        CFI (cfiCond825) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond826 Using cfiCommon0
        CFI (cfiCond826) NoFunction
        CFI (cfiCond826) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_141
        CFI (cfiCond826) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond826) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond826) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond826) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond826) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond826) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond826) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond826) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond826) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond826) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond826) CFA_SP SP+0
        CFI (cfiCond826) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond827 Using cfiCommon0
        CFI (cfiCond827) NoFunction
        CFI (cfiCond827) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_142
        CFI (cfiCond827) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond827) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond827) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond827) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond827) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond827) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond827) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond827) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond827) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond827) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond827) CFA_SP SP+0
        CFI (cfiCond827) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond828 Using cfiCommon0
        CFI (cfiCond828) NoFunction
        CFI (cfiCond828) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_143
        CFI (cfiCond828) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond828) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond828) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond828) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond828) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond828) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond828) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond828) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond828) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond828) CFA_SP SP+0
        CFI (cfiCond828) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond829 Using cfiCommon0
        CFI (cfiCond829) NoFunction
        CFI (cfiCond829) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_144
        CFI (cfiCond829) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond829) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond829) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond829) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond829) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond829) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond829) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond829) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond829) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond829) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond829) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond829) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond829) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond829) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond829) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond829) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond829) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond829) CFA_SP SP+0
        CFI (cfiCond829) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond830 Using cfiCommon0
        CFI (cfiCond830) NoFunction
        CFI (cfiCond830) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_145
        CFI (cfiCond830) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond830) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond830) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond830) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond830) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond830) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond830) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond830) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond830) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond830) CFA_SP SP+0
        CFI (cfiCond830) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond831 Using cfiCommon0
        CFI (cfiCond831) NoFunction
        CFI (cfiCond831) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_146
        CFI (cfiCond831) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond831) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond831) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond831) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond831) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond831) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond831) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond831) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond831) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond831) CFA_SP SP+0
        CFI (cfiCond831) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond832 Using cfiCommon0
        CFI (cfiCond832) NoFunction
        CFI (cfiCond832) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_147
        CFI (cfiCond832) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond832) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond832) CFA_SP SP+-5
        CFI (cfiCond832) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond833 Using cfiCommon0
        CFI (cfiCond833) NoFunction
        CFI (cfiCond833) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_148
        CFI (cfiCond833) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond833) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond833) CFA_SP SP+-5
        CFI (cfiCond833) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond834 Using cfiCommon0
        CFI (cfiCond834) NoFunction
        CFI (cfiCond834) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_149
        CFI (cfiCond834) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond834) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond834) CFA_SP SP+-5
        CFI (cfiCond834) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond835 Using cfiCommon0
        CFI (cfiCond835) NoFunction
        CFI (cfiCond835) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_150
        CFI (cfiCond835) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond835) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond835) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond835) CFA_SP SP+0
        CFI (cfiCond835) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond836 Using cfiCommon0
        CFI (cfiCond836) NoFunction
        CFI (cfiCond836) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_151
        CFI (cfiCond836) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond836) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond836) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond836) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond836) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond836) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond836) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond836) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond836) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond836) CFA_SP SP+0
        CFI (cfiCond836) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond837 Using cfiCommon0
        CFI (cfiCond837) NoFunction
        CFI (cfiCond837) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_152
        CFI (cfiCond837) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond837) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond837) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond837) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond837) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond837) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond837) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond837) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond837) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond837) CFA_SP SP+0
        CFI (cfiCond837) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond838 Using cfiCommon0
        CFI (cfiCond838) NoFunction
        CFI (cfiCond838) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_153
        CFI (cfiCond838) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond838) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond838) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond838) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond838) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond838) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond838) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond838) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond838) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond838) CFA_SP SP+0
        CFI (cfiCond838) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond839 Using cfiCommon0
        CFI (cfiCond839) NoFunction
        CFI (cfiCond839) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_154
        CFI (cfiCond839) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond839) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond839) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond839) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond839) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond839) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond839) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond839) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond839) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond839) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond839) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond839) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond839) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond839) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond839) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond839) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond839) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond839) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond839) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond839) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond839) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond839) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond839) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond839) CFA_SP SP+0
        CFI (cfiCond839) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond840 Using cfiCommon0
        CFI (cfiCond840) NoFunction
        CFI (cfiCond840) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_155
        CFI (cfiCond840) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond840) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond840) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond840) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond840) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond840) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond840) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond840) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond840) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond840) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond840) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond840) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond840) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond840) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond840) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond840) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond840) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond840) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond840) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond840) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond840) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond840) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond840) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond840) CFA_SP SP+0
        CFI (cfiCond840) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond841 Using cfiCommon0
        CFI (cfiCond841) NoFunction
        CFI (cfiCond841) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_156
        CFI (cfiCond841) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond841) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond841) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond841) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond841) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond841) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond841) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond841) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond841) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond841) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond841) CFA_SP SP+0
        CFI (cfiCond841) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond842 Using cfiCommon0
        CFI (cfiCond842) NoFunction
        CFI (cfiCond842) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_157
        CFI (cfiCond842) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond842) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond842) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond842) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond842) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond842) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond842) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond842) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond842) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond842) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond842) CFA_SP SP+0
        CFI (cfiCond842) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond843 Using cfiCommon0
        CFI (cfiCond843) NoFunction
        CFI (cfiCond843) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_158
        CFI (cfiCond843) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond843) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond843) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond843) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond843) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond843) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond843) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond843) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond843) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond843) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond843) CFA_SP SP+0
        CFI (cfiCond843) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond844 Using cfiCommon0
        CFI (cfiCond844) NoFunction
        CFI (cfiCond844) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_159
        CFI (cfiCond844) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond844) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond844) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond844) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond844) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond844) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond844) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond844) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond844) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond844) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond844) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond844) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond844) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond844) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond844) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond844) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond844) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond844) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond844) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond844) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond844) CFA_SP SP+0
        CFI (cfiCond844) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond845 Using cfiCommon0
        CFI (cfiCond845) NoFunction
        CFI (cfiCond845) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_160
        CFI (cfiCond845) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond845) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond845) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond845) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond845) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond845) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond845) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond845) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond845) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond845) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond845) CFA_SP SP+0
        CFI (cfiCond845) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond846 Using cfiCommon0
        CFI (cfiCond846) NoFunction
        CFI (cfiCond846) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_161
        CFI (cfiCond846) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond846) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond846) CFA_SP SP+-5
        CFI (cfiCond846) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond847 Using cfiCommon0
        CFI (cfiCond847) NoFunction
        CFI (cfiCond847) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_162
        CFI (cfiCond847) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond847) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond847) CFA_SP SP+-5
        CFI (cfiCond847) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond848 Using cfiCommon0
        CFI (cfiCond848) NoFunction
        CFI (cfiCond848) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_163
        CFI (cfiCond848) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond848) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond848) CFA_SP SP+-5
        CFI (cfiCond848) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond849 Using cfiCommon0
        CFI (cfiCond849) NoFunction
        CFI (cfiCond849) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_164
        CFI (cfiCond849) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond849) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond849) CFA_SP SP+-5
        CFI (cfiCond849) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond850 Using cfiCommon0
        CFI (cfiCond850) NoFunction
        CFI (cfiCond850) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_165
        CFI (cfiCond850) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond850) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond850) CFA_SP SP+-5
        CFI (cfiCond850) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond851 Using cfiCommon0
        CFI (cfiCond851) NoFunction
        CFI (cfiCond851) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_166
        CFI (cfiCond851) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond851) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond851) CFA_SP SP+-5
        CFI (cfiCond851) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond852 Using cfiCommon0
        CFI (cfiCond852) NoFunction
        CFI (cfiCond852) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_167
        CFI (cfiCond852) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond852) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond852) CFA_SP SP+-5
        CFI (cfiCond852) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond853 Using cfiCommon0
        CFI (cfiCond853) NoFunction
        CFI (cfiCond853) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_168
        CFI (cfiCond853) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond853) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond853) CFA_SP SP+-5
        CFI (cfiCond853) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond854 Using cfiCommon0
        CFI (cfiCond854) NoFunction
        CFI (cfiCond854) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_169
        CFI (cfiCond854) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond854) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond854) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond854) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond854) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond854) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond854) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond854) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond854) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond854) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond854) CFA_SP SP+0
        CFI (cfiCond854) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond855 Using cfiCommon0
        CFI (cfiCond855) NoFunction
        CFI (cfiCond855) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_170
        CFI (cfiCond855) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond855) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond855) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond855) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond855) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond855) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond855) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond855) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond855) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond855) CFA_SP SP+0
        CFI (cfiCond855) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond856 Using cfiCommon0
        CFI (cfiCond856) NoFunction
        CFI (cfiCond856) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_171
        CFI (cfiCond856) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond856) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond856) CFA_SP SP+-5
        CFI (cfiCond856) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond857 Using cfiCommon0
        CFI (cfiCond857) NoFunction
        CFI (cfiCond857) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_172
        CFI (cfiCond857) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond857) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond857) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond857) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond857) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond857) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond857) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond857) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond857) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond857) CFA_SP SP+0
        CFI (cfiCond857) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond858 Using cfiCommon0
        CFI (cfiCond858) NoFunction
        CFI (cfiCond858) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_173
        CFI (cfiCond858) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond858) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond858) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond858) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond858) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond858) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond858) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond858) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond858) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond858) CFA_SP SP+0
        CFI (cfiCond858) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond859 Using cfiCommon0
        CFI (cfiCond859) NoFunction
        CFI (cfiCond859) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_174
        CFI (cfiCond859) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond859) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond859) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond859) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond859) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond859) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond859) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond859) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond859) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond859) CFA_SP SP+0
        CFI (cfiCond859) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond860 Using cfiCommon0
        CFI (cfiCond860) NoFunction
        CFI (cfiCond860) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_175
        CFI (cfiCond860) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond860) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond860) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond860) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond860) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond860) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond860) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond860) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond860) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond860) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond860) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond860) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond860) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond860) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond860) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond860) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond860) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond860) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond860) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond860) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond860) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond860) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond860) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond860) CFA_SP SP+0
        CFI (cfiCond860) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond861 Using cfiCommon0
        CFI (cfiCond861) NoFunction
        CFI (cfiCond861) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_176
        CFI (cfiCond861) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond861) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond861) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond861) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond861) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond861) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond861) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond861) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond861) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond861) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond861) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond861) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond861) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond861) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond861) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond861) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond861) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond861) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond861) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond861) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond861) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond861) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond861) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond861) CFA_SP SP+0
        CFI (cfiCond861) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond862 Using cfiCommon0
        CFI (cfiCond862) NoFunction
        CFI (cfiCond862) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_177
        CFI (cfiCond862) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond862) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond862) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond862) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond862) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond862) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond862) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond862) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond862) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond862) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond862) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond862) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond862) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond862) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond862) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond862) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond862) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond862) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond862) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond862) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond862) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond862) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond862) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond862) CFA_SP SP+0
        CFI (cfiCond862) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond863 Using cfiCommon0
        CFI (cfiCond863) NoFunction
        CFI (cfiCond863) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_178
        CFI (cfiCond863) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond863) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond863) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond863) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond863) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond863) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond863) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond863) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond863) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond863) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond863) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond863) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond863) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond863) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond863) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond863) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond863) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond863) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond863) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond863) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond863) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond863) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond863) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond863) CFA_SP SP+0
        CFI (cfiCond863) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond864 Using cfiCommon0
        CFI (cfiCond864) NoFunction
        CFI (cfiCond864) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_179
        CFI (cfiCond864) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond864) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond864) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond864) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond864) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond864) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond864) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond864) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond864) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond864) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond864) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond864) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond864) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond864) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond864) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond864) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond864) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond864) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond864) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond864) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond864) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond864) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond864) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond864) CFA_SP SP+0
        CFI (cfiCond864) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond865 Using cfiCommon0
        CFI (cfiCond865) NoFunction
        CFI (cfiCond865) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_180
        CFI (cfiCond865) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond865) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond865) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond865) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond865) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond865) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond865) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond865) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond865) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond865) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond865) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond865) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond865) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond865) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond865) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond865) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond865) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond865) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond865) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond865) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond865) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond865) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond865) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond865) CFA_SP SP+0
        CFI (cfiCond865) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond866 Using cfiCommon0
        CFI (cfiCond866) NoFunction
        CFI (cfiCond866) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_181
        CFI (cfiCond866) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond866) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond866) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond866) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond866) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond866) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond866) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond866) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond866) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond866) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond866) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond866) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond866) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond866) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond866) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond866) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond866) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond866) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond866) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond866) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond866) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond866) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond866) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond866) CFA_SP SP+0
        CFI (cfiCond866) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond867 Using cfiCommon0
        CFI (cfiCond867) NoFunction
        CFI (cfiCond867) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_182
        CFI (cfiCond867) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond867) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond867) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond867) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond867) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond867) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond867) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond867) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond867) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond867) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond867) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond867) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond867) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond867) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond867) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond867) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond867) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond867) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond867) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond867) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond867) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond867) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond867) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond867) CFA_SP SP+0
        CFI (cfiCond867) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond868 Using cfiCommon0
        CFI (cfiCond868) NoFunction
        CFI (cfiCond868) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_183
        CFI (cfiCond868) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond868) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond868) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond868) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond868) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond868) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond868) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond868) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond868) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond868) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond868) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond868) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond868) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond868) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond868) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond868) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond868) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond868) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond868) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond868) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond868) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond868) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond868) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond868) CFA_SP SP+0
        CFI (cfiCond868) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond869 Using cfiCommon0
        CFI (cfiCond869) NoFunction
        CFI (cfiCond869) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_184
        CFI (cfiCond869) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond869) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond869) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond869) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond869) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond869) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond869) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond869) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond869) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond869) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond869) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond869) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond869) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond869) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond869) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond869) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond869) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond869) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond869) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond869) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond869) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond869) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond869) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond869) CFA_SP SP+0
        CFI (cfiCond869) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond870 Using cfiCommon0
        CFI (cfiCond870) NoFunction
        CFI (cfiCond870) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_185
        CFI (cfiCond870) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond870) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond870) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond870) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond870) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond870) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond870) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond870) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond870) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond870) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond870) CFA_SP SP+0
        CFI (cfiCond870) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond871 Using cfiCommon0
        CFI (cfiCond871) NoFunction
        CFI (cfiCond871) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_186
        CFI (cfiCond871) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond871) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond871) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond871) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond871) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond871) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond871) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond871) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond871) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond871) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond871) CFA_SP SP+0
        CFI (cfiCond871) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond872 Using cfiCommon0
        CFI (cfiCond872) NoFunction
        CFI (cfiCond872) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_187
        CFI (cfiCond872) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond872) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond872) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond872) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond872) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond872) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond872) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond872) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond872) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond872) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond872) CFA_SP SP+0
        CFI (cfiCond872) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond873 Using cfiCommon0
        CFI (cfiCond873) NoFunction
        CFI (cfiCond873) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_198
        CFI (cfiCond873) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond873) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond873) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond873) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond873) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond873) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond873) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond873) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond873) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond873) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond873) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond873) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond873) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond873) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond873) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond873) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond873) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond873) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond873) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond873) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond873) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond873) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond873) CFA_SP SP+0
        CFI (cfiCond873) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond874 Using cfiCommon0
        CFI (cfiCond874) NoFunction
        CFI (cfiCond874) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_199
        CFI (cfiCond874) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond874) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond874) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond874) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond874) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond874) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond874) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond874) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond874) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond874) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond874) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond874) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond874) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond874) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond874) CFA_SP SP+0
        CFI (cfiCond874) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond875 Using cfiCommon0
        CFI (cfiCond875) NoFunction
        CFI (cfiCond875) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_200
        CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond875) CFA_SP SP+0
        CFI (cfiCond875) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond876 Using cfiCommon0
        CFI (cfiCond876) NoFunction
        CFI (cfiCond876) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_201
        CFI (cfiCond876) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond876) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond876) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond876) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond876) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond876) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond876) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond876) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond876) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond876) CFA_SP SP+0
        CFI (cfiCond876) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond877 Using cfiCommon0
        CFI (cfiCond877) NoFunction
        CFI (cfiCond877) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_202
        CFI (cfiCond877) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond877) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond877) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond877) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond877) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond877) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond877) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond877) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond877) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond877) CFA_SP SP+0
        CFI (cfiCond877) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond878 Using cfiCommon0
        CFI (cfiCond878) NoFunction
        CFI (cfiCond878) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_203
        CFI (cfiCond878) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond878) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond878) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond878) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond878) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond878) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond878) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond878) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond878) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond878) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond878) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond878) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond878) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond878) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond878) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond878) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond878) CFA_SP SP+0
        CFI (cfiCond878) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond879 Using cfiCommon0
        CFI (cfiCond879) NoFunction
        CFI (cfiCond879) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_204
        CFI (cfiCond879) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond879) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond879) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond879) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond879) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond879) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond879) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond879) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond879) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond879) CFA_SP SP+0
        CFI (cfiCond879) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond880 Using cfiCommon0
        CFI (cfiCond880) NoFunction
        CFI (cfiCond880) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_205
        CFI (cfiCond880) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond880) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond880) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond880) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond880) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond880) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond880) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond880) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond880) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond880) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond880) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond880) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond880) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond880) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond880) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond880) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond880) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond880) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond880) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond880) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond880) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond880) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond880) CFA_SP SP+0
        CFI (cfiCond880) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond881 Using cfiCommon0
        CFI (cfiCond881) NoFunction
        CFI (cfiCond881) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_206
        CFI (cfiCond881) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond881) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond881) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond881) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond881) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond881) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond881) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond881) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond881) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond881) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond881) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond881) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond881) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond881) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond881) CFA_SP SP+0
        CFI (cfiCond881) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond882 Using cfiCommon0
        CFI (cfiCond882) NoFunction
        CFI (cfiCond882) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_207
        CFI (cfiCond882) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond882) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond882) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond882) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond882) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond882) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond882) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond882) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond882) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond882) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond882) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond882) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond882) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond882) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond882) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond882) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond882) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond882) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond882) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond882) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond882) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond882) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond882) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond882) CFA_SP SP+0
        CFI (cfiCond882) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond883 Using cfiCommon0
        CFI (cfiCond883) NoFunction
        CFI (cfiCond883) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_208
        CFI (cfiCond883) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond883) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond883) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond883) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond883) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond883) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond883) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond883) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond883) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond883) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond883) CFA_SP SP+0
        CFI (cfiCond883) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond884 Using cfiCommon0
        CFI (cfiCond884) NoFunction
        CFI (cfiCond884) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_209
        CFI (cfiCond884) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond884) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond884) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond884) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond884) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond884) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond884) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond884) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond884) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond884) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond884) CFA_SP SP+0
        CFI (cfiCond884) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond885 Using cfiCommon0
        CFI (cfiCond885) NoFunction
        CFI (cfiCond885) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_210
        CFI (cfiCond885) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond885) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond885) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond885) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond885) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond885) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond885) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond885) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond885) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond885) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond885) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond885) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond885) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond885) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond885) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond885) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond885) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond885) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond885) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond885) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond885) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond885) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond885) CFA_SP SP+0
        CFI (cfiCond885) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond886 Using cfiCommon0
        CFI (cfiCond886) NoFunction
        CFI (cfiCond886) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_211
        CFI (cfiCond886) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond886) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond886) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond886) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond886) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond886) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond886) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond886) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond886) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond886) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond886) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond886) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond886) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond886) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond886) CFA_SP SP+0
        CFI (cfiCond886) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond887 Using cfiCommon0
        CFI (cfiCond887) NoFunction
        CFI (cfiCond887) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_212
        CFI (cfiCond887) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond887) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond887) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond887) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond887) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond887) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond887) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond887) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond887) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond887) CFA_SP SP+0
        CFI (cfiCond887) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond888 Using cfiCommon0
        CFI (cfiCond888) NoFunction
        CFI (cfiCond888) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_213
        CFI (cfiCond888) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond888) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond888) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond888) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond888) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond888) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond888) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond888) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond888) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond888) CFA_SP SP+0
        CFI (cfiCond888) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond889 Using cfiCommon0
        CFI (cfiCond889) NoFunction
        CFI (cfiCond889) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_214
        CFI (cfiCond889) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond889) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond889) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond889) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond889) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond889) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond889) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond889) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond889) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond889) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond889) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond889) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond889) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond889) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond889) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond889) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond889) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond889) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond889) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond889) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond889) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond889) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond889) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond889) CFA_SP SP+0
        CFI (cfiCond889) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond890 Using cfiCommon0
        CFI (cfiCond890) NoFunction
        CFI (cfiCond890) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_256
        CFI (cfiCond890) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond890) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond890) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond890) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond890) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond890) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond890) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond890) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond890) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond890) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond890) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond890) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond890) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond890) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond890) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond890) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond890) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond890) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond890) CFA_SP SP+0
        CFI (cfiCond890) CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond891 Using cfiCommon0
        CFI (cfiCond891) NoFunction
        CFI (cfiCond891) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_257
        CFI (cfiCond891) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond891) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond891) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond891) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond891) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond891) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond891) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond891) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond891) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond891) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond891) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond891) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond891) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond891) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond891) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond891) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond891) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond891) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond891) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond891) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond891) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond891) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond891) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond891) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond891) CFA_SP SP+0
        CFI (cfiCond891) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond892 Using cfiCommon0
        CFI (cfiCond892) NoFunction
        CFI (cfiCond892) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_258
        CFI (cfiCond892) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond892) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond892) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond892) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond892) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond892) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond892) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond892) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond892) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond892) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond892) CFA_SP SP+0
        CFI (cfiCond892) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond893 Using cfiCommon0
        CFI (cfiCond893) NoFunction
        CFI (cfiCond893) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_259
        CFI (cfiCond893) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond893) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond893) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond893) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond893) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond893) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond893) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond893) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond893) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond893) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond893) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond893) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond893) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond893) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond893) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond893) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond893) CFA_SP SP+0
        CFI (cfiCond893) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond894 Using cfiCommon0
        CFI (cfiCond894) NoFunction
        CFI (cfiCond894) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_260
        CFI (cfiCond894) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond894) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond894) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond894) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond894) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond894) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond894) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond894) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond894) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond894) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond894) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond894) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond894) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond894) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond894) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond894) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond894) CFA_SP SP+0
        CFI (cfiCond894) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond895 Using cfiCommon0
        CFI (cfiCond895) NoFunction
        CFI (cfiCond895) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_18
        CFI (cfiCond895) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond895) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond895) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond895) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond895) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond895) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond895) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond895) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond895) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond895) CFA_SP SP+0
        CFI (cfiCond895) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond896 Using cfiCommon0
        CFI (cfiCond896) NoFunction
        CFI (cfiCond896) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_19
        CFI (cfiCond896) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond896) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond896) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond896) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond896) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond896) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond896) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond896) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond896) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond896) CFA_SP SP+0
        CFI (cfiCond896) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker897 Using cfiCommon1
        CFI (cfiPicker897) NoFunction
        CFI (cfiPicker897) Picker
        MOV     DPTR,#st + 2
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_334:
        MOVX    A,@DPTR
        MOV     R1,A
        RET
        CFI EndBlock cfiCond822
        CFI EndBlock cfiCond823
        CFI EndBlock cfiCond824
        CFI EndBlock cfiCond825
        CFI EndBlock cfiCond826
        CFI EndBlock cfiCond827
        CFI EndBlock cfiCond828
        CFI EndBlock cfiCond829
        CFI EndBlock cfiCond830
        CFI EndBlock cfiCond831
        CFI EndBlock cfiCond832
        CFI EndBlock cfiCond833
        CFI EndBlock cfiCond834
        CFI EndBlock cfiCond835
        CFI EndBlock cfiCond836
        CFI EndBlock cfiCond837
        CFI EndBlock cfiCond838
        CFI EndBlock cfiCond839
        CFI EndBlock cfiCond840
        CFI EndBlock cfiCond841
        CFI EndBlock cfiCond842
        CFI EndBlock cfiCond843
        CFI EndBlock cfiCond844
        CFI EndBlock cfiCond845
        CFI EndBlock cfiCond846
        CFI EndBlock cfiCond847
        CFI EndBlock cfiCond848
        CFI EndBlock cfiCond849
        CFI EndBlock cfiCond850
        CFI EndBlock cfiCond851
        CFI EndBlock cfiCond852
        CFI EndBlock cfiCond853
        CFI EndBlock cfiCond854
        CFI EndBlock cfiCond855
        CFI EndBlock cfiCond856
        CFI EndBlock cfiCond857
        CFI EndBlock cfiCond858
        CFI EndBlock cfiCond859
        CFI EndBlock cfiCond860
        CFI EndBlock cfiCond861
        CFI EndBlock cfiCond862
        CFI EndBlock cfiCond863
        CFI EndBlock cfiCond864
        CFI EndBlock cfiCond865
        CFI EndBlock cfiCond866
        CFI EndBlock cfiCond867
        CFI EndBlock cfiCond868
        CFI EndBlock cfiCond869
        CFI EndBlock cfiCond870
        CFI EndBlock cfiCond871
        CFI EndBlock cfiCond872
        CFI EndBlock cfiCond873
        CFI EndBlock cfiCond874
        CFI EndBlock cfiCond875
        CFI EndBlock cfiCond876
        CFI EndBlock cfiCond877
        CFI EndBlock cfiCond878
        CFI EndBlock cfiCond879
        CFI EndBlock cfiCond880
        CFI EndBlock cfiCond881
        CFI EndBlock cfiCond882
        CFI EndBlock cfiCond883
        CFI EndBlock cfiCond884
        CFI EndBlock cfiCond885
        CFI EndBlock cfiCond886
        CFI EndBlock cfiCond887
        CFI EndBlock cfiCond888
        CFI EndBlock cfiCond889
        CFI EndBlock cfiCond890
        CFI EndBlock cfiCond891
        CFI EndBlock cfiCond892
        CFI EndBlock cfiCond893
        CFI EndBlock cfiCond894
        CFI EndBlock cfiCond895
        CFI EndBlock cfiCond896
        CFI EndBlock cfiPicker897
// 2418 
// 2419 /**
// 2420  *  @brief      Get DMP state.
// 2421  *  @param[out] enabled 1 if enabled.
// 2422  *  @return     0 if successful.
// 2423  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2424 int mpu_get_dmp_state(unsigned char *enabled)
mpu_get_dmp_state:
        CFI Block cfiBlock898 Using cfiCommon0
        CFI Function mpu_get_dmp_state
        CODE
// 2425 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2426     enabled[0] = st.chip_cfg.dmp_on;
        MOV     DPTR,#st + 29
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock898
// 2427     return 0;
// 2428 }
// 2429 
// 2430 
// 2431 /* This initialization is similar to the one in ak8975.c. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2432 int setup_compass(void)
setup_compass:
        CFI Block cfiBlock899 Using cfiCommon0
        CFI Function setup_compass
        CODE
// 2433 {
        ; Saved register size: 0
        ; Auto size: 0
// 2434 #ifdef AK89xx_SECONDARY
// 2435     unsigned char data[4], akm_addr;
// 2436 
// 2437     mpu_set_bypass(1);
// 2438 
// 2439     /* Find compass. Possible addresses range from 0x0C to 0x0F. */
// 2440     for (akm_addr = 0x0C; akm_addr <= 0x0F; akm_addr++) {
// 2441         int result;
// 2442         result = i2c_read(akm_addr, AKM_REG_WHOAMI, 1, data);
// 2443         if (!result && (data[0] == AKM_WHOAMI))
// 2444             break;
// 2445     }
// 2446 
// 2447     if (akm_addr > 0x0F) {
// 2448         /* TODO: Handle this case in all compass-related functions. */
// 2449         log_e("Compass not found.\n");
// 2450         return -1;
// 2451     }
// 2452 
// 2453     st.chip_cfg.compass_addr = akm_addr;
// 2454 
// 2455     data[0] = AKM_POWER_DOWN;
// 2456     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, data))
// 2457         return -1;
// 2458     delay_ms(1);
// 2459 
// 2460     data[0] = AKM_FUSE_ROM_ACCESS;
// 2461     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, data))
// 2462         return -1;
// 2463     delay_ms(1);
// 2464 
// 2465     /* Get sensitivity adjustment data from fuse ROM. */
// 2466     if (i2c_read(st.chip_cfg.compass_addr, AKM_REG_ASAX, 3, data))
// 2467         return -1;
// 2468     st.chip_cfg.mag_sens_adj[0] = (long)data[0] + 128;
// 2469     st.chip_cfg.mag_sens_adj[1] = (long)data[1] + 128;
// 2470     st.chip_cfg.mag_sens_adj[2] = (long)data[2] + 128;
// 2471 
// 2472     data[0] = AKM_POWER_DOWN;
// 2473     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, data))
// 2474         return -1;
// 2475     delay_ms(1);
// 2476 
// 2477     mpu_set_bypass(0);
// 2478 
// 2479     /* Set up master mode, master clock, and ES bit. */
// 2480     data[0] = 0x40;
// 2481     if (i2c_write(st.hw->addr, st.reg->i2c_mst, 1, data))
// 2482         return -1;
// 2483 
// 2484     /* Slave 0 reads from AKM data registers. */
// 2485     data[0] = BIT_I2C_READ | st.chip_cfg.compass_addr;
// 2486     if (i2c_write(st.hw->addr, st.reg->s0_addr, 1, data))
// 2487         return -1;
// 2488 
// 2489     /* Compass reads start at this register. */
// 2490     data[0] = AKM_REG_ST1;
// 2491     if (i2c_write(st.hw->addr, st.reg->s0_reg, 1, data))
// 2492         return -1;
// 2493 
// 2494     /* Enable slave 0, 8-byte reads. */
// 2495     data[0] = BIT_SLAVE_EN | 8;
// 2496     if (i2c_write(st.hw->addr, st.reg->s0_ctrl, 1, data))
// 2497         return -1;
// 2498 
// 2499     /* Slave 1 changes AKM measurement mode. */
// 2500     data[0] = st.chip_cfg.compass_addr;
// 2501     if (i2c_write(st.hw->addr, st.reg->s1_addr, 1, data))
// 2502         return -1;
// 2503 
// 2504     /* AKM measurement mode register. */
// 2505     data[0] = AKM_REG_CNTL;
// 2506     if (i2c_write(st.hw->addr, st.reg->s1_reg, 1, data))
// 2507         return -1;
// 2508 
// 2509     /* Enable slave 1, 1-byte writes. */
// 2510     data[0] = BIT_SLAVE_EN | 1;
// 2511     if (i2c_write(st.hw->addr, st.reg->s1_ctrl, 1, data))
// 2512         return -1;
// 2513 
// 2514     /* Set slave 1 data. */
// 2515     data[0] = AKM_SINGLE_MEASUREMENT;
// 2516     if (i2c_write(st.hw->addr, st.reg->s1_do, 1, data))
// 2517         return -1;
// 2518 
// 2519     /* Trigger slave 0 and slave 1 actions at each sample. */
// 2520     data[0] = 0x03;
// 2521     if (i2c_write(st.hw->addr, st.reg->i2c_delay_ctrl, 1, data))
// 2522         return -1;
// 2523 
// 2524 #ifdef MPU9150
// 2525     /* For the MPU9150, the auxiliary I2C bus needs to be set to VDD. */
// 2526     data[0] = BIT_I2C_MST_VDDIO;
// 2527     if (i2c_write(st.hw->addr, st.reg->yg_offs_tc, 1, data))
// 2528         return -1;
// 2529 #endif
// 2530 
// 2531     return 0;
// 2532 #else
// 2533     return -1;
        SJMP    ?Subroutine4
        CFI EndBlock cfiBlock899
// 2534 #endif
// 2535 }
// 2536 
// 2537 /**
// 2538  *  @brief      Read raw compass data.
// 2539  *  @param[out] data        Raw data in hardware units.
// 2540  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
// 2541  *  @return     0 if successful.
// 2542  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2543 int mpu_get_compass_reg(short *data, unsigned long *timestamp)
mpu_get_compass_reg:
        CODE
// 2544 {
        ; Saved register size: 0
        ; Auto size: 0
// 2545 #ifdef AK89xx_SECONDARY
// 2546     unsigned char tmp[9];
// 2547 
// 2548     if (!(st.chip_cfg.sensors & INV_XYZ_COMPASS))
// 2549         return -1;
// 2550 
// 2551 #ifdef AK89xx_BYPASS
// 2552     if (i2c_read(st.chip_cfg.compass_addr, AKM_REG_ST1, 8, tmp))
// 2553         return -1;
// 2554     tmp[8] = AKM_SINGLE_MEASUREMENT;
// 2555     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp+8))
// 2556         return -1;
// 2557 #else
// 2558     if (i2c_read(st.hw->addr, st.reg->raw_compass, 8, tmp))
// 2559         return -1;
// 2560 #endif
// 2561 
// 2562 #if defined AK8975_SECONDARY
// 2563     /* AK8975 doesn't have the overrun error bit. */
// 2564     if (!(tmp[0] & AKM_DATA_READY))
// 2565         return -2;
// 2566     if ((tmp[7] & AKM_OVERFLOW) || (tmp[7] & AKM_DATA_ERROR))
// 2567         return -3;
// 2568 #elif defined AK8963_SECONDARY
// 2569     /* AK8963 doesn't have the data read error bit. */
// 2570     if (!(tmp[0] & AKM_DATA_READY) || (tmp[0] & AKM_DATA_OVERRUN))
// 2571         return -2;
// 2572     if (tmp[7] & AKM_OVERFLOW)
// 2573         return -3;
// 2574 #endif
// 2575     data[0] = (tmp[2] << 8) | tmp[1];
// 2576     data[1] = (tmp[4] << 8) | tmp[3];
// 2577     data[2] = (tmp[6] << 8) | tmp[5];
// 2578 
// 2579     data[0] = ((long)data[0] * st.chip_cfg.mag_sens_adj[0]) >> 8;
// 2580     data[1] = ((long)data[1] * st.chip_cfg.mag_sens_adj[1]) >> 8;
// 2581     data[2] = ((long)data[2] * st.chip_cfg.mag_sens_adj[2]) >> 8;
// 2582 
// 2583     if (timestamp)
// 2584         get_ms(timestamp);
// 2585     return 0;
// 2586 #else
// 2587     return -1;
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
        CFI Block cfiBlock900 Using cfiCommon0
        CFI NoFunction
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ?BRET
        CFI EndBlock cfiBlock900
// 2588 #endif
// 2589 }
// 2590 
// 2591 /**
// 2592  *  @brief      Get the compass full-scale range.
// 2593  *  @param[out] fsr Current full-scale range.
// 2594  *  @return     0 if successful.
// 2595  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2596 int mpu_get_compass_fsr(unsigned short *fsr)
mpu_get_compass_fsr:
        CFI Block cfiBlock901 Using cfiCommon0
        CFI Function mpu_get_compass_fsr
        CODE
// 2597 {
        ; Saved register size: 0
        ; Auto size: 0
// 2598 #ifdef AK89xx_SECONDARY
// 2599     fsr[0] = st.hw->compass_fsr;
// 2600     return 0;
// 2601 #else
// 2602     return -1;
        SJMP    ?Subroutine4
        CFI EndBlock cfiBlock901
// 2603 #endif
// 2604 }
// 2605 
// 2606 /**
// 2607  *  @brief      Enters LP accel motion interrupt mode.
// 2608  *  The behavior of this feature is very different between the MPU6050 and the
// 2609  *  MPU6500. Each chip's version of this feature is explained below.
// 2610  *
// 2611  *  \n MPU6050:
// 2612  *  \n When this mode is first enabled, the hardware captures a single accel
// 2613  *  sample, and subsequent samples are compared with this one to determine if
// 2614  *  the device is in motion. Therefore, whenever this "locked" sample needs to
// 2615  *  be changed, this function must be called again.
// 2616  *
// 2617  *  \n The hardware motion threshold can be between 32mg and 8160mg in 32mg
// 2618  *  increments.
// 2619  *
// 2620  *  \n Low-power accel mode supports the following frequencies:
// 2621  *  \n 1.25Hz, 5Hz, 20Hz, 40Hz
// 2622  *
// 2623  *  \n MPU6500:
// 2624  *  \n Unlike the MPU6050 version, the hardware does not "lock in" a reference
// 2625  *  sample. The hardware monitors the accel data and detects any large change
// 2626  *  over a short period of time.
// 2627  *
// 2628  *  \n The hardware motion threshold can be between 4mg and 1020mg in 4mg
// 2629  *  increments.
// 2630  *
// 2631  *  \n MPU6500 Low-power accel mode supports the following frequencies:
// 2632  *  \n 1.25Hz, 2.5Hz, 5Hz, 10Hz, 20Hz, 40Hz, 80Hz, 160Hz, 320Hz, 640Hz
// 2633  *
// 2634  *  \n\n NOTES:
// 2635  *  \n The driver will round down @e thresh to the nearest supported value if
// 2636  *  an unsupported threshold is selected.
// 2637  *  \n To select a fractional wake-up frequency, round down the value passed to
// 2638  *  @e lpa_freq.
// 2639  *  \n The MPU6500 does not support a delay parameter. If this function is used
// 2640  *  for the MPU6500, the value passed to @e time will be ignored.
// 2641  *  \n To disable this mode, set @e lpa_freq to zero. The driver will restore
// 2642  *  the previous configuration.
// 2643  *
// 2644  *  @param[in]  thresh      Motion threshold in mg.
// 2645  *  @param[in]  time        Duration in milliseconds that the accel data must
// 2646  *                          exceed @e thresh before motion is reported.
// 2647  *  @param[in]  lpa_freq    Minimum sampling rate, or zero to disable.
// 2648  *  @return     0 if successful.
// 2649  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2650 int mpu_lp_motion_interrupt(unsigned short thresh, unsigned char time,
mpu_lp_motion_interrupt:
        CFI Block cfiBlock902 Using cfiCommon0
        CFI Function mpu_lp_motion_interrupt
        CODE
// 2651     unsigned char lpa_freq)
// 2652 {
        FUNCALL mpu_lp_motion_interrupt, mpu_set_dmp_state
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_get_gyro_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_get_accel_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_get_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_get_sample_rate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_get_fifo_config
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, set_int_enable
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_lp_accel_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, MPU_Write_Len
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_set_sensors
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_set_gyro_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_set_accel_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_set_sample_rate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_configure_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_set_dmp_state
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R1
        MOV     R7,A
        MOV     A,R4
        MOV     R6,A
// 2653     unsigned char data[3];
// 2654 
// 2655     if (lpa_freq) {
        JNZ     $+5
        LJMP    ??mpu_lp_motion_interrupt_0 & 0xFFFF
// 2656         unsigned char thresh_hw;
// 2657 
// 2658 #if defined MPU6050
// 2659         /* TODO: Make these const/#defines. */
// 2660         /* 1LSb = 32mg. */
// 2661         if (thresh > 8160)
        CLR     C
        MOV     A,R2
        SUBB    A,#-0x1f
        MOV     A,R3
        SUBB    A,#0x1f
        JC      ??mpu_lp_motion_interrupt_1
// 2662             thresh_hw = 255;
        MOV     ?V0 + 0,#-0x1
        SJMP    ??mpu_lp_motion_interrupt_2
// 2663         else if (thresh < 32)
??mpu_lp_motion_interrupt_1:
        CLR     C
        MOV     A,R2
        SUBB    A,#0x20
        MOV     A,R3
        SUBB    A,#0x0
        JNC     ??mpu_lp_motion_interrupt_3
// 2664             thresh_hw = 1;
        MOV     ?V0 + 0,#0x1
        SJMP    ??mpu_lp_motion_interrupt_2
// 2665         else
// 2666             thresh_hw = thresh >> 5;
??mpu_lp_motion_interrupt_3:
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,#0x5
        MOV     R0,#?V0 + 0
        LCALL   ?US_SHR
// 2667 #elif defined MPU6500
// 2668         /* 1LSb = 4mg. */
// 2669         if (thresh > 1020)
// 2670             thresh_hw = 255;
// 2671         else if (thresh < 4)
// 2672             thresh_hw = 1;
// 2673         else
// 2674             thresh_hw = thresh >> 2;
// 2675 #endif
// 2676 
// 2677         if (!time)
??mpu_lp_motion_interrupt_2:
        MOV     A,R7
        JNZ     ??mpu_lp_motion_interrupt_4
// 2678             /* Minimum duration must be 1ms. */
// 2679             time = 1;
        MOV     R7,#0x1
// 2680 
// 2681 #if defined MPU6050
// 2682         if (lpa_freq > 40)
??mpu_lp_motion_interrupt_4:
        MOV     A,R6
        CLR     C
        SUBB    A,#0x29
        JC      ??mpu_lp_motion_interrupt_5
// 2683 #elif defined MPU6500
// 2684         if (lpa_freq > 640)
// 2685 #endif
// 2686             /* At this point, the chip has not been re-configured, so the
// 2687              * function can safely exit.
// 2688              */
// 2689             return -1;
??mpu_lp_motion_interrupt_6:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_lp_motion_interrupt_7 & 0xFFFF
// 2690 
// 2691         if (!st.chip_cfg.int_motion_only) {
??mpu_lp_motion_interrupt_5:
        MOV     DPTR,#st + 16
        MOVX    A,@DPTR
        JNZ     ??mpu_lp_motion_interrupt_8
// 2692             /* Store current settings for later. */
// 2693             if (st.chip_cfg.dmp_on) {
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JZ      ??mpu_lp_motion_interrupt_9
// 2694                 mpu_set_dmp_state(0);
        ; Setup parameters for call to function mpu_set_dmp_state
        MOV     R1,#0x0
        LCALL   ??mpu_set_dmp_state?relay
// 2695                 st.chip_cfg.cache.dmp_on = 1;
        MOV     DPTR,#st + 26
        MOV     A,#0x1
        SJMP    ??mpu_lp_motion_interrupt_10
// 2696             } else
// 2697                 st.chip_cfg.cache.dmp_on = 0;
??mpu_lp_motion_interrupt_9:
        MOV     DPTR,#st + 26
        CLR     A
??mpu_lp_motion_interrupt_10:
        MOVX    @DPTR,A
// 2698             mpu_get_gyro_fsr(&st.chip_cfg.cache.gyro_fsr);
        ; Setup parameters for call to function mpu_get_gyro_fsr
        MOV     R2,#(st + 17) & 0xff
        MOV     R3,#((st + 17) >> 8) & 0xff
        LCALL   ??mpu_get_gyro_fsr?relay
// 2699             mpu_get_accel_fsr(&st.chip_cfg.cache.accel_fsr);
        ; Setup parameters for call to function mpu_get_accel_fsr
        MOV     R2,#(st + 19) & 0xff
        MOV     R3,#((st + 19) >> 8) & 0xff
        LCALL   ??mpu_get_accel_fsr?relay
// 2700             mpu_get_lpf(&st.chip_cfg.cache.lpf);
        ; Setup parameters for call to function mpu_get_lpf
        MOV     R2,#(st + 20) & 0xff
        MOV     R3,#((st + 20) >> 8) & 0xff
        LCALL   ??mpu_get_lpf?relay
// 2701             mpu_get_sample_rate(&st.chip_cfg.cache.sample_rate);
        ; Setup parameters for call to function mpu_get_sample_rate
        MOV     R2,#(st + 22) & 0xff
        MOV     R3,#((st + 22) >> 8) & 0xff
        LCALL   ??mpu_get_sample_rate?relay
// 2702             st.chip_cfg.cache.sensors_on = st.chip_cfg.sensors;
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     DPTR,#st + 24
        MOVX    @DPTR,A
// 2703             mpu_get_fifo_config(&st.chip_cfg.cache.fifo_sensors);
        ; Setup parameters for call to function mpu_get_fifo_config
        MOV     R2,#(st + 25) & 0xff
        MOV     R3,#((st + 25) >> 8) & 0xff
        LCALL   ??mpu_get_fifo_config?relay
// 2704         }
// 2705 
// 2706 #ifdef MPU6050
// 2707         /* Disable hardware interrupts for now. */
// 2708         set_int_enable(0);
??mpu_lp_motion_interrupt_8:
        ; Setup parameters for call to function set_int_enable
        MOV     R1,#0x0
        LCALL   ??set_int_enable?relay
// 2709 
// 2710         /* Enter full-power accel-only mode. */
// 2711         mpu_lp_accel_mode(0);
        ; Setup parameters for call to function mpu_lp_accel_mode
        MOV     R1,#0x0
        LCALL   ??mpu_lp_accel_mode?relay
// 2712 
// 2713         /* Override current LPF (and HPF) settings to obtain a valid accel
// 2714          * reading.
// 2715          */
// 2716         data[0] = INV_FILTER_256HZ_NOLPF2;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 2717         if (i2c_write(st.hw->addr, st.reg->lpf, 1, data))
        ; Setup parameters for call to function MPU_Write_Len
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_27:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_185:
        JNZ     ??mpu_lp_motion_interrupt_6
// 2718             return -1;
// 2719 
// 2720         /* NOTE: Digital high pass filter should be configured here. Since this
// 2721          * driver doesn't modify those bits anywhere, they should already be
// 2722          * cleared by default.
// 2723          */
// 2724 
// 2725         /* Configure the device to send motion interrupts. */
// 2726         /* Enable motion interrupt. */
// 2727         data[0] = BIT_MOT_INT_EN;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x40
        LCALL   ??Subroutine138_0 & 0xFFFF
// 2728         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, data))
??CrossCallReturnLabel_307:
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_160:
        JZ      $+5
        LJMP    ??mpu_lp_motion_interrupt_11 & 0xFFFF
// 2729             goto lp_int_restore;
// 2730 
// 2731         /* Set motion interrupt parameters. */
// 2732         data[0] = thresh_hw;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
// 2733         data[1] = time;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R7
        LCALL   ?Subroutine49 & 0xFFFF
// 2734         if (i2c_write(st.hw->addr, st.reg->motion_thr, 2, data))
??CrossCallReturnLabel_63:
        LCALL   ??Subroutine134_0 & 0xFFFF
??CrossCallReturnLabel_289:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_186:
        JZ      $+5
        LJMP    ??mpu_lp_motion_interrupt_11 & 0xFFFF
// 2735             goto lp_int_restore;
// 2736 
// 2737         /* Force hardware to "lock" current accel sample. */
// 2738         delay_ms(5);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x5
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
// 2739         data[0] = (st.chip_cfg.accel_fsr << 3) | BITS_HPF;
        MOV     DPTR,#st + 5
        MOVX    A,@DPTR
        RLC     A
        RLC     A
        RLC     A
        ANL     A,#0xf8
        ORL     A,#0x7
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine20 & 0xFFFF
// 2740         if (i2c_write(st.hw->addr, st.reg->accel_cfg, 1, data))
??CrossCallReturnLabel_282:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_187:
        JNZ     ??mpu_lp_motion_interrupt_11
// 2741             goto lp_int_restore;
// 2742 
// 2743         /* Set up LP accel mode. */
// 2744         data[0] = BIT_LPA_CYCLE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x20
        MOVX    @DPTR,A
// 2745         if (lpa_freq == 1)
        MOV     A,#0x1
        XRL     A,R6
        JNZ     ??mpu_lp_motion_interrupt_12
// 2746             data[1] = INV_LPA_1_25HZ;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        SJMP    ??mpu_lp_motion_interrupt_13
// 2747         else if (lpa_freq <= 5)
??mpu_lp_motion_interrupt_12:
        MOV     A,R6
        CLR     C
        SUBB    A,#0x6
        JNC     ??mpu_lp_motion_interrupt_14
// 2748             data[1] = INV_LPA_5HZ;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        SJMP    ??mpu_lp_motion_interrupt_13
// 2749         else if (lpa_freq <= 20)
??mpu_lp_motion_interrupt_14:
        MOV     A,R6
        CLR     C
        SUBB    A,#0x15
        MOV     A,#0x1
        JNC     ??mpu_lp_motion_interrupt_15
// 2750             data[1] = INV_LPA_20HZ;
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        SJMP    ??mpu_lp_motion_interrupt_13
// 2751         else
// 2752             data[1] = INV_LPA_40HZ;
??mpu_lp_motion_interrupt_15:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
??mpu_lp_motion_interrupt_13:
        MOVX    @DPTR,A
// 2753         data[1] = (data[1] << 6) | BIT_STBY_XYZG;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
// 2754         if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, data))
??CrossCallReturnLabel_138:
        JNZ     ??mpu_lp_motion_interrupt_11
// 2755             goto lp_int_restore;
// 2756 
// 2757         st.chip_cfg.int_motion_only = 1;
        MOV     DPTR,#st + 16
        MOV     A,#0x1
        LCALL   ??Subroutine137_0 & 0xFFFF
// 2758         return 0;
// 2759 #elif defined MPU6500
// 2760         /* Disable hardware interrupts. */
// 2761         set_int_enable(0);
// 2762 
// 2763         /* Enter full-power accel-only mode, no FIFO/DMP. */
// 2764         data[0] = 0;
// 2765         data[1] = 0;
// 2766         data[2] = BIT_STBY_XYZG;
// 2767         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 3, data))
// 2768             goto lp_int_restore;
// 2769 
// 2770         /* Set motion threshold. */
// 2771         data[0] = thresh_hw;
// 2772         if (i2c_write(st.hw->addr, st.reg->motion_thr, 1, data))
// 2773             goto lp_int_restore;
// 2774 
// 2775         /* Set wake frequency. */
// 2776         if (lpa_freq == 1)
// 2777             data[0] = INV_LPA_1_25HZ;
// 2778         else if (lpa_freq == 2)
// 2779             data[0] = INV_LPA_2_5HZ;
// 2780         else if (lpa_freq <= 5)
// 2781             data[0] = INV_LPA_5HZ;
// 2782         else if (lpa_freq <= 10)
// 2783             data[0] = INV_LPA_10HZ;
// 2784         else if (lpa_freq <= 20)
// 2785             data[0] = INV_LPA_20HZ;
// 2786         else if (lpa_freq <= 40)
// 2787             data[0] = INV_LPA_40HZ;
// 2788         else if (lpa_freq <= 80)
// 2789             data[0] = INV_LPA_80HZ;
// 2790         else if (lpa_freq <= 160)
// 2791             data[0] = INV_LPA_160HZ;
// 2792         else if (lpa_freq <= 320)
// 2793             data[0] = INV_LPA_320HZ;
// 2794         else
// 2795             data[0] = INV_LPA_640HZ;
// 2796         if (i2c_write(st.hw->addr, st.reg->lp_accel_odr, 1, data))
// 2797             goto lp_int_restore;
// 2798 
// 2799         /* Enable motion interrupt (MPU6500 version). */
// 2800         data[0] = BITS_WOM_EN;
// 2801         if (i2c_write(st.hw->addr, st.reg->accel_intel, 1, data))
// 2802             goto lp_int_restore;
// 2803 
// 2804         /* Enable cycle mode. */
// 2805         data[0] = BIT_LPA_CYCLE;
// 2806         if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, data))
// 2807             goto lp_int_restore;
// 2808 
// 2809         /* Enable interrupt. */
// 2810         data[0] = BIT_MOT_INT_EN;
// 2811         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, data))
// 2812             goto lp_int_restore;
// 2813 
// 2814         st.chip_cfg.int_motion_only = 1;
// 2815         return 0;
// 2816 #endif
// 2817     } else {
??CrossCallReturnLabel_300:
        SJMP    ??mpu_lp_motion_interrupt_7
// 2818         /* Don't "restore" the previous state if no state has been saved. */
// 2819         int ii;
// 2820         char *cache_ptr = (char*)&st.chip_cfg.cache;
// 2821         for (ii = 0; ii < sizeof(st.chip_cfg.cache); ii++) {
??mpu_lp_motion_interrupt_0:
        MOV     R0,#0x0
        MOV     R1,#0x0
// 2822             if (cache_ptr[ii] != 0)
??mpu_lp_motion_interrupt_16:
        MOV     A,#(st + 17) & 0xff
        ADD     A,R0
        MOV     DPL,A
        MOV     A,#((st + 17) >> 8) & 0xff
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??mpu_lp_motion_interrupt_11
// 2823                 goto lp_int_restore;
// 2824         }
        MOV     A,R0
        ADD     A,#0x1
        INC     R0
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R1,A
        CLR     C
        MOV     A,R0
        SUBB    A,#0xa
        MOV     A,R1
        SUBB    A,#0x0
        JC      $+5
        LJMP    ??mpu_lp_motion_interrupt_6 & 0xFFFF
        SJMP    ??mpu_lp_motion_interrupt_16
// 2825         /* If we reach this point, motion interrupt mode hasn't been used yet. */
// 2826         return -1;
// 2827     }
// 2828 lp_int_restore:
// 2829     /* Set to invalid values to ensure no I2C writes are skipped. */
// 2830     st.chip_cfg.gyro_fsr = 0xFF;
??mpu_lp_motion_interrupt_11:
        LCALL   ?Subroutine47 & 0xFFFF
// 2831     st.chip_cfg.accel_fsr = 0xFF;
// 2832     st.chip_cfg.lpf = 0xFF;
// 2833     st.chip_cfg.sample_rate = 0xFFFF;
// 2834     st.chip_cfg.sensors = 0xFF;
// 2835     st.chip_cfg.fifo_enable = 0xFF;
// 2836     st.chip_cfg.clk_src = INV_CLK_PLL;
// 2837     mpu_set_sensors(st.chip_cfg.cache.sensors_on);
??CrossCallReturnLabel_61:
        ; Setup parameters for call to function mpu_set_sensors
        MOV     DPTR,#st + 24
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??mpu_set_sensors?relay
// 2838     mpu_set_gyro_fsr(st.chip_cfg.cache.gyro_fsr);
        ; Setup parameters for call to function mpu_set_gyro_fsr
        MOV     DPTR,#st + 17
        LCALL   ?Subroutine42 & 0xFFFF
// 2839     mpu_set_accel_fsr(st.chip_cfg.cache.accel_fsr);
??CrossCallReturnLabel_53:
        ; Setup parameters for call to function mpu_set_accel_fsr
        MOV     DPTR,#st + 19
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??mpu_set_accel_fsr?relay
// 2840     mpu_set_lpf(st.chip_cfg.cache.lpf);
        ; Setup parameters for call to function mpu_set_lpf
        MOV     DPTR,#st + 20
        LCALL   ?Subroutine43 & 0xFFFF
// 2841     mpu_set_sample_rate(st.chip_cfg.cache.sample_rate);
??CrossCallReturnLabel_55:
        ; Setup parameters for call to function mpu_set_sample_rate
        MOV     DPTR,#st + 22
        LCALL   ?Subroutine35 & 0xFFFF
// 2842     mpu_configure_fifo(st.chip_cfg.cache.fifo_sensors);
??CrossCallReturnLabel_30:
        ; Setup parameters for call to function mpu_configure_fifo
        MOV     DPTR,#st + 25
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??mpu_configure_fifo?relay
// 2843 
// 2844     if (st.chip_cfg.cache.dmp_on)
        MOV     DPTR,#st + 26
        MOVX    A,@DPTR
        JZ      ??mpu_lp_motion_interrupt_17
// 2845         mpu_set_dmp_state(1);
        ; Setup parameters for call to function mpu_set_dmp_state
        MOV     R1,#0x1
        LCALL   ??mpu_set_dmp_state?relay
// 2846 
// 2847 #ifdef MPU6500
// 2848     /* Disable motion interrupt (MPU6500 version). */
// 2849     data[0] = 0;
// 2850     if (i2c_write(st.hw->addr, st.reg->accel_intel, 1, data))
// 2851         goto lp_int_restore;
// 2852 #endif
// 2853 
// 2854     st.chip_cfg.int_motion_only = 0;
??mpu_lp_motion_interrupt_17:
        MOV     DPTR,#st + 16
        CLR     A
        MOVX    @DPTR,A
// 2855     return 0;
        MOV     R2,A
        MOV     R3,A
??mpu_lp_motion_interrupt_7:
        MOV     A,#0x3
        LJMP    ??Subroutine135_0 & 0xFFFF
        CFI EndBlock cfiBlock902
// 2856 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
        CFI Block cfiCond903 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_296
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond904 Using cfiCommon0
        CFI (cfiCond904) NoFunction
        CFI (cfiCond904) Conditional ??CrossCallReturnLabel_297
        CFI (cfiCond904) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond904) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond904) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond904) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond904) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond904) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond904) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond904) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond904) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond904) CFA_SP SP+0
        CFI (cfiCond904) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker905 Using cfiCommon1
        CFI (cfiPicker905) NoFunction
        CFI (cfiPicker905) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        CFI EndBlock cfiCond903
        CFI EndBlock cfiCond904
        CFI EndBlock cfiPicker905
        REQUIRE ??Subroutine137_0
        ; // Fall through to label ??Subroutine137_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine137_0:
        CFI Block cfiCond906 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_298
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond907 Using cfiCommon0
        CFI (cfiCond907) NoFunction
        CFI (cfiCond907) Conditional ??CrossCallReturnLabel_299
        CFI (cfiCond907) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond907) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond907) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond907) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond907) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond907) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond907) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond907) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond907) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond907) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond907) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond907) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond907) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond907) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond907) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond907) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond907) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond907) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond907) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond907) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond907) CFA_SP SP+0
        CFI (cfiCond907) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond908 Using cfiCommon0
        CFI (cfiCond908) NoFunction
        CFI (cfiCond908) Conditional ??CrossCallReturnLabel_300
        CFI (cfiCond908) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond908) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond908) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond908) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond908) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond908) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond908) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond908) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond908) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond908) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond908) CFA_SP SP+0
        CFI (cfiCond908) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond909 Using cfiCommon0
        CFI (cfiCond909) NoFunction
        CFI (cfiCond909) Conditional ??CrossCallReturnLabel_296
        CFI (cfiCond909) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond909) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond909) CFA_SP SP+-5
        CFI Block cfiCond910 Using cfiCommon0
        CFI (cfiCond910) NoFunction
        CFI (cfiCond910) Conditional ??CrossCallReturnLabel_297
        CFI (cfiCond910) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond910) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond910) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond910) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond910) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond910) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond910) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond910) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond910) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond910) CFA_SP SP+0
        CFI (cfiCond910) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker911 Using cfiCommon1
        CFI (cfiPicker911) NoFunction
        CFI (cfiPicker911) Picker
        MOVX    @DPTR,A
        MOV     R2,#0x0
        MOV     R3,#0x0
        RET
        CFI EndBlock cfiCond906
        CFI EndBlock cfiCond907
        CFI EndBlock cfiCond908
        CFI EndBlock cfiCond909
        CFI EndBlock cfiCond910
        CFI EndBlock cfiPicker911

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
        CFI Block cfiCond912 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_62
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond913 Using cfiCommon0
        CFI (cfiCond913) NoFunction
        CFI (cfiCond913) Conditional ??CrossCallReturnLabel_63
        CFI (cfiCond913) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond913) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond913) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond913) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond913) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond913) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond913) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond913) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond913) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond913) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond913) CFA_SP SP+0
        CFI (cfiCond913) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker914 Using cfiCommon1
        CFI (cfiPicker914) NoFunction
        CFI (cfiPicker914) Picker
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_134:
        MOV     DPTR,#st
        RET
        CFI EndBlock cfiCond912
        CFI EndBlock cfiCond913
        CFI EndBlock cfiPicker914

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine90:
        CFI Block cfiCond915 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_137
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond916 Using cfiCommon0
        CFI (cfiCond916) NoFunction
        CFI (cfiCond916) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_138
        CFI (cfiCond916) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond916) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond916) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond916) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond916) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond916) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond916) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond916) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond916) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond916) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond916) CFA_SP SP+0
        CFI (cfiCond916) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond917 Using cfiCommon0
        CFI (cfiCond917) NoFunction
        CFI (cfiCond917) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_139
        CFI (cfiCond917) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond917) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond917) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond917) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond917) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond917) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond917) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond917) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond917) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond917) CFA_SP SP+0
        CFI (cfiCond917) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond918 Using cfiCommon0
        CFI (cfiCond918) NoFunction
        CFI (cfiCond918) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_140
        CFI (cfiCond918) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond918) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond918) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond918) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond918) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond918) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond918) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond918) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond918) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond918) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond918) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond918) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond918) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond918) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond918) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond918) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond918) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond918) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond918) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond918) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond918) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond918) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond918) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond918) CFA_SP SP+0
        CFI (cfiCond918) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond919 Using cfiCommon0
        CFI (cfiCond919) NoFunction
        CFI (cfiCond919) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_62
        CFI (cfiCond919) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond919) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond919) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond919) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond919) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond919) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond919) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond919) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond919) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond919) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond919) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond919) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond919) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond919) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond919) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond919) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond919) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond919) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond919) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond919) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond919) CFA_SP SP+0
        CFI (cfiCond919) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond920 Using cfiCommon0
        CFI (cfiCond920) NoFunction
        CFI (cfiCond920) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_63
        CFI (cfiCond920) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond920) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond920) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond920) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond920) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond920) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond920) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond920) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond920) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond920) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond920) CFA_SP SP+0
        CFI (cfiCond920) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker921 Using cfiCommon1
        CFI (cfiPicker921) NoFunction
        CFI (cfiPicker921) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_136:
        MOV     R3,#0x2
        RET
        CFI EndBlock cfiCond915
        CFI EndBlock cfiCond916
        CFI EndBlock cfiCond917
        CFI EndBlock cfiCond918
        CFI EndBlock cfiCond919
        CFI EndBlock cfiCond920
        CFI EndBlock cfiPicker921

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine102:
        CFI Block cfiCond922 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_68
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond923 Using cfiCommon0
        CFI (cfiCond923) NoFunction
        CFI (cfiCond923) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_69
        CFI (cfiCond923) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond923) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond923) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond923) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond923) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond923) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond923) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond923) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond923) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond923) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond923) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond923) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond923) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond923) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond923) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond923) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond923) CFA_SP SP+0
        CFI (cfiCond923) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond924 Using cfiCommon0
        CFI (cfiCond924) NoFunction
        CFI (cfiCond924) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_137
        CFI (cfiCond924) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond924) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond924) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond924) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond924) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond924) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond924) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond924) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond924) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond924) CFA_SP SP+0
        CFI (cfiCond924) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond925 Using cfiCommon0
        CFI (cfiCond925) NoFunction
        CFI (cfiCond925) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_138
        CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond925) CFA_SP SP+0
        CFI (cfiCond925) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond926 Using cfiCommon0
        CFI (cfiCond926) NoFunction
        CFI (cfiCond926) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_139
        CFI (cfiCond926) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond926) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond926) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond926) CFA_SP SP+0
        CFI (cfiCond926) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond927 Using cfiCommon0
        CFI (cfiCond927) NoFunction
        CFI (cfiCond927) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_140
        CFI (cfiCond927) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond927) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond927) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond927) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond927) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond927) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond927) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond927) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond927) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond927) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond927) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond927) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond927) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond927) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond927) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond927) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond927) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond927) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond927) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond927) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond927) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond927) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond927) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond927) CFA_SP SP+0
        CFI (cfiCond927) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond928 Using cfiCommon0
        CFI (cfiCond928) NoFunction
        CFI (cfiCond928) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_62
        CFI (cfiCond928) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond928) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond928) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond928) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond928) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond928) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond928) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond928) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond928) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond928) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond928) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond928) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond928) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond928) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond928) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond928) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond928) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond928) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond928) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond928) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond928) CFA_SP SP+0
        CFI (cfiCond928) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond929 Using cfiCommon0
        CFI (cfiCond929) NoFunction
        CFI (cfiCond929) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_63
        CFI (cfiCond929) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond929) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond929) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond929) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond929) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond929) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond929) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond929) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond929) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond929) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond929) CFA_SP SP+0
        CFI (cfiCond929) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker930 Using cfiCommon1
        CFI (cfiPicker930) NoFunction
        CFI (cfiPicker930) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function MPU_Read_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        ; Setup parameters for call to function MPU_Write_Len
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        RET
        CFI EndBlock cfiCond922
        CFI EndBlock cfiCond923
        CFI EndBlock cfiCond924
        CFI EndBlock cfiCond925
        CFI EndBlock cfiCond926
        CFI EndBlock cfiCond927
        CFI EndBlock cfiCond928
        CFI EndBlock cfiCond929
        CFI EndBlock cfiPicker930

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
        CFI Block cfiCond931 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_60
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond932 Using cfiCommon0
        CFI (cfiCond932) NoFunction
        CFI (cfiCond932) Conditional ??CrossCallReturnLabel_61
        CFI (cfiCond932) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond932) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond932) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond932) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond932) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond932) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond932) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond932) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond932) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond932) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond932) CFA_SP SP+0
        CFI (cfiCond932) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker933 Using cfiCommon1
        CFI (cfiPicker933) NoFunction
        CFI (cfiPicker933) Picker
        MOV     DPTR,#st + 4
        MOV     A,#-0x1
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_130:
        MOV     DPTR,#st + 6
        MOVX    @DPTR,A
        MOV     DPTR,#st + 11
        MOVX    @DPTR,A
        MOV     DPTR,#st + 8
        MOV     A,#0x1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond931
        CFI EndBlock cfiCond932
        CFI EndBlock cfiPicker933

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine91:
        CFI Block cfiCond934 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_129
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond935 Using cfiCommon0
        CFI (cfiCond935) NoFunction
        CFI (cfiCond935) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_60
        CFI (cfiCond935) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond935) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond935) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond935) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond935) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond935) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond935) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond935) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond935) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond935) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond935) CFA_SP SP+0
        CFI (cfiCond935) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond936 Using cfiCommon0
        CFI (cfiCond936) NoFunction
        CFI (cfiCond936) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_61
        CFI (cfiCond936) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond936) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond936) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond936) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond936) CFA_SP SP+0
        CFI (cfiCond936) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker937 Using cfiCommon1
        CFI (cfiPicker937) NoFunction
        CFI (cfiPicker937) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        MOV     DPTR,#st + 7
        MOVX    @DPTR,A
        MOV     DPTR,#st + 9
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond934
        CFI EndBlock cfiCond935
        CFI EndBlock cfiCond936
        CFI EndBlock cfiPicker937

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
        CFI Block cfiCond938 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_301
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond939 Using cfiCommon0
        CFI (cfiCond939) NoFunction
        CFI (cfiCond939) Conditional ??CrossCallReturnLabel_302
        CFI (cfiCond939) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond939) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond939) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond939) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond939) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond939) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond939) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond939) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond939) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond939) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond939) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond939) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond939) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond939) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond939) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond939) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond939) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond939) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond939) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond939) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond939) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond939) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond939) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond939) CFA_SP SP+0
        CFI (cfiCond939) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker940 Using cfiCommon1
        CFI (cfiPicker940) NoFunction
        CFI (cfiPicker940) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        CFI EndBlock cfiCond938
        CFI EndBlock cfiCond939
        CFI EndBlock cfiPicker940
        REQUIRE ??Subroutine138_0
        ; // Fall through to label ??Subroutine138_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine138_0:
        CFI Block cfiCond941 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_303
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond942 Using cfiCommon0
        CFI (cfiCond942) NoFunction
        CFI (cfiCond942) Conditional ??CrossCallReturnLabel_304
        CFI (cfiCond942) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond942) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond942) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond942) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond942) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond942) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond942) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond942) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond942) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond942) CFA_SP SP+0
        CFI (cfiCond942) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond943 Using cfiCommon0
        CFI (cfiCond943) NoFunction
        CFI (cfiCond943) Conditional ??CrossCallReturnLabel_305
        CFI (cfiCond943) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond943) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond943) CFA_SP SP+-5
        CFI (cfiCond943) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond944 Using cfiCommon0
        CFI (cfiCond944) NoFunction
        CFI (cfiCond944) Conditional ??CrossCallReturnLabel_306
        CFI (cfiCond944) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond944) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond944) CFA_SP SP+-5
        CFI (cfiCond944) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond945 Using cfiCommon0
        CFI (cfiCond945) NoFunction
        CFI (cfiCond945) Conditional ??CrossCallReturnLabel_307
        CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond945) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond945) CFA_SP SP+0
        CFI (cfiCond945) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond946 Using cfiCommon0
        CFI (cfiCond946) NoFunction
        CFI (cfiCond946) Conditional ??CrossCallReturnLabel_301
        CFI (cfiCond946) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond946) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond946) CFA_SP SP+-5
        CFI (cfiCond946) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond947 Using cfiCommon0
        CFI (cfiCond947) NoFunction
        CFI (cfiCond947) Conditional ??CrossCallReturnLabel_302
        CFI (cfiCond947) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond947) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond947) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond947) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond947) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond947) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond947) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond947) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond947) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond947) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond947) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond947) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond947) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond947) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond947) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond947) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond947) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond947) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond947) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond947) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond947) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond947) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond947) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond947) CFA_SP SP+0
        CFI (cfiCond947) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiPicker948 Using cfiCommon1
        CFI (cfiPicker948) NoFunction
        CFI (cfiPicker948) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_310:
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0xf
        RET
        CFI EndBlock cfiCond941
        CFI EndBlock cfiCond942
        CFI EndBlock cfiCond943
        CFI EndBlock cfiCond944
        CFI EndBlock cfiCond945
        CFI EndBlock cfiCond946
        CFI EndBlock cfiCond947
        CFI EndBlock cfiPicker948

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
        CFI Block cfiCond949 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_54
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond950 Using cfiCommon0
        CFI (cfiCond950) NoFunction
        CFI (cfiCond950) Conditional ??CrossCallReturnLabel_55
        CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond950) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond950) CFA_SP SP+0
        CFI (cfiCond950) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker951 Using cfiCommon1
        CFI (cfiPicker951) NoFunction
        CFI (cfiPicker951) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_128:
        LCALL   ??mpu_set_lpf?relay
        RET
        CFI EndBlock cfiCond949
        CFI EndBlock cfiCond950
        CFI EndBlock cfiPicker951

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine87:
        CFI Block cfiCond952 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_126, ??CrossCallReturnLabel_36
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond953 Using cfiCommon0
        CFI (cfiCond953) NoFunction
        CFI (cfiCond953) Conditional ??CrossCallReturnLabel_126, ??CrossCallReturnLabel_37
        CFI (cfiCond953) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond953) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond953) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond953) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond953) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond953) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond953) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond953) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond953) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond953) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond953) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond953) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond953) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond953) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond953) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond953) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond953) CFA_SP SP+0
        CFI (cfiCond953) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond954 Using cfiCommon0
        CFI (cfiCond954) NoFunction
        CFI (cfiCond954) Conditional ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_28
        CFI (cfiCond954) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond954) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond954) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond954) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond954) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond954) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond954) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond954) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond954) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond954) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond954) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond954) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond954) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond954) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond954) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond954) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond954) CFA_SP SP+0
        CFI (cfiCond954) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond955 Using cfiCommon0
        CFI (cfiCond955) NoFunction
        CFI (cfiCond955) Conditional ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_29
        CFI (cfiCond955) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond955) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond955) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond955) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond955) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond955) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond955) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond955) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond955) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond955) CFA_SP SP+0
        CFI (cfiCond955) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond956 Using cfiCommon0
        CFI (cfiCond956) NoFunction
        CFI (cfiCond956) Conditional ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_30
        CFI (cfiCond956) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond956) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond956) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond956) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond956) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond956) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond956) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond956) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond956) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond956) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond956) CFA_SP SP+0
        CFI (cfiCond956) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond957 Using cfiCommon0
        CFI (cfiCond957) NoFunction
        CFI (cfiCond957) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_54
        CFI (cfiCond957) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond957) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond957) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond957) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond957) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond957) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond957) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond957) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond957) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond957) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond957) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond957) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond957) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond957) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond957) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond957) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond957) CFA_SP SP+0
        CFI (cfiCond957) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond958 Using cfiCommon0
        CFI (cfiCond958) NoFunction
        CFI (cfiCond958) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_55
        CFI (cfiCond958) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond958) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond958) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond958) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond958) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond958) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond958) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond958) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond958) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond958) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond958) CFA_SP SP+0
        CFI (cfiCond958) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond959 Using cfiCommon0
        CFI (cfiCond959) NoFunction
        CFI (cfiCond959) Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_52
        CFI (cfiCond959) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond959) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond959) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond959) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond959) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond959) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond959) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond959) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond959) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond959) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond959) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond959) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond959) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond959) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond959) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond959) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond959) CFA_SP SP+0
        CFI (cfiCond959) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond960 Using cfiCommon0
        CFI (cfiCond960) NoFunction
        CFI (cfiCond960) Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_53
        CFI (cfiCond960) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond960) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond960) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond960) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond960) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond960) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond960) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond960) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond960) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond960) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond960) CFA_SP SP+0
        CFI (cfiCond960) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker961 Using cfiCommon1
        CFI (cfiPicker961) NoFunction
        CFI (cfiPicker961) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        RET
        CFI EndBlock cfiCond952
        CFI EndBlock cfiCond953
        CFI EndBlock cfiCond954
        CFI EndBlock cfiCond955
        CFI EndBlock cfiCond956
        CFI EndBlock cfiCond957
        CFI EndBlock cfiCond958
        CFI EndBlock cfiCond959
        CFI EndBlock cfiCond960
        CFI EndBlock cfiPicker961

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
        CFI Block cfiCond962 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_52
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond963 Using cfiCommon0
        CFI (cfiCond963) NoFunction
        CFI (cfiCond963) Conditional ??CrossCallReturnLabel_53
        CFI (cfiCond963) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond963) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond963) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond963) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond963) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond963) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond963) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond963) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond963) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond963) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond963) CFA_SP SP+0
        CFI (cfiCond963) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker964 Using cfiCommon1
        CFI (cfiPicker964) NoFunction
        CFI (cfiPicker964) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_127:
        LCALL   ??mpu_set_gyro_fsr?relay
        RET
        CFI EndBlock cfiCond962
        CFI EndBlock cfiCond963
        CFI EndBlock cfiPicker964
// 2857 
// 2858 //q30格式,long转float时的除数.
// 2859 #define q30  1073741824.0f
// 2860 
// 2861 //陀螺仪方向设置

        RSEG XDATA_I:XDATA:NOROOT(0)
// 2862 static signed char gyro_orientation[9] = { 1, 0, 0,
gyro_orientation:
        DATA8
        DS 9
        REQUIRE `?<Initializer for gyro_orientation>`
        REQUIRE __INIT_XDATA_I
// 2863                                            0, 1, 0,
// 2864                                            0, 0, 1};
// 2865 //MPU6050自测试
// 2866 //返回值:0,正常
// 2867 //    其他,失败

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2868 u8 run_self_test(void)
run_self_test:
        CFI Block cfiBlock965 Using cfiCommon0
        CFI Function run_self_test
        CODE
// 2869 {
        FUNCALL run_self_test, mpu_run_self_test
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL run_self_test, mpu_get_gyro_sens
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL run_self_test, dmp_set_gyro_bias
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL run_self_test, mpu_get_accel_sens
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL run_self_test, dmp_set_accel_bias
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 30
        MOV     A,#-0x1e
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 46)
// 2870 	int result;
// 2871 	//char test_packet[4] = {0};
// 2872 	long gyro[3], accel[3]; 
// 2873 	result = mpu_run_self_test(gyro, accel);
// 2874 	if (result == 0x3) 
        ; Setup parameters for call to function mpu_run_self_test
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_run_self_test?relay
        MOV     ?V0 + 0,R2
        MOV     A,#0x3
        XRL     A,?V0 + 0
        JNZ     ??run_self_test_0
        MOV     A,R3
??run_self_test_0:
        JZ      $+5
        LJMP    ??run_self_test_1 & 0xFFFF
// 2875 	{
// 2876 		/* Test passed. We can trust the gyro data here, so let's push it down
// 2877 		* to the DMP.
// 2878 		*/
// 2879 		float sens;
// 2880 		unsigned short accel_sens;
// 2881 		mpu_get_gyro_sens(&sens);
        ; Setup parameters for call to function mpu_get_gyro_sens
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_get_gyro_sens?relay
// 2882 		gyro[0] = (long)(gyro[0] * sens);
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 2883 		gyro[1] = (long)(gyro[1] * sens);
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 2884 		gyro[2] = (long)(gyro[2] * sens);
        MOV     A,#0x1a
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     A,#0x1a
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 2885 		dmp_set_gyro_bias(gyro);
        ; Setup parameters for call to function dmp_set_gyro_bias
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??dmp_set_gyro_bias?relay
// 2886 		mpu_get_accel_sens(&accel_sens);
        ; Setup parameters for call to function mpu_get_accel_sens
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_get_accel_sens?relay
// 2887 		accel[0] *= accel_sens;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?L_MUL
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_TO_X
// 2888 		accel[1] *= accel_sens;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?L_MUL
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_TO_X
// 2889 		accel[2] *= accel_sens;
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?L_MUL
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_TO_X
// 2890 		dmp_set_accel_bias(accel);
        ; Setup parameters for call to function dmp_set_accel_bias
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??dmp_set_accel_bias?relay
// 2891 		return 0;
        MOV     R1,#0x0
        SJMP    ??run_self_test_2
// 2892 	}else return 1;
??run_self_test_1:
        MOV     R1,#0x1
??run_self_test_2:
        MOV     A,#0x1e
        LJMP    ?Subroutine2 & 0xFFFF
        CFI EndBlock cfiBlock965
// 2893 }
// 2894 //陀螺仪方向控制

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2895 unsigned short inv_orientation_matrix_to_scalar(
inv_orientation_matrix_to_scalar:
        CFI Block cfiBlock966 Using cfiCommon0
        CFI Function inv_orientation_matrix_to_scalar
        CODE
// 2896     const signed char *mtx)
// 2897 {
        FUNCALL inv_orientation_matrix_to_scalar, inv_row_2_scale
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL inv_orientation_matrix_to_scalar, inv_row_2_scale
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL inv_orientation_matrix_to_scalar, inv_row_2_scale
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2898     unsigned short scalar; 
// 2899     /*
// 2900        XYZ  010_001_000 Identity Matrix
// 2901        XZY  001_010_000
// 2902        YXZ  010_000_001
// 2903        YZX  000_010_001
// 2904        ZXY  001_000_010
// 2905        ZYX  000_001_010
// 2906      */
// 2907 
// 2908     scalar = inv_row_2_scale(mtx);
        ; Setup parameters for call to function inv_row_2_scale
        LCALL   ??inv_row_2_scale?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 2909     scalar |= inv_row_2_scale(mtx + 3) << 3;
        ; Setup parameters for call to function inv_row_2_scale
        MOV     A,R6
        ADD     A,#0x3
        LCALL   ?Subroutine59 & 0xFFFF
// 2910     scalar |= inv_row_2_scale(mtx + 6) << 6;
// 2911 
// 2912 
// 2913     return scalar;
??CrossCallReturnLabel_78:
        MOV     A,#0x3
        MOV     R0,#?V0 + 2
        LCALL   ?S_SHL
        MOV     A,?V0 + 0
        ORL     A,?V0 + 2
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
        ORL     A,?V0 + 3
        MOV     ?V0 + 1,A
        ; Setup parameters for call to function inv_row_2_scale
        MOV     A,R6
        ADD     A,#0x6
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_79:
        MOV     A,#0x6
        MOV     R0,#?V0 + 2
        LCALL   ?S_SHL
        MOV     A,?V0 + 0
        ORL     A,?V0 + 2
        MOV     R2,A
        MOV     A,?V0 + 1
        ORL     A,?V0 + 3
        MOV     R3,A
        LJMP    ?Subroutine5 & 0xFFFF
        CFI EndBlock cfiBlock966
// 2914 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
        CFI Block cfiCond967 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_78
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond968 Using cfiCommon0
        CFI (cfiCond968) NoFunction
        CFI (cfiCond968) Conditional ??CrossCallReturnLabel_79
        CFI (cfiCond968) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond968) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond968) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond968) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond968) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond968) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond968) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond968) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond968) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond968) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond968) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond968) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond968) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond968) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond968) CFA_SP SP+0
        CFI (cfiCond968) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker969 Using cfiCommon1
        CFI (cfiPicker969) NoFunction
        CFI (cfiPicker969) Picker
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??inv_row_2_scale?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        RET
        CFI EndBlock cfiCond967
        CFI EndBlock cfiCond968
        CFI EndBlock cfiPicker969
// 2915 //方向转换

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2916 unsigned short inv_row_2_scale(const signed char *row)
inv_row_2_scale:
        CFI Block cfiBlock970 Using cfiCommon0
        CFI Function inv_row_2_scale
        CODE
// 2917 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2918     unsigned short b;
// 2919 
// 2920     if (row[0] > 0)
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine140_0 & 0xFFFF
??CrossCallReturnLabel_318:
        JC      ??inv_row_2_scale_0
// 2921         b = 0;
        MOV     R2,#0x0
        SJMP    ??inv_row_2_scale_1
// 2922     else if (row[0] < 0)
??inv_row_2_scale_0:
        LCALL   ??Subroutine139_0 & 0xFFFF
??CrossCallReturnLabel_311:
        JNC     ??inv_row_2_scale_2
// 2923         b = 4;
        MOV     R2,#0x4
        SJMP    ??inv_row_2_scale_1
// 2924     else if (row[1] > 0)
??inv_row_2_scale_2:
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_319:
        JC      ??inv_row_2_scale_3
// 2925         b = 1;
        MOV     R2,#0x1
        SJMP    ??inv_row_2_scale_1
// 2926     else if (row[1] < 0)
??inv_row_2_scale_3:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_312:
        JNC     ??inv_row_2_scale_4
// 2927         b = 5;
        MOV     R2,#0x5
        SJMP    ??inv_row_2_scale_1
// 2928     else if (row[2] > 0)
??inv_row_2_scale_4:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_320:
        JC      ??inv_row_2_scale_5
// 2929         b = 2;
        MOV     R2,#0x2
        SJMP    ??inv_row_2_scale_1
// 2930     else if (row[2] < 0)
??inv_row_2_scale_5:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_313:
        JNC     ??inv_row_2_scale_6
// 2931         b = 6;
        MOV     R2,#0x6
        SJMP    ??inv_row_2_scale_1
// 2932     else
// 2933         b = 7;      // error
??inv_row_2_scale_6:
        MOV     R2,#0x7
??inv_row_2_scale_1:
        LJMP    ??Subroutine123_0 & 0xFFFF
        CFI EndBlock cfiBlock970
// 2934     return b;
// 2935 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
        CFI Block cfiCond971 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_312
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond972 Using cfiCommon0
        CFI (cfiCond972) NoFunction
        CFI (cfiCond972) Conditional ??CrossCallReturnLabel_313
        CFI (cfiCond972) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond972) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond972) CFA_SP SP+-5
        CFI Block cfiPicker973 Using cfiCommon1
        CFI (cfiPicker973) NoFunction
        CFI (cfiPicker973) Picker
        INC     DPTR
        CFI EndBlock cfiCond971
        CFI EndBlock cfiCond972
        CFI EndBlock cfiPicker973
        REQUIRE ??Subroutine139_0
        ; // Fall through to label ??Subroutine139_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine139_0:
        CFI Block cfiCond974 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_311
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond975 Using cfiCommon0
        CFI (cfiCond975) NoFunction
        CFI (cfiCond975) Conditional ??CrossCallReturnLabel_312
        CFI (cfiCond975) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond975) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond975) CFA_SP SP+-5
        CFI Block cfiCond976 Using cfiCommon0
        CFI (cfiCond976) NoFunction
        CFI (cfiCond976) Conditional ??CrossCallReturnLabel_313
        CFI (cfiCond976) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond976) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond976) CFA_SP SP+-5
        CFI Block cfiPicker977 Using cfiCommon1
        CFI (cfiPicker977) NoFunction
        CFI (cfiPicker977) Picker
        MOVX    A,@DPTR
        CLR     C
        LCALL   ??Subroutine133_0 & 0xFFFF
??CrossCallReturnLabel_317:
        RET
        CFI EndBlock cfiCond974
        CFI EndBlock cfiCond975
        CFI EndBlock cfiCond976
        CFI EndBlock cfiPicker977

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
        CFI Block cfiCond978 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_319
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond979 Using cfiCommon0
        CFI (cfiCond979) NoFunction
        CFI (cfiCond979) Conditional ??CrossCallReturnLabel_320
        CFI (cfiCond979) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond979) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond979) CFA_SP SP+-5
        CFI Block cfiPicker980 Using cfiCommon1
        CFI (cfiPicker980) NoFunction
        CFI (cfiPicker980) Picker
        INC     DPTR
        CFI EndBlock cfiCond978
        CFI EndBlock cfiCond979
        CFI EndBlock cfiPicker980
        REQUIRE ??Subroutine140_0
        ; // Fall through to label ??Subroutine140_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine140_0:
        CFI Block cfiCond981 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_318
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond982 Using cfiCommon0
        CFI (cfiCond982) NoFunction
        CFI (cfiCond982) Conditional ??CrossCallReturnLabel_319
        CFI (cfiCond982) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond982) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond982) CFA_SP SP+-5
        CFI Block cfiCond983 Using cfiCommon0
        CFI (cfiCond983) NoFunction
        CFI (cfiCond983) Conditional ??CrossCallReturnLabel_320
        CFI (cfiCond983) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond983) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond983) CFA_SP SP+-5
        CFI Block cfiPicker984 Using cfiCommon1
        CFI (cfiPicker984) NoFunction
        CFI (cfiPicker984) Picker
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,#0x1
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        RET
        CFI EndBlock cfiCond981
        CFI EndBlock cfiCond982
        CFI EndBlock cfiCond983
        CFI EndBlock cfiPicker984
// 2936 //空函数,未用到.

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2937 void mget_ms(unsigned long *time)
mget_ms:
        CFI Block cfiBlock985 Using cfiCommon0
        CFI Function mget_ms
        CODE
// 2938 {
        ; Saved register size: 0
        ; Auto size: 0
// 2939 
// 2940 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock985
// 2941 //mpu6050,dmp初始化
// 2942 //返回值:0,正常
// 2943 //    其他,失败

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2944 u8 mpu_dmp_init(void)
mpu_dmp_init:
        CFI Block cfiBlock986 Using cfiCommon0
        CFI Function mpu_dmp_init
        CODE
// 2945 {
        FUNCALL mpu_dmp_init, MPU_IIC_Init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_init, mpu_init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_init, mpu_set_sensors
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_init, mpu_configure_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_init, mpu_set_sample_rate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_init, dmp_load_motion_driver_firmware
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_init, inv_orientation_matrix_to_scalar
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_init, dmp_set_orientation
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_init, dmp_enable_feature
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_init, dmp_set_fifo_rate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_init, mpu_set_dmp_state
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2946 	u8 res=0;
// 2947 	MPU_IIC_Init(); 	//初始化IIC总线
        ; Setup parameters for call to function MPU_IIC_Init
        LCALL   ??MPU_IIC_Init?relay
// 2948 	if(mpu_init()==0)	//初始化MPU6050
        ; Setup parameters for call to function mpu_init
        LCALL   ??mpu_init?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     ??mpu_dmp_init_0
// 2949 	{	 
// 2950 		res=mpu_set_sensors(INV_XYZ_GYRO|INV_XYZ_ACCEL);//设置所需要的传感器
// 2951 		if(res)return 1; 
        ; Setup parameters for call to function mpu_set_sensors
        MOV     R1,#0x78
        LCALL   ??mpu_set_sensors?relay
        MOV     A,R2
        JZ      ??mpu_dmp_init_1
        MOV     R1,#0x1
        SJMP    ??mpu_dmp_init_2
// 2952 		res=mpu_configure_fifo(INV_XYZ_GYRO|INV_XYZ_ACCEL);//设置FIFO
// 2953 		if(res)return 2; 
??mpu_dmp_init_1:
        ; Setup parameters for call to function mpu_configure_fifo
        MOV     R1,#0x78
        LCALL   ??mpu_configure_fifo?relay
        MOV     A,R2
        JZ      ??mpu_dmp_init_3
        MOV     R1,#0x2
        SJMP    ??mpu_dmp_init_2
// 2954 		res=mpu_set_sample_rate(DEFAULT_MPU_HZ);	//设置采样率
// 2955 		if(res)return 3; 
??mpu_dmp_init_3:
        ; Setup parameters for call to function mpu_set_sample_rate
        MOV     R2,#0x64
        MOV     R3,#0x0
        LCALL   ??mpu_set_sample_rate?relay
        MOV     A,R2
        JZ      ??mpu_dmp_init_4
        MOV     R1,#0x3
        SJMP    ??mpu_dmp_init_2
// 2956 		res=dmp_load_motion_driver_firmware();		//加载dmp固件
// 2957 		if(res)return 4; 
??mpu_dmp_init_4:
        ; Setup parameters for call to function dmp_load_motion_driver_firmware
        LCALL   ??dmp_load_motion_driver_firmware?relay
        MOV     A,R2
        JZ      ??mpu_dmp_init_5
        MOV     R1,#0x4
        SJMP    ??mpu_dmp_init_2
// 2958 		res=dmp_set_orientation(inv_orientation_matrix_to_scalar(gyro_orientation));//设置陀螺仪方向
// 2959 		if(res)return 5; 
??mpu_dmp_init_5:
        ; Setup parameters for call to function dmp_set_orientation
        ; Setup parameters for call to function inv_orientation_matrix_to_scalar
        MOV     R2,#gyro_orientation & 0xff
        MOV     R3,#(gyro_orientation >> 8) & 0xff
        LCALL   ??inv_orientation_matrix_to_scalar?relay
        LCALL   ??dmp_set_orientation?relay
        MOV     A,R2
        JZ      ??mpu_dmp_init_6
        MOV     R1,#0x5
        SJMP    ??mpu_dmp_init_2
// 2960 		res=dmp_enable_feature(DMP_FEATURE_6X_LP_QUAT|DMP_FEATURE_TAP|	//设置dmp功能
// 2961 		    DMP_FEATURE_ANDROID_ORIENT|DMP_FEATURE_SEND_RAW_ACCEL|DMP_FEATURE_SEND_CAL_GYRO|
// 2962 		    DMP_FEATURE_GYRO_CAL);
// 2963 		if(res)return 6; 
??mpu_dmp_init_6:
        ; Setup parameters for call to function dmp_enable_feature
        MOV     R2,#0x73
        MOV     R3,#0x1
        LCALL   ??dmp_enable_feature?relay
        MOV     A,R2
        JZ      ??mpu_dmp_init_7
        MOV     R1,#0x6
        SJMP    ??mpu_dmp_init_2
// 2964 		res=dmp_set_fifo_rate(DEFAULT_MPU_HZ);	//设置DMP输出速率(最大不超过200Hz)
// 2965 		if(res)return 7;   
??mpu_dmp_init_7:
        ; Setup parameters for call to function dmp_set_fifo_rate
        MOV     R2,#0x64
        MOV     R3,#0x0
        LCALL   ??dmp_set_fifo_rate?relay
        MOV     A,R2
        JZ      ??mpu_dmp_init_8
        MOV     R1,#0x7
        SJMP    ??mpu_dmp_init_2
// 2966 		//res=run_self_test();		//自检
// 2967 		//if(res)return 8;    
// 2968 		res=mpu_set_dmp_state(1);	//使能DMP
// 2969 		if(res)return 9;     
??mpu_dmp_init_8:
        ; Setup parameters for call to function mpu_set_dmp_state
        MOV     R1,#0x1
        LCALL   ??mpu_set_dmp_state?relay
        MOV     A,R2
        JZ      ??mpu_dmp_init_9
        MOV     R1,#0x9
        SJMP    ??mpu_dmp_init_2
// 2970 	}else return 10;
// 2971 	return 0;
??mpu_dmp_init_9:
        MOV     R1,#0x0
        SJMP    ??mpu_dmp_init_2
??mpu_dmp_init_0:
        MOV     R1,#0xa
??mpu_dmp_init_2:
        LJMP    ??Subroutine136_0 & 0xFFFF
        CFI EndBlock cfiBlock986
// 2972 }
// 2973 //得到dmp处理后的数据(注意,本函数需要比较多堆栈,局部变量有点多)
// 2974 //pitch:俯仰角 精度:0.1°   范围:-90.0° <---> +90.0°
// 2975 //roll:横滚角  精度:0.1°   范围:-180.0°<---> +180.0°
// 2976 //yaw:航向角   精度:0.1°   范围:-180.0°<---> +180.0°
// 2977 //返回值:0,正常
// 2978 //    其他,失败

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2979 u8 mpu_dmp_get_data(float *pitch,float *roll,float *yaw)
mpu_dmp_get_data:
        CFI Block cfiBlock987 Using cfiCommon0
        CFI Function mpu_dmp_get_data
        CODE
// 2980 {
        FUNCALL mpu_dmp_get_data, dmp_read_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 187, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 187, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_get_data, asin
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 179, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 179, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_get_data, atan2
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 183, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 183, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_get_data, atan2
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 183, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 183, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_get_data, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 207, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 207, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_get_data, osal_strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 179, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 179, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_dmp_get_data, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 179, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 179, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 155
        MOV     A,#0x65
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 179)
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
// 2981 	float q0=1.0f,q1=0.0f,q2=0.0f,q3=0.0f;
// 2982 	unsigned long sensor_timestamp;
// 2983 	short gyro[3], accel[3], sensors;
// 2984 	unsigned char more;
// 2985 	long quat[4]; 
// 2986 	if(dmp_read_fifo(gyro, accel, quat, &sensor_timestamp, &sensors,&more))return 1;	 
        ; Setup parameters for call to function dmp_read_fifo
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 181)
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 183)
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 185)
        MOV     A,#0x21
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 187)
        MOV     A,#0x33
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x39
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??dmp_read_fifo?relay
        MOV     A,#0x8
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 179)
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??mpu_dmp_get_data_0
        MOV     R1,#0x1
        LJMP    ??mpu_dmp_get_data_1 & 0xFFFF
// 2987 	/* Gyro and accel data are written to the FIFO by the DMP in chip frame and hardware units.
// 2988 	 * This behavior is convenient because it keeps the gyro and accel outputs of dmp_read_fifo and mpu_read_fifo consistent.
// 2989 	**/
// 2990 	/*if (sensors & INV_XYZ_GYRO )
// 2991 	send_packet(PACKET_TYPE_GYRO, gyro);
// 2992 	if (sensors & INV_XYZ_ACCEL)
// 2993 	send_packet(PACKET_TYPE_ACCEL, accel); */
// 2994 	/* Unlike gyro and accel, quaternions are written to the FIFO in the body frame, q30.
// 2995 	 * The orientation is set by the scalar passed to dmp_set_orientation during initialization. 
// 2996 	**/
// 2997 	if(sensors&INV_WXYZ_QUAT) 
??mpu_dmp_get_data_0:
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x1
        JNZ     $+5
        LJMP    ??mpu_dmp_get_data_2 & 0xFFFF
// 2998 	{
// 2999 		q0 = quat[0] / q30;	//q30格式转换为浮点数
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_30800000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 3000 		q1 = quat[1] / q30;
        MOV     A,#0x1f
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_30800000
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_MUL
// 3001 		q2 = quat[2] / q30;
        MOV     A,#0x23
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_30800000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 3002 		q3 = quat[3] / q30; 
        MOV     A,#0x27
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_30800000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 3003 		//计算得到俯仰角/横滚角/航向角
// 3004 		*pitch = asin(-2 * q1 * q3 + 2 * q0* q2)* 57.3;	// pitch
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_40000000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,?V0 + 5
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,?V0 + 7
        MOV     DPTR,#__Constant_c0000000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        ; Setup parameters for call to function asin
        MOV     ?V0 + 8,?V0 + 0
        MOV     ?V0 + 9,?V0 + 1
        MOV     ?V0 + 10,?V0 + 2
        MOV     ?V0 + 11,?V0 + 3
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 12
        LCALL   ?FLT_MUL
        PUSH    ?V0 + 8
        CFI CFA_SP SP+-1
        PUSH    ?V0 + 9
        CFI CFA_SP SP+-2
        PUSH    ?V0 + 10
        CFI CFA_SP SP+-3
        PUSH    ?V0 + 11
        CFI CFA_SP SP+-4
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 12
        LCALL   ?L_MOV_X
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 12
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        POP     ?V0 + 11
        CFI CFA_SP SP+-3
        POP     ?V0 + 10
        CFI CFA_SP SP+-2
        POP     ?V0 + 9
        CFI CFA_SP SP+-1
        POP     ?V0 + 8
        CFI CFA_SP SP+0
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 12
        LCALL   ?FLT_ADD
        MOV     R2,?V0 + 8
        MOV     R3,?V0 + 9
        MOV     R4,?V0 + 10
        MOV     R5,?V0 + 11
        LCALL   ??asin?relay
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     ?V0 + 10,R4
        MOV     ?V0 + 11,R5
        MOV     DPTR,#__Constant_42653333
        MOV     R0,#?V0 + 12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 12
        LCALL   ?FLT_MUL
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine141_0 & 0xFFFF
??CrossCallReturnLabel_324:
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_TO_X
// 3005 		*roll  = atan2(2 * q2 * q3 + 2 * q0 * q1, -2 * q1 * q1 - 2 * q2* q2 + 1)* 57.3;	// roll
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_40000000
        MOV     R0,#?V0 + 12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 12
        LCALL   ?FLT_MUL
        ; Setup parameters for call to function atan2
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        PUSH    ?V0 + 0
        CFI CFA_SP SP+-1
        PUSH    ?V0 + 1
        CFI CFA_SP SP+-2
        PUSH    ?V0 + 2
        CFI CFA_SP SP+-3
        PUSH    ?V0 + 3
        CFI CFA_SP SP+-4
        MOV     ?V0 + 0,?V0 + 8
        MOV     ?V0 + 1,?V0 + 9
        MOV     ?V0 + 2,?V0 + 10
        MOV     ?V0 + 3,?V0 + 11
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R0,#?V0 + 12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 12
        LCALL   ?FLT_MUL
        POP     ?V0 + 15
        CFI CFA_SP SP+-3
        POP     ?V0 + 14
        CFI CFA_SP SP+-2
        POP     ?V0 + 13
        CFI CFA_SP SP+-1
        POP     ?V0 + 12
        CFI CFA_SP SP+0
        MOV     R0,#?V0 + 12
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_SUB
        MOV     DPTR,#__Constant_3f800000
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 12
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_ADD
        MOV     R0,#?V0 + 12
        LCALL   ?PUSH_XSTACK_I_FOUR
        CFI CFA_XSP16 add(XSP16, 183)
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_MUL
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_ADD
        MOV     R2,?V0 + 8
        MOV     R3,?V0 + 9
        MOV     R4,?V0 + 10
        MOV     R5,?V0 + 11
        LCALL   ??atan2?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 179)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
        MOV     DPTR,#__Constant_42653333
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine141_0 & 0xFFFF
??CrossCallReturnLabel_325:
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 3006 		*yaw   = atan2(2*(q1*q2 + q0*q3),q0*q0+q1*q1-q2*q2-q3*q3) * 57.3;	//yaw
        ; Setup parameters for call to function atan2
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_MUL
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,?V0 + 5
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,?V0 + 7
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_ADD
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R0,#?V0 + 12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 12
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_SUB
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 12
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_SUB
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_FOUR
        CFI CFA_XSP16 add(XSP16, 183)
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,?V0 + 5
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,?V0 + 7
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 12
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_ADD
        MOV     DPTR,#__Constant_40000000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        LCALL   ??atan2?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 179)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
        MOV     DPTR,#__Constant_42653333
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        MOV     A,#-0x4d
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine141_0 & 0xFFFF
??CrossCallReturnLabel_326:
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 3007 
// 3008 
// 3009     {
// 3010       extern u16 HalUARTWrite(u8 port, u8 *buf, u16 len);
// 3011       u8 buff[100]={0};
        MOV     A,#0x37
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {0}>` >> 8) & 0xff
        MOV     DPL,#`?<Constant {0}>` & 0xff
        MOV     A,#0x64
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 3012       sprintf(buff, "%f,%f,%f,%f:%f,%f,%f.\r\n",q0,q1,q2,q3,*pitch,*roll,*yaw);
        ; Setup parameters for call to function sprintf
        MOV     A,#-0x4d
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine141_0 & 0xFFFF
??CrossCallReturnLabel_327:
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 183)
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine141_0 & 0xFFFF
??CrossCallReturnLabel_328:
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 187)
        MOV     A,#0x19
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine141_0 & 0xFFFF
??CrossCallReturnLabel_329:
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 191)
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 195)
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 199)
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_FOUR
        CFI CFA_XSP16 add(XSP16, 203)
        MOV     A,#0x21
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 207)
        MOV     R4,#`?<Constant "%f,%f,%f,%f:%f,%f,%f.\\r\\n">` & 0xff
        MOV     R5,#(`?<Constant "%f,%f,%f,%f:%f,%f,%f.\\r\\n">` >> 8) & 0xff
        MOV     A,#0x53
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sprintf?relay
        MOV     A,#0x1c
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 179)
// 3013       HalUARTWrite(0, buff, osal_strlen(buff));
        ; Setup parameters for call to function HalUARTWrite
        ; Setup parameters for call to function osal_strlen
        MOV     A,#0x37
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_strlen?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,#0x37
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     R1,#0x0
        LCALL   ??HalUARTWrite?relay
// 3014     }
// 3015     
// 3016 	}else return 2;
// 3017 	return 0;
        MOV     R1,#0x0
        SJMP    ??mpu_dmp_get_data_1
??mpu_dmp_get_data_2:
        MOV     R1,#0x2
??mpu_dmp_get_data_1:
        MOV     A,#-0x65
        LJMP    ?Subroutine6 & 0xFFFF
        CFI EndBlock cfiBlock987
// 3018 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
        CFI Block cfiCond988 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_330
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond989 Using cfiCommon0
        CFI (cfiCond989) NoFunction
        CFI (cfiCond989) Conditional ??CrossCallReturnLabel_331
        CFI (cfiCond989) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond989) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond989) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond989) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond989) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond989) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond989) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond989) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond989) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond989) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond989) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond989) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond989) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond989) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond989) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond989) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond989) CFA_SP SP+0
        CFI (cfiCond989) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiPicker990 Using cfiCommon1
        CFI (cfiPicker990) NoFunction
        CFI (cfiPicker990) Picker
        MOV     DPTR,#st + 2
        CFI EndBlock cfiCond988
        CFI EndBlock cfiCond989
        CFI EndBlock cfiPicker990
        REQUIRE ??Subroutine141_0
        ; // Fall through to label ??Subroutine141_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine141_0:
        CFI Block cfiCond991 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_321
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond992 Using cfiCommon0
        CFI (cfiCond992) NoFunction
        CFI (cfiCond992) Conditional ??CrossCallReturnLabel_322
        CFI (cfiCond992) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond992) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond992) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond992) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond992) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond992) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond992) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond992) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond992) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond992) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond992) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond992) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond992) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond992) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond992) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond992) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond992) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond992) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond992) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond992) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond992) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond992) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond992) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond992) CFA_SP SP+0
        CFI (cfiCond992) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond993 Using cfiCommon0
        CFI (cfiCond993) NoFunction
        CFI (cfiCond993) Conditional ??CrossCallReturnLabel_323
        CFI (cfiCond993) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond993) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond993) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond993) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond993) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond993) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond993) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond993) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond993) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond993) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond993) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond993) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond993) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond993) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond993) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond993) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond993) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond993) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond993) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond993) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond993) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond993) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond993) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond993) CFA_SP SP+0
        CFI (cfiCond993) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond994 Using cfiCommon0
        CFI (cfiCond994) NoFunction
        CFI (cfiCond994) Conditional ??CrossCallReturnLabel_324
        CFI (cfiCond994) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond994) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond994) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond994) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond994) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond994) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond994) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond994) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond994) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond994) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond994) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond994) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond994) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond994) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond994) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond994) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond994) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond994) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond994) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond994) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond994) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond994) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond994) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond994) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond994) CFA_SP SP+0
        CFI (cfiCond994) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond995 Using cfiCommon0
        CFI (cfiCond995) NoFunction
        CFI (cfiCond995) Conditional ??CrossCallReturnLabel_325
        CFI (cfiCond995) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond995) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond995) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond995) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond995) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond995) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond995) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond995) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond995) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond995) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond995) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond995) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond995) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond995) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond995) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond995) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond995) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond995) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond995) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond995) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond995) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond995) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond995) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond995) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond995) CFA_SP SP+0
        CFI (cfiCond995) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond996 Using cfiCommon0
        CFI (cfiCond996) NoFunction
        CFI (cfiCond996) Conditional ??CrossCallReturnLabel_326
        CFI (cfiCond996) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond996) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond996) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond996) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond996) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond996) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond996) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond996) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond996) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond996) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond996) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond996) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond996) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond996) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond996) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond996) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond996) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond996) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond996) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond996) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond996) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond996) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond996) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond996) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond996) CFA_SP SP+0
        CFI (cfiCond996) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond997 Using cfiCommon0
        CFI (cfiCond997) NoFunction
        CFI (cfiCond997) Conditional ??CrossCallReturnLabel_327
        CFI (cfiCond997) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond997) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond997) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond997) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond997) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond997) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond997) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond997) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond997) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond997) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond997) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond997) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond997) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond997) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond997) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond997) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond997) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond997) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond997) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond997) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond997) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond997) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond997) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond997) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond997) CFA_SP SP+0
        CFI (cfiCond997) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond998 Using cfiCommon0
        CFI (cfiCond998) NoFunction
        CFI (cfiCond998) Conditional ??CrossCallReturnLabel_328
        CFI (cfiCond998) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond998) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond998) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond998) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond998) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond998) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond998) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond998) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond998) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond998) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond998) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond998) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond998) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond998) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond998) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond998) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond998) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond998) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond998) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond998) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond998) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond998) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond998) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond998) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond998) CFA_SP SP+0
        CFI (cfiCond998) CFA_XSP16 add(XSP16, 183)
        CFI Block cfiCond999 Using cfiCommon0
        CFI (cfiCond999) NoFunction
        CFI (cfiCond999) Conditional ??CrossCallReturnLabel_329
        CFI (cfiCond999) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond999) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond999) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond999) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond999) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond999) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond999) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond999) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond999) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond999) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond999) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond999) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond999) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond999) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond999) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond999) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond999) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond999) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond999) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond999) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond999) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond999) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond999) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond999) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond999) CFA_SP SP+0
        CFI (cfiCond999) CFA_XSP16 add(XSP16, 187)
        CFI Block cfiCond1000 Using cfiCommon0
        CFI (cfiCond1000) NoFunction
        CFI (cfiCond1000) Conditional ??CrossCallReturnLabel_330
        CFI (cfiCond1000) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1000) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1000) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1000) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1000) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1000) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1000) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1000) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1000) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1000) CFA_SP SP+0
        CFI (cfiCond1000) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1001 Using cfiCommon0
        CFI (cfiCond1001) NoFunction
        CFI (cfiCond1001) Conditional ??CrossCallReturnLabel_331
        CFI (cfiCond1001) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1001) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1001) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1001) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1001) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1001) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1001) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1001) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1001) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1001) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1001) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1001) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1001) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1001) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1001) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1001) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1001) CFA_SP SP+0
        CFI (cfiCond1001) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiPicker1002 Using cfiCommon1
        CFI (cfiPicker1002) NoFunction
        CFI (cfiPicker1002) Picker
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_333:
        RET
        CFI EndBlock cfiCond991
        CFI EndBlock cfiCond992
        CFI EndBlock cfiCond993
        CFI EndBlock cfiCond994
        CFI EndBlock cfiCond995
        CFI EndBlock cfiCond996
        CFI EndBlock cfiCond997
        CFI EndBlock cfiCond998
        CFI EndBlock cfiCond999
        CFI EndBlock cfiCond1000
        CFI EndBlock cfiCond1001
        CFI EndBlock cfiPicker1002

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine100:
        CFI Block cfiCond1003 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_25
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1004 Using cfiCommon0
        CFI (cfiCond1004) NoFunction
        CFI (cfiCond1004) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_26
        CFI (cfiCond1004) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1004) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1004) CFA_SP SP+-5
        CFI (cfiCond1004) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1005 Using cfiCommon0
        CFI (cfiCond1005) NoFunction
        CFI (cfiCond1005) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_27
        CFI (cfiCond1005) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1005) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1005) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1005) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1005) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1005) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1005) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1005) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1005) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1005) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1005) CFA_SP SP+0
        CFI (cfiCond1005) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1006 Using cfiCommon0
        CFI (cfiCond1006) NoFunction
        CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_0
        CFI (cfiCond1006) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1006) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1006) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1006) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1006) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1006) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1006) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1006) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1006) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1006) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1006) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1006) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1006) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1006) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1006) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1006) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1006) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1006) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1006) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1006) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1006) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1006) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1006) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1006) CFA_SP SP+0
        CFI (cfiCond1006) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1007 Using cfiCommon0
        CFI (cfiCond1007) NoFunction
        CFI (cfiCond1007) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_1
        CFI (cfiCond1007) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1007) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1007) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1007) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1007) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1007) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1007) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1007) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1007) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1007) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1007) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1007) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1007) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1007) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1007) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1007) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1007) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1007) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1007) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1007) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1007) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1007) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1007) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1007) CFA_SP SP+0
        CFI (cfiCond1007) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1008 Using cfiCommon0
        CFI (cfiCond1008) NoFunction
        CFI (cfiCond1008) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_10
        CFI (cfiCond1008) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1008) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1008) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1008) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1008) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1008) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1008) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1008) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1008) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1008) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1008) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1008) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1008) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1008) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1008) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1008) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1008) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1008) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1008) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1008) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1008) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1008) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1008) CFA_SP SP+0
        CFI (cfiCond1008) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1009 Using cfiCommon0
        CFI (cfiCond1009) NoFunction
        CFI (cfiCond1009) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_11
        CFI (cfiCond1009) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1009) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1009) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1009) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1009) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1009) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1009) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1009) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1009) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1009) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1009) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1009) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1009) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1009) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1009) CFA_SP SP+0
        CFI (cfiCond1009) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1010 Using cfiCommon0
        CFI (cfiCond1010) NoFunction
        CFI (cfiCond1010) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_330
        CFI (cfiCond1010) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1010) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1010) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1010) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1010) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1010) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1010) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1010) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1010) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1010) CFA_SP SP+0
        CFI (cfiCond1010) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1011 Using cfiCommon0
        CFI (cfiCond1011) NoFunction
        CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_331
        CFI (cfiCond1011) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1011) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1011) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1011) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1011) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1011) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1011) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1011) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1011) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1011) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1011) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1011) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1011) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1011) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1011) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1011) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1011) CFA_SP SP+0
        CFI (cfiCond1011) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond1012 Using cfiCommon0
        CFI (cfiCond1012) NoFunction
        CFI (cfiCond1012) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_321
        CFI (cfiCond1012) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1012) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1012) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1012) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1012) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1012) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1012) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1012) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1012) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1012) CFA_SP SP+0
        CFI (cfiCond1012) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1013 Using cfiCommon0
        CFI (cfiCond1013) NoFunction
        CFI (cfiCond1013) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_322
        CFI (cfiCond1013) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1013) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1013) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1013) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1013) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1013) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1013) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1013) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1013) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1013) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1013) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1013) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1013) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1013) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1013) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1013) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1013) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1013) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1013) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1013) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1013) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1013) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1013) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1013) CFA_SP SP+0
        CFI (cfiCond1013) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1014 Using cfiCommon0
        CFI (cfiCond1014) NoFunction
        CFI (cfiCond1014) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_323
        CFI (cfiCond1014) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1014) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1014) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1014) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1014) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1014) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1014) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1014) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1014) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1014) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1014) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1014) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1014) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1014) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1014) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1014) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1014) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1014) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1014) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1014) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1014) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1014) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1014) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1014) CFA_SP SP+0
        CFI (cfiCond1014) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1015 Using cfiCommon0
        CFI (cfiCond1015) NoFunction
        CFI (cfiCond1015) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_324
        CFI (cfiCond1015) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1015) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1015) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1015) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1015) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1015) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1015) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1015) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1015) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1015) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1015) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1015) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1015) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1015) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1015) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1015) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1015) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1015) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1015) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1015) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1015) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1015) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1015) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1015) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1015) CFA_SP SP+0
        CFI (cfiCond1015) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond1016 Using cfiCommon0
        CFI (cfiCond1016) NoFunction
        CFI (cfiCond1016) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_325
        CFI (cfiCond1016) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1016) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1016) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1016) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1016) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1016) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1016) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1016) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1016) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1016) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1016) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1016) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1016) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1016) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1016) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1016) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1016) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1016) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1016) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1016) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1016) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1016) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1016) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1016) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1016) CFA_SP SP+0
        CFI (cfiCond1016) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond1017 Using cfiCommon0
        CFI (cfiCond1017) NoFunction
        CFI (cfiCond1017) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_326
        CFI (cfiCond1017) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1017) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1017) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1017) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1017) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1017) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1017) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1017) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1017) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1017) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1017) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1017) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1017) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1017) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1017) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1017) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1017) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1017) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1017) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1017) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1017) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1017) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1017) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1017) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1017) CFA_SP SP+0
        CFI (cfiCond1017) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond1018 Using cfiCommon0
        CFI (cfiCond1018) NoFunction
        CFI (cfiCond1018) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_327
        CFI (cfiCond1018) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1018) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1018) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1018) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1018) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1018) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1018) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1018) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1018) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1018) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1018) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1018) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1018) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1018) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1018) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1018) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1018) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1018) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1018) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1018) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1018) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1018) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1018) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1018) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1018) CFA_SP SP+0
        CFI (cfiCond1018) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond1019 Using cfiCommon0
        CFI (cfiCond1019) NoFunction
        CFI (cfiCond1019) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_328
        CFI (cfiCond1019) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1019) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1019) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1019) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1019) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1019) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1019) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1019) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1019) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1019) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1019) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1019) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1019) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1019) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1019) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1019) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1019) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1019) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1019) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1019) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1019) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1019) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1019) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1019) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1019) CFA_SP SP+0
        CFI (cfiCond1019) CFA_XSP16 add(XSP16, 183)
        CFI Block cfiCond1020 Using cfiCommon0
        CFI (cfiCond1020) NoFunction
        CFI (cfiCond1020) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_329
        CFI (cfiCond1020) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1020) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1020) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1020) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1020) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1020) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1020) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1020) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1020) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1020) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1020) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1020) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1020) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1020) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1020) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1020) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1020) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1020) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1020) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1020) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1020) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1020) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1020) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1020) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1020) CFA_SP SP+0
        CFI (cfiCond1020) CFA_XSP16 add(XSP16, 187)
        CFI Block cfiPicker1021 Using cfiCommon1
        CFI (cfiPicker1021) NoFunction
        CFI (cfiPicker1021) Picker
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_335:
        RET
        CFI EndBlock cfiCond1003
        CFI EndBlock cfiCond1004
        CFI EndBlock cfiCond1005
        CFI EndBlock cfiCond1006
        CFI EndBlock cfiCond1007
        CFI EndBlock cfiCond1008
        CFI EndBlock cfiCond1009
        CFI EndBlock cfiCond1010
        CFI EndBlock cfiCond1011
        CFI EndBlock cfiCond1012
        CFI EndBlock cfiCond1013
        CFI EndBlock cfiCond1014
        CFI EndBlock cfiCond1015
        CFI EndBlock cfiCond1016
        CFI EndBlock cfiCond1017
        CFI EndBlock cfiCond1018
        CFI EndBlock cfiCond1019
        CFI EndBlock cfiCond1020
        CFI EndBlock cfiPicker1021

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine104:
        CFI Block cfiCond1022 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_137
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1023 Using cfiCommon0
        CFI (cfiCond1023) NoFunction
        CFI (cfiCond1023) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_138
        CFI (cfiCond1023) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1023) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1023) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1023) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1023) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1023) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1023) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1023) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1023) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1023) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1023) CFA_SP SP+0
        CFI (cfiCond1023) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1024 Using cfiCommon0
        CFI (cfiCond1024) NoFunction
        CFI (cfiCond1024) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_139
        CFI (cfiCond1024) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1024) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1024) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1024) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1024) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1024) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1024) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1024) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1024) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1024) CFA_SP SP+0
        CFI (cfiCond1024) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1025 Using cfiCommon0
        CFI (cfiCond1025) NoFunction
        CFI (cfiCond1025) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_140
        CFI (cfiCond1025) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1025) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1025) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1025) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1025) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1025) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1025) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1025) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1025) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1025) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1025) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1025) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1025) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1025) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1025) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1025) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1025) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1025) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1025) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1025) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1025) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1025) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1025) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1025) CFA_SP SP+0
        CFI (cfiCond1025) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1026 Using cfiCommon0
        CFI (cfiCond1026) NoFunction
        CFI (cfiCond1026) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_141
        CFI (cfiCond1026) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1026) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1026) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1026) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1026) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1026) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1026) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1026) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1026) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1026) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1026) CFA_SP SP+0
        CFI (cfiCond1026) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1027 Using cfiCommon0
        CFI (cfiCond1027) NoFunction
        CFI (cfiCond1027) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_142
        CFI (cfiCond1027) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1027) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1027) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1027) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1027) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1027) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1027) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1027) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1027) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1027) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1027) CFA_SP SP+0
        CFI (cfiCond1027) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1028 Using cfiCommon0
        CFI (cfiCond1028) NoFunction
        CFI (cfiCond1028) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_143
        CFI (cfiCond1028) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1028) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1028) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1028) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1028) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1028) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1028) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1028) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1028) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1028) CFA_SP SP+0
        CFI (cfiCond1028) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1029 Using cfiCommon0
        CFI (cfiCond1029) NoFunction
        CFI (cfiCond1029) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_144
        CFI (cfiCond1029) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1029) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1029) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1029) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1029) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1029) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1029) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1029) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1029) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1029) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1029) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1029) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1029) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1029) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1029) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1029) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1029) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1029) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1029) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1029) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1029) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1029) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1029) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1029) CFA_SP SP+0
        CFI (cfiCond1029) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1030 Using cfiCommon0
        CFI (cfiCond1030) NoFunction
        CFI (cfiCond1030) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_145
        CFI (cfiCond1030) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1030) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1030) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1030) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1030) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1030) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1030) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1030) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1030) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1030) CFA_SP SP+0
        CFI (cfiCond1030) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1031 Using cfiCommon0
        CFI (cfiCond1031) NoFunction
        CFI (cfiCond1031) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_146
        CFI (cfiCond1031) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1031) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1031) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1031) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1031) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1031) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1031) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1031) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1031) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1031) CFA_SP SP+0
        CFI (cfiCond1031) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1032 Using cfiCommon0
        CFI (cfiCond1032) NoFunction
        CFI (cfiCond1032) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_147
        CFI (cfiCond1032) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1032) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1032) CFA_SP SP+-5
        CFI (cfiCond1032) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1033 Using cfiCommon0
        CFI (cfiCond1033) NoFunction
        CFI (cfiCond1033) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_148
        CFI (cfiCond1033) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1033) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1033) CFA_SP SP+-5
        CFI (cfiCond1033) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1034 Using cfiCommon0
        CFI (cfiCond1034) NoFunction
        CFI (cfiCond1034) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_149
        CFI (cfiCond1034) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1034) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1034) CFA_SP SP+-5
        CFI (cfiCond1034) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1035 Using cfiCommon0
        CFI (cfiCond1035) NoFunction
        CFI (cfiCond1035) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_150
        CFI (cfiCond1035) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1035) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1035) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1035) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1035) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1035) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1035) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1035) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1035) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1035) CFA_SP SP+0
        CFI (cfiCond1035) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1036 Using cfiCommon0
        CFI (cfiCond1036) NoFunction
        CFI (cfiCond1036) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_151
        CFI (cfiCond1036) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1036) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1036) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1036) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1036) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1036) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1036) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1036) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1036) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1036) CFA_SP SP+0
        CFI (cfiCond1036) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1037 Using cfiCommon0
        CFI (cfiCond1037) NoFunction
        CFI (cfiCond1037) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_152
        CFI (cfiCond1037) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1037) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1037) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1037) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1037) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1037) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1037) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1037) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1037) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1037) CFA_SP SP+0
        CFI (cfiCond1037) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1038 Using cfiCommon0
        CFI (cfiCond1038) NoFunction
        CFI (cfiCond1038) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_153
        CFI (cfiCond1038) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1038) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1038) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1038) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1038) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1038) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1038) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1038) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1038) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1038) CFA_SP SP+0
        CFI (cfiCond1038) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1039 Using cfiCommon0
        CFI (cfiCond1039) NoFunction
        CFI (cfiCond1039) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_154
        CFI (cfiCond1039) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1039) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1039) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1039) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1039) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1039) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1039) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1039) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1039) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1039) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1039) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1039) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1039) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1039) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1039) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1039) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1039) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1039) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1039) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1039) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1039) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1039) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1039) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1039) CFA_SP SP+0
        CFI (cfiCond1039) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1040 Using cfiCommon0
        CFI (cfiCond1040) NoFunction
        CFI (cfiCond1040) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_155
        CFI (cfiCond1040) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1040) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1040) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1040) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1040) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1040) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1040) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1040) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1040) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1040) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1040) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1040) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1040) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1040) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1040) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1040) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1040) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1040) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1040) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1040) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1040) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1040) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1040) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1040) CFA_SP SP+0
        CFI (cfiCond1040) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1041 Using cfiCommon0
        CFI (cfiCond1041) NoFunction
        CFI (cfiCond1041) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_156
        CFI (cfiCond1041) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1041) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1041) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1041) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1041) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1041) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1041) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1041) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1041) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1041) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1041) CFA_SP SP+0
        CFI (cfiCond1041) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1042 Using cfiCommon0
        CFI (cfiCond1042) NoFunction
        CFI (cfiCond1042) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_157
        CFI (cfiCond1042) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1042) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1042) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1042) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1042) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1042) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1042) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1042) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1042) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1042) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1042) CFA_SP SP+0
        CFI (cfiCond1042) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1043 Using cfiCommon0
        CFI (cfiCond1043) NoFunction
        CFI (cfiCond1043) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_158
        CFI (cfiCond1043) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1043) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1043) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1043) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1043) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1043) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1043) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1043) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1043) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1043) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1043) CFA_SP SP+0
        CFI (cfiCond1043) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1044 Using cfiCommon0
        CFI (cfiCond1044) NoFunction
        CFI (cfiCond1044) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_159
        CFI (cfiCond1044) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1044) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1044) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1044) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1044) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1044) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1044) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1044) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1044) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1044) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1044) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1044) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1044) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1044) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1044) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1044) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1044) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1044) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1044) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1044) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1044) CFA_SP SP+0
        CFI (cfiCond1044) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond1045 Using cfiCommon0
        CFI (cfiCond1045) NoFunction
        CFI (cfiCond1045) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_160
        CFI (cfiCond1045) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1045) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1045) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1045) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1045) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1045) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1045) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1045) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1045) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1045) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1045) CFA_SP SP+0
        CFI (cfiCond1045) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1046 Using cfiCommon0
        CFI (cfiCond1046) NoFunction
        CFI (cfiCond1046) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_161
        CFI (cfiCond1046) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1046) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1046) CFA_SP SP+-5
        CFI (cfiCond1046) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1047 Using cfiCommon0
        CFI (cfiCond1047) NoFunction
        CFI (cfiCond1047) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_162
        CFI (cfiCond1047) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1047) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1047) CFA_SP SP+-5
        CFI (cfiCond1047) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1048 Using cfiCommon0
        CFI (cfiCond1048) NoFunction
        CFI (cfiCond1048) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_163
        CFI (cfiCond1048) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1048) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1048) CFA_SP SP+-5
        CFI (cfiCond1048) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1049 Using cfiCommon0
        CFI (cfiCond1049) NoFunction
        CFI (cfiCond1049) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_164
        CFI (cfiCond1049) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1049) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1049) CFA_SP SP+-5
        CFI (cfiCond1049) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1050 Using cfiCommon0
        CFI (cfiCond1050) NoFunction
        CFI (cfiCond1050) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_165
        CFI (cfiCond1050) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1050) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1050) CFA_SP SP+-5
        CFI (cfiCond1050) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1051 Using cfiCommon0
        CFI (cfiCond1051) NoFunction
        CFI (cfiCond1051) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_166
        CFI (cfiCond1051) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1051) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1051) CFA_SP SP+-5
        CFI (cfiCond1051) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1052 Using cfiCommon0
        CFI (cfiCond1052) NoFunction
        CFI (cfiCond1052) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_167
        CFI (cfiCond1052) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1052) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1052) CFA_SP SP+-5
        CFI (cfiCond1052) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1053 Using cfiCommon0
        CFI (cfiCond1053) NoFunction
        CFI (cfiCond1053) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_168
        CFI (cfiCond1053) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1053) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1053) CFA_SP SP+-5
        CFI (cfiCond1053) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1054 Using cfiCommon0
        CFI (cfiCond1054) NoFunction
        CFI (cfiCond1054) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_169
        CFI (cfiCond1054) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1054) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1054) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1054) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1054) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1054) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1054) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1054) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1054) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1054) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1054) CFA_SP SP+0
        CFI (cfiCond1054) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1055 Using cfiCommon0
        CFI (cfiCond1055) NoFunction
        CFI (cfiCond1055) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_170
        CFI (cfiCond1055) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1055) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1055) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1055) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1055) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1055) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1055) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1055) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1055) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1055) CFA_SP SP+0
        CFI (cfiCond1055) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1056 Using cfiCommon0
        CFI (cfiCond1056) NoFunction
        CFI (cfiCond1056) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_171
        CFI (cfiCond1056) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1056) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1056) CFA_SP SP+-5
        CFI (cfiCond1056) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1057 Using cfiCommon0
        CFI (cfiCond1057) NoFunction
        CFI (cfiCond1057) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_172
        CFI (cfiCond1057) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1057) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1057) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1057) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1057) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1057) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1057) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1057) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1057) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1057) CFA_SP SP+0
        CFI (cfiCond1057) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1058 Using cfiCommon0
        CFI (cfiCond1058) NoFunction
        CFI (cfiCond1058) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_173
        CFI (cfiCond1058) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1058) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1058) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1058) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1058) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1058) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1058) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1058) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1058) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1058) CFA_SP SP+0
        CFI (cfiCond1058) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1059 Using cfiCommon0
        CFI (cfiCond1059) NoFunction
        CFI (cfiCond1059) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_174
        CFI (cfiCond1059) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1059) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1059) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1059) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1059) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1059) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1059) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1059) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1059) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1059) CFA_SP SP+0
        CFI (cfiCond1059) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1060 Using cfiCommon0
        CFI (cfiCond1060) NoFunction
        CFI (cfiCond1060) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_175
        CFI (cfiCond1060) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1060) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1060) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1060) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1060) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1060) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1060) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1060) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1060) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1060) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1060) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1060) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1060) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1060) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1060) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1060) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1060) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1060) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1060) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1060) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1060) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1060) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1060) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1060) CFA_SP SP+0
        CFI (cfiCond1060) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1061 Using cfiCommon0
        CFI (cfiCond1061) NoFunction
        CFI (cfiCond1061) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_176
        CFI (cfiCond1061) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1061) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1061) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1061) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1061) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1061) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1061) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1061) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1061) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1061) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1061) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1061) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1061) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1061) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1061) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1061) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1061) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1061) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1061) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1061) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1061) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1061) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1061) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1061) CFA_SP SP+0
        CFI (cfiCond1061) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1062 Using cfiCommon0
        CFI (cfiCond1062) NoFunction
        CFI (cfiCond1062) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_177
        CFI (cfiCond1062) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1062) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1062) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1062) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1062) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1062) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1062) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1062) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1062) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1062) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1062) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1062) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1062) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1062) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1062) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1062) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1062) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1062) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1062) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1062) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1062) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1062) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1062) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1062) CFA_SP SP+0
        CFI (cfiCond1062) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1063 Using cfiCommon0
        CFI (cfiCond1063) NoFunction
        CFI (cfiCond1063) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_178
        CFI (cfiCond1063) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1063) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1063) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1063) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1063) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1063) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1063) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1063) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1063) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1063) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1063) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1063) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1063) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1063) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1063) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1063) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1063) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1063) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1063) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1063) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1063) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1063) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1063) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1063) CFA_SP SP+0
        CFI (cfiCond1063) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1064 Using cfiCommon0
        CFI (cfiCond1064) NoFunction
        CFI (cfiCond1064) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_179
        CFI (cfiCond1064) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1064) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1064) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1064) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1064) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1064) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1064) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1064) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1064) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1064) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1064) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1064) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1064) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1064) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1064) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1064) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1064) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1064) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1064) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1064) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1064) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1064) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1064) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1064) CFA_SP SP+0
        CFI (cfiCond1064) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1065 Using cfiCommon0
        CFI (cfiCond1065) NoFunction
        CFI (cfiCond1065) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_180
        CFI (cfiCond1065) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1065) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1065) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1065) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1065) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1065) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1065) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1065) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1065) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1065) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1065) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1065) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1065) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1065) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1065) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1065) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1065) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1065) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1065) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1065) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1065) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1065) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1065) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1065) CFA_SP SP+0
        CFI (cfiCond1065) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1066 Using cfiCommon0
        CFI (cfiCond1066) NoFunction
        CFI (cfiCond1066) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_181
        CFI (cfiCond1066) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1066) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1066) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1066) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1066) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1066) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1066) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1066) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1066) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1066) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1066) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1066) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1066) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1066) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1066) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1066) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1066) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1066) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1066) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1066) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1066) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1066) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1066) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1066) CFA_SP SP+0
        CFI (cfiCond1066) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1067 Using cfiCommon0
        CFI (cfiCond1067) NoFunction
        CFI (cfiCond1067) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_182
        CFI (cfiCond1067) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1067) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1067) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1067) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1067) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1067) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1067) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1067) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1067) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1067) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1067) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1067) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1067) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1067) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1067) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1067) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1067) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1067) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1067) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1067) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1067) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1067) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1067) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1067) CFA_SP SP+0
        CFI (cfiCond1067) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1068 Using cfiCommon0
        CFI (cfiCond1068) NoFunction
        CFI (cfiCond1068) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_183
        CFI (cfiCond1068) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1068) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1068) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1068) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1068) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1068) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1068) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1068) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1068) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1068) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1068) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1068) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1068) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1068) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1068) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1068) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1068) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1068) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1068) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1068) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1068) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1068) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1068) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1068) CFA_SP SP+0
        CFI (cfiCond1068) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1069 Using cfiCommon0
        CFI (cfiCond1069) NoFunction
        CFI (cfiCond1069) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_184
        CFI (cfiCond1069) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1069) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1069) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1069) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1069) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1069) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1069) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1069) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1069) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1069) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1069) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1069) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1069) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1069) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1069) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1069) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1069) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1069) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1069) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1069) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1069) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1069) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1069) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1069) CFA_SP SP+0
        CFI (cfiCond1069) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1070 Using cfiCommon0
        CFI (cfiCond1070) NoFunction
        CFI (cfiCond1070) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_185
        CFI (cfiCond1070) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1070) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1070) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1070) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1070) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1070) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1070) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1070) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1070) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1070) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1070) CFA_SP SP+0
        CFI (cfiCond1070) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1071 Using cfiCommon0
        CFI (cfiCond1071) NoFunction
        CFI (cfiCond1071) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_186
        CFI (cfiCond1071) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1071) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1071) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1071) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1071) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1071) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1071) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1071) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1071) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1071) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1071) CFA_SP SP+0
        CFI (cfiCond1071) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1072 Using cfiCommon0
        CFI (cfiCond1072) NoFunction
        CFI (cfiCond1072) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_187
        CFI (cfiCond1072) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1072) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1072) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1072) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1072) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1072) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1072) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1072) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1072) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1072) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1072) CFA_SP SP+0
        CFI (cfiCond1072) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1073 Using cfiCommon0
        CFI (cfiCond1073) NoFunction
        CFI (cfiCond1073) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_198
        CFI (cfiCond1073) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1073) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1073) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1073) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1073) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1073) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1073) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1073) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1073) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1073) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1073) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1073) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1073) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1073) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1073) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1073) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1073) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1073) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1073) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1073) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1073) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1073) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1073) CFA_SP SP+0
        CFI (cfiCond1073) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1074 Using cfiCommon0
        CFI (cfiCond1074) NoFunction
        CFI (cfiCond1074) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_199
        CFI (cfiCond1074) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1074) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1074) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1074) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1074) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1074) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1074) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1074) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1074) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1074) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1074) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1074) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1074) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1074) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1074) CFA_SP SP+0
        CFI (cfiCond1074) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1075 Using cfiCommon0
        CFI (cfiCond1075) NoFunction
        CFI (cfiCond1075) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_200
        CFI (cfiCond1075) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1075) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1075) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1075) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1075) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1075) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1075) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1075) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1075) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1075) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1075) CFA_SP SP+0
        CFI (cfiCond1075) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1076 Using cfiCommon0
        CFI (cfiCond1076) NoFunction
        CFI (cfiCond1076) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_201
        CFI (cfiCond1076) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1076) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1076) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1076) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1076) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1076) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1076) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1076) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1076) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1076) CFA_SP SP+0
        CFI (cfiCond1076) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond1077 Using cfiCommon0
        CFI (cfiCond1077) NoFunction
        CFI (cfiCond1077) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_202
        CFI (cfiCond1077) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1077) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1077) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1077) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1077) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1077) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1077) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1077) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1077) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1077) CFA_SP SP+0
        CFI (cfiCond1077) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond1078 Using cfiCommon0
        CFI (cfiCond1078) NoFunction
        CFI (cfiCond1078) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_203
        CFI (cfiCond1078) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1078) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1078) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1078) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1078) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1078) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1078) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1078) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1078) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1078) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1078) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1078) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1078) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1078) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1078) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1078) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1078) CFA_SP SP+0
        CFI (cfiCond1078) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1079 Using cfiCommon0
        CFI (cfiCond1079) NoFunction
        CFI (cfiCond1079) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_204
        CFI (cfiCond1079) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1079) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1079) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1079) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1079) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1079) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1079) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1079) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1079) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1079) CFA_SP SP+0
        CFI (cfiCond1079) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1080 Using cfiCommon0
        CFI (cfiCond1080) NoFunction
        CFI (cfiCond1080) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_205
        CFI (cfiCond1080) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1080) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1080) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1080) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1080) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1080) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1080) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1080) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1080) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1080) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1080) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1080) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1080) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1080) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1080) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1080) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1080) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1080) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1080) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1080) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1080) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1080) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1080) CFA_SP SP+0
        CFI (cfiCond1080) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1081 Using cfiCommon0
        CFI (cfiCond1081) NoFunction
        CFI (cfiCond1081) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_206
        CFI (cfiCond1081) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1081) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1081) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1081) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1081) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1081) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1081) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1081) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1081) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1081) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1081) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1081) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1081) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1081) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1081) CFA_SP SP+0
        CFI (cfiCond1081) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1082 Using cfiCommon0
        CFI (cfiCond1082) NoFunction
        CFI (cfiCond1082) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_207
        CFI (cfiCond1082) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1082) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1082) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1082) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1082) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1082) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1082) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1082) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1082) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1082) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1082) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1082) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1082) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1082) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1082) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1082) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1082) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1082) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1082) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1082) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1082) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1082) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1082) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1082) CFA_SP SP+0
        CFI (cfiCond1082) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1083 Using cfiCommon0
        CFI (cfiCond1083) NoFunction
        CFI (cfiCond1083) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_208
        CFI (cfiCond1083) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1083) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1083) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1083) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1083) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1083) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1083) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1083) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1083) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1083) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1083) CFA_SP SP+0
        CFI (cfiCond1083) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1084 Using cfiCommon0
        CFI (cfiCond1084) NoFunction
        CFI (cfiCond1084) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_209
        CFI (cfiCond1084) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1084) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1084) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1084) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1084) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1084) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1084) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1084) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1084) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1084) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1084) CFA_SP SP+0
        CFI (cfiCond1084) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1085 Using cfiCommon0
        CFI (cfiCond1085) NoFunction
        CFI (cfiCond1085) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_210
        CFI (cfiCond1085) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1085) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1085) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1085) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1085) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1085) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1085) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1085) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1085) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1085) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1085) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1085) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1085) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1085) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1085) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1085) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1085) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1085) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1085) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1085) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1085) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1085) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1085) CFA_SP SP+0
        CFI (cfiCond1085) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1086 Using cfiCommon0
        CFI (cfiCond1086) NoFunction
        CFI (cfiCond1086) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_211
        CFI (cfiCond1086) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1086) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1086) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1086) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1086) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1086) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1086) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1086) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1086) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1086) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1086) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1086) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1086) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1086) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1086) CFA_SP SP+0
        CFI (cfiCond1086) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1087 Using cfiCommon0
        CFI (cfiCond1087) NoFunction
        CFI (cfiCond1087) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_212
        CFI (cfiCond1087) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1087) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1087) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1087) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1087) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1087) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1087) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1087) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1087) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1087) CFA_SP SP+0
        CFI (cfiCond1087) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1088 Using cfiCommon0
        CFI (cfiCond1088) NoFunction
        CFI (cfiCond1088) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_213
        CFI (cfiCond1088) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1088) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1088) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1088) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1088) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1088) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1088) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1088) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1088) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1088) CFA_SP SP+0
        CFI (cfiCond1088) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1089 Using cfiCommon0
        CFI (cfiCond1089) NoFunction
        CFI (cfiCond1089) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_214
        CFI (cfiCond1089) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1089) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1089) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1089) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1089) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1089) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1089) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1089) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1089) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1089) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1089) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1089) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1089) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1089) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1089) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1089) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1089) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1089) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1089) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1089) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1089) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1089) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1089) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1089) CFA_SP SP+0
        CFI (cfiCond1089) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1090 Using cfiCommon0
        CFI (cfiCond1090) NoFunction
        CFI (cfiCond1090) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_256
        CFI (cfiCond1090) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1090) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1090) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1090) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1090) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1090) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1090) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1090) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1090) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1090) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1090) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1090) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1090) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1090) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1090) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1090) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1090) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1090) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1090) CFA_SP SP+0
        CFI (cfiCond1090) CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond1091 Using cfiCommon0
        CFI (cfiCond1091) NoFunction
        CFI (cfiCond1091) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_257
        CFI (cfiCond1091) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1091) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1091) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1091) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1091) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1091) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1091) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1091) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1091) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1091) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1091) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1091) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1091) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1091) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1091) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1091) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1091) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1091) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1091) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1091) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1091) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1091) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1091) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1091) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1091) CFA_SP SP+0
        CFI (cfiCond1091) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond1092 Using cfiCommon0
        CFI (cfiCond1092) NoFunction
        CFI (cfiCond1092) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_258
        CFI (cfiCond1092) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1092) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1092) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1092) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1092) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1092) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1092) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1092) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1092) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1092) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1092) CFA_SP SP+0
        CFI (cfiCond1092) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1093 Using cfiCommon0
        CFI (cfiCond1093) NoFunction
        CFI (cfiCond1093) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_259
        CFI (cfiCond1093) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1093) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1093) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1093) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1093) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1093) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1093) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1093) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1093) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1093) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1093) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1093) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1093) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1093) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1093) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1093) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1093) CFA_SP SP+0
        CFI (cfiCond1093) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond1094 Using cfiCommon0
        CFI (cfiCond1094) NoFunction
        CFI (cfiCond1094) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_260
        CFI (cfiCond1094) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1094) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1094) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1094) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1094) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1094) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1094) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1094) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1094) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1094) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1094) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1094) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1094) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1094) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1094) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1094) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1094) CFA_SP SP+0
        CFI (cfiCond1094) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond1095 Using cfiCommon0
        CFI (cfiCond1095) NoFunction
        CFI (cfiCond1095) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_18
        CFI (cfiCond1095) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1095) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1095) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1095) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1095) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1095) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1095) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1095) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1095) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1095) CFA_SP SP+0
        CFI (cfiCond1095) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1096 Using cfiCommon0
        CFI (cfiCond1096) NoFunction
        CFI (cfiCond1096) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_19
        CFI (cfiCond1096) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1096) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1096) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1096) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1096) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1096) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1096) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1096) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1096) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1096) CFA_SP SP+0
        CFI (cfiCond1096) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1097 Using cfiCommon0
        CFI (cfiCond1097) NoFunction
        CFI (cfiCond1097) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_25
        CFI (cfiCond1097) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1097) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1097) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1097) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1097) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1097) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1097) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1097) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1097) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1097) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1097) CFA_SP SP+0
        CFI (cfiCond1097) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1098 Using cfiCommon0
        CFI (cfiCond1098) NoFunction
        CFI (cfiCond1098) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_26
        CFI (cfiCond1098) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1098) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1098) CFA_SP SP+-5
        CFI (cfiCond1098) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1099 Using cfiCommon0
        CFI (cfiCond1099) NoFunction
        CFI (cfiCond1099) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_27
        CFI (cfiCond1099) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1099) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1099) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1099) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1099) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1099) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1099) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1099) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1099) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1099) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1099) CFA_SP SP+0
        CFI (cfiCond1099) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1100 Using cfiCommon0
        CFI (cfiCond1100) NoFunction
        CFI (cfiCond1100) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_0
        CFI (cfiCond1100) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1100) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1100) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1100) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1100) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1100) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1100) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1100) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1100) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1100) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1100) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1100) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1100) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1100) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1100) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1100) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1100) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1100) CFA_SP SP+0
        CFI (cfiCond1100) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1101 Using cfiCommon0
        CFI (cfiCond1101) NoFunction
        CFI (cfiCond1101) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_1
        CFI (cfiCond1101) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1101) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1101) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1101) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1101) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1101) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1101) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1101) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1101) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1101) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1101) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1101) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1101) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1101) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1101) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1101) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1101) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1101) CFA_SP SP+0
        CFI (cfiCond1101) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1102 Using cfiCommon0
        CFI (cfiCond1102) NoFunction
        CFI (cfiCond1102) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_10
        CFI (cfiCond1102) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1102) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1102) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1102) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1102) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1102) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1102) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1102) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1102) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1102) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1102) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1102) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1102) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1102) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1102) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1102) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1102) CFA_SP SP+0
        CFI (cfiCond1102) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1103 Using cfiCommon0
        CFI (cfiCond1103) NoFunction
        CFI (cfiCond1103) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_11
        CFI (cfiCond1103) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1103) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1103) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1103) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1103) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1103) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1103) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1103) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1103) CFA_SP SP+0
        CFI (cfiCond1103) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1104 Using cfiCommon0
        CFI (cfiCond1104) NoFunction
        CFI (cfiCond1104) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_330
        CFI (cfiCond1104) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1104) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1104) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1104) CFA_SP SP+0
        CFI (cfiCond1104) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1105 Using cfiCommon0
        CFI (cfiCond1105) NoFunction
        CFI (cfiCond1105) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_331
        CFI (cfiCond1105) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1105) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1105) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1105) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1105) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1105) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1105) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1105) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1105) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1105) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1105) CFA_SP SP+0
        CFI (cfiCond1105) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond1106 Using cfiCommon0
        CFI (cfiCond1106) NoFunction
        CFI (cfiCond1106) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_321
        CFI (cfiCond1106) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1106) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1106) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1106) CFA_SP SP+0
        CFI (cfiCond1106) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1107 Using cfiCommon0
        CFI (cfiCond1107) NoFunction
        CFI (cfiCond1107) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_322
        CFI (cfiCond1107) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1107) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1107) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1107) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1107) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1107) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1107) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1107) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1107) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1107) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1107) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1107) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1107) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1107) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1107) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1107) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1107) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1107) CFA_SP SP+0
        CFI (cfiCond1107) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1108 Using cfiCommon0
        CFI (cfiCond1108) NoFunction
        CFI (cfiCond1108) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_323
        CFI (cfiCond1108) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1108) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1108) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1108) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1108) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1108) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1108) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1108) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1108) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1108) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1108) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1108) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1108) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1108) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1108) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1108) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1108) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1108) CFA_SP SP+0
        CFI (cfiCond1108) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1109 Using cfiCommon0
        CFI (cfiCond1109) NoFunction
        CFI (cfiCond1109) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_324
        CFI (cfiCond1109) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1109) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1109) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1109) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1109) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1109) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1109) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1109) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1109) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1109) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1109) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1109) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1109) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1109) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1109) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1109) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1109) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1109) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1109) CFA_SP SP+0
        CFI (cfiCond1109) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond1110 Using cfiCommon0
        CFI (cfiCond1110) NoFunction
        CFI (cfiCond1110) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_325
        CFI (cfiCond1110) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1110) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1110) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1110) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1110) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1110) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1110) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1110) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1110) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1110) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1110) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1110) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1110) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1110) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1110) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1110) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1110) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1110) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1110) CFA_SP SP+0
        CFI (cfiCond1110) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond1111 Using cfiCommon0
        CFI (cfiCond1111) NoFunction
        CFI (cfiCond1111) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_326
        CFI (cfiCond1111) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1111) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1111) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1111) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1111) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1111) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1111) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1111) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1111) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1111) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1111) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1111) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1111) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1111) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1111) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1111) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1111) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1111) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1111) CFA_SP SP+0
        CFI (cfiCond1111) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond1112 Using cfiCommon0
        CFI (cfiCond1112) NoFunction
        CFI (cfiCond1112) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_327
        CFI (cfiCond1112) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1112) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1112) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1112) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1112) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1112) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1112) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1112) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1112) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1112) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1112) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1112) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1112) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1112) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1112) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1112) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1112) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1112) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1112) CFA_SP SP+0
        CFI (cfiCond1112) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond1113 Using cfiCommon0
        CFI (cfiCond1113) NoFunction
        CFI (cfiCond1113) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_328
        CFI (cfiCond1113) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1113) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1113) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1113) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1113) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1113) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1113) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1113) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1113) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1113) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1113) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1113) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1113) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1113) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1113) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1113) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1113) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1113) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1113) CFA_SP SP+0
        CFI (cfiCond1113) CFA_XSP16 add(XSP16, 183)
        CFI Block cfiCond1114 Using cfiCommon0
        CFI (cfiCond1114) NoFunction
        CFI (cfiCond1114) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_329
        CFI (cfiCond1114) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1114) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1114) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1114) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1114) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1114) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1114) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1114) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1114) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1114) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1114) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1114) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1114) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1114) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1114) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1114) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1114) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1114) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1114) CFA_SP SP+0
        CFI (cfiCond1114) CFA_XSP16 add(XSP16, 187)
        CFI Block cfiPicker1115 Using cfiCommon1
        CFI (cfiPicker1115) NoFunction
        CFI (cfiPicker1115) Picker
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_337:
        RET
        CFI EndBlock cfiCond1022
        CFI EndBlock cfiCond1023
        CFI EndBlock cfiCond1024
        CFI EndBlock cfiCond1025
        CFI EndBlock cfiCond1026
        CFI EndBlock cfiCond1027
        CFI EndBlock cfiCond1028
        CFI EndBlock cfiCond1029
        CFI EndBlock cfiCond1030
        CFI EndBlock cfiCond1031
        CFI EndBlock cfiCond1032
        CFI EndBlock cfiCond1033
        CFI EndBlock cfiCond1034
        CFI EndBlock cfiCond1035
        CFI EndBlock cfiCond1036
        CFI EndBlock cfiCond1037
        CFI EndBlock cfiCond1038
        CFI EndBlock cfiCond1039
        CFI EndBlock cfiCond1040
        CFI EndBlock cfiCond1041
        CFI EndBlock cfiCond1042
        CFI EndBlock cfiCond1043
        CFI EndBlock cfiCond1044
        CFI EndBlock cfiCond1045
        CFI EndBlock cfiCond1046
        CFI EndBlock cfiCond1047
        CFI EndBlock cfiCond1048
        CFI EndBlock cfiCond1049
        CFI EndBlock cfiCond1050
        CFI EndBlock cfiCond1051
        CFI EndBlock cfiCond1052
        CFI EndBlock cfiCond1053
        CFI EndBlock cfiCond1054
        CFI EndBlock cfiCond1055
        CFI EndBlock cfiCond1056
        CFI EndBlock cfiCond1057
        CFI EndBlock cfiCond1058
        CFI EndBlock cfiCond1059
        CFI EndBlock cfiCond1060
        CFI EndBlock cfiCond1061
        CFI EndBlock cfiCond1062
        CFI EndBlock cfiCond1063
        CFI EndBlock cfiCond1064
        CFI EndBlock cfiCond1065
        CFI EndBlock cfiCond1066
        CFI EndBlock cfiCond1067
        CFI EndBlock cfiCond1068
        CFI EndBlock cfiCond1069
        CFI EndBlock cfiCond1070
        CFI EndBlock cfiCond1071
        CFI EndBlock cfiCond1072
        CFI EndBlock cfiCond1073
        CFI EndBlock cfiCond1074
        CFI EndBlock cfiCond1075
        CFI EndBlock cfiCond1076
        CFI EndBlock cfiCond1077
        CFI EndBlock cfiCond1078
        CFI EndBlock cfiCond1079
        CFI EndBlock cfiCond1080
        CFI EndBlock cfiCond1081
        CFI EndBlock cfiCond1082
        CFI EndBlock cfiCond1083
        CFI EndBlock cfiCond1084
        CFI EndBlock cfiCond1085
        CFI EndBlock cfiCond1086
        CFI EndBlock cfiCond1087
        CFI EndBlock cfiCond1088
        CFI EndBlock cfiCond1089
        CFI EndBlock cfiCond1090
        CFI EndBlock cfiCond1091
        CFI EndBlock cfiCond1092
        CFI EndBlock cfiCond1093
        CFI EndBlock cfiCond1094
        CFI EndBlock cfiCond1095
        CFI EndBlock cfiCond1096
        CFI EndBlock cfiCond1097
        CFI EndBlock cfiCond1098
        CFI EndBlock cfiCond1099
        CFI EndBlock cfiCond1100
        CFI EndBlock cfiCond1101
        CFI EndBlock cfiCond1102
        CFI EndBlock cfiCond1103
        CFI EndBlock cfiCond1104
        CFI EndBlock cfiCond1105
        CFI EndBlock cfiCond1106
        CFI EndBlock cfiCond1107
        CFI EndBlock cfiCond1108
        CFI EndBlock cfiCond1109
        CFI EndBlock cfiCond1110
        CFI EndBlock cfiCond1111
        CFI EndBlock cfiCond1112
        CFI EndBlock cfiCond1113
        CFI EndBlock cfiCond1114
        CFI EndBlock cfiPicker1115

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine105:
        CFI Block cfiCond1116 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_16
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1117 Using cfiCommon0
        CFI (cfiCond1117) NoFunction
        CFI (cfiCond1117) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_17
        CFI (cfiCond1117) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1117) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1117) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1117) CFA_SP SP+0
        CFI (cfiCond1117) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1118 Using cfiCommon0
        CFI (cfiCond1118) NoFunction
        CFI (cfiCond1118) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_229
        CFI (cfiCond1118) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1118) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1118) CFA_SP SP+-5
        CFI (cfiCond1118) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1119 Using cfiCommon0
        CFI (cfiCond1119) NoFunction
        CFI (cfiCond1119) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_230
        CFI (cfiCond1119) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1119) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1119) CFA_SP SP+-5
        CFI (cfiCond1119) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1120 Using cfiCommon0
        CFI (cfiCond1120) NoFunction
        CFI (cfiCond1120) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_231
        CFI (cfiCond1120) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1120) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1120) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1120) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1120) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1120) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1120) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1120) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1120) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1120) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1120) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1120) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1120) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1120) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1120) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1120) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1120) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1120) CFA_SP SP+0
        CFI (cfiCond1120) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1121 Using cfiCommon0
        CFI (cfiCond1121) NoFunction
        CFI (cfiCond1121) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_222
        CFI (cfiCond1121) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1121) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1121) CFA_SP SP+-5
        CFI (cfiCond1121) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1122 Using cfiCommon0
        CFI (cfiCond1122) NoFunction
        CFI (cfiCond1122) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_223
        CFI (cfiCond1122) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1122) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1122) CFA_SP SP+-5
        CFI (cfiCond1122) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1123 Using cfiCommon0
        CFI (cfiCond1123) NoFunction
        CFI (cfiCond1123) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_224
        CFI (cfiCond1123) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1123) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1123) CFA_SP SP+-5
        CFI (cfiCond1123) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1124 Using cfiCommon0
        CFI (cfiCond1124) NoFunction
        CFI (cfiCond1124) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_225
        CFI (cfiCond1124) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1124) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1124) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1124) CFA_SP SP+0
        CFI (cfiCond1124) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1125 Using cfiCommon0
        CFI (cfiCond1125) NoFunction
        CFI (cfiCond1125) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_226
        CFI (cfiCond1125) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1125) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1125) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1125) CFA_SP SP+0
        CFI (cfiCond1125) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1126 Using cfiCommon0
        CFI (cfiCond1126) NoFunction
        CFI (cfiCond1126) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_227
        CFI (cfiCond1126) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1126) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1126) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1126) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1126) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1126) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1126) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1126) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1126) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1126) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1126) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1126) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1126) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1126) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1126) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1126) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1126) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1126) CFA_SP SP+0
        CFI (cfiCond1126) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1127 Using cfiCommon0
        CFI (cfiCond1127) NoFunction
        CFI (cfiCond1127) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_228
        CFI (cfiCond1127) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1127) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1127) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1127) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1127) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1127) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1127) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1127) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1127) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1127) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1127) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1127) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1127) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1127) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1127) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1127) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1127) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1127) CFA_SP SP+0
        CFI (cfiCond1127) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1128 Using cfiCommon0
        CFI (cfiCond1128) NoFunction
        CFI (cfiCond1128) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_220
        CFI (cfiCond1128) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1128) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1128) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1128) CFA_SP SP+0
        CFI (cfiCond1128) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1129 Using cfiCommon0
        CFI (cfiCond1129) NoFunction
        CFI (cfiCond1129) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_221
        CFI (cfiCond1129) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1129) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1129) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1129) CFA_SP SP+0
        CFI (cfiCond1129) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1130 Using cfiCommon0
        CFI (cfiCond1130) NoFunction
        CFI (cfiCond1130) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_271
        CFI (cfiCond1130) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1130) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1130) CFA_SP SP+-5
        CFI (cfiCond1130) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1131 Using cfiCommon0
        CFI (cfiCond1131) NoFunction
        CFI (cfiCond1131) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_272
        CFI (cfiCond1131) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1131) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1131) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1131) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1131) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1131) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1131) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1131) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1131) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1131) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1131) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1131) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1131) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1131) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1131) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1131) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1131) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1131) CFA_SP SP+0
        CFI (cfiCond1131) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1132 Using cfiCommon0
        CFI (cfiCond1132) NoFunction
        CFI (cfiCond1132) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_273
        CFI (cfiCond1132) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1132) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1132) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1132) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1132) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1132) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1132) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1132) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1132) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1132) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1132) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1132) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1132) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1132) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1132) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1132) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1132) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1132) CFA_SP SP+0
        CFI (cfiCond1132) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1133 Using cfiCommon0
        CFI (cfiCond1133) NoFunction
        CFI (cfiCond1133) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_275
        CFI (cfiCond1133) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1133) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1133) CFA_SP SP+-5
        CFI (cfiCond1133) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1134 Using cfiCommon0
        CFI (cfiCond1134) NoFunction
        CFI (cfiCond1134) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_276
        CFI (cfiCond1134) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1134) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1134) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1134) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1134) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1134) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1134) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1134) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1134) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1134) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1134) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1134) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1134) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1134) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1134) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1134) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1134) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1134) CFA_SP SP+0
        CFI (cfiCond1134) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1135 Using cfiCommon0
        CFI (cfiCond1135) NoFunction
        CFI (cfiCond1135) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_274
        CFI (cfiCond1135) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1135) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1135) CFA_SP SP+-5
        CFI (cfiCond1135) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1136 Using cfiCommon0
        CFI (cfiCond1136) NoFunction
        CFI (cfiCond1136) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_23
        CFI (cfiCond1136) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1136) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1136) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1136) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1136) CFA_SP SP+0
        CFI (cfiCond1136) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1137 Using cfiCommon0
        CFI (cfiCond1137) NoFunction
        CFI (cfiCond1137) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_24
        CFI (cfiCond1137) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1137) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1137) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1137) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1137) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1137) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1137) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1137) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1137) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1137) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1137) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1137) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1137) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1137) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1137) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1137) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1137) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1137) CFA_SP SP+0
        CFI (cfiCond1137) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1138 Using cfiCommon0
        CFI (cfiCond1138) NoFunction
        CFI (cfiCond1138) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_7
        CFI (cfiCond1138) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1138) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1138) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1138) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1138) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1138) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1138) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1138) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1138) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1138) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1138) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1138) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1138) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1138) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1138) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1138) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1138) CFA_SP SP+0
        CFI (cfiCond1138) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1139 Using cfiCommon0
        CFI (cfiCond1139) NoFunction
        CFI (cfiCond1139) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_8
        CFI (cfiCond1139) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1139) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1139) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1139) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1139) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1139) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1139) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1139) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1139) CFA_SP SP+0
        CFI (cfiCond1139) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1140 Using cfiCommon0
        CFI (cfiCond1140) NoFunction
        CFI (cfiCond1140) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_9
        CFI (cfiCond1140) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1140) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1140) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1140) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1140) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1140) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1140) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1140) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1140) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1140) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1140) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1140) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1140) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1140) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1140) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1140) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1140) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1140) CFA_SP SP+0
        CFI (cfiCond1140) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1141 Using cfiCommon0
        CFI (cfiCond1141) NoFunction
        CFI (cfiCond1141) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_5
        CFI (cfiCond1141) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1141) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1141) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1141) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1141) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1141) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1141) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1141) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1141) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1141) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1141) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1141) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1141) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1141) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1141) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1141) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1141) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1141) CFA_SP SP+0
        CFI (cfiCond1141) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1142 Using cfiCommon0
        CFI (cfiCond1142) NoFunction
        CFI (cfiCond1142) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_6
        CFI (cfiCond1142) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1142) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1142) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1142) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1142) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1142) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1142) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1142) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1142) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1142) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1142) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1142) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1142) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1142) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1142) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1142) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1142) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1142) CFA_SP SP+0
        CFI (cfiCond1142) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1143 Using cfiCommon0
        CFI (cfiCond1143) NoFunction
        CFI (cfiCond1143) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_281
        CFI (cfiCond1143) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1143) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1143) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1143) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1143) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1143) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1143) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1143) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1143) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1143) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1143) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1143) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1143) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1143) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1143) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1143) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1143) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1143) CFA_SP SP+0
        CFI (cfiCond1143) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1144 Using cfiCommon0
        CFI (cfiCond1144) NoFunction
        CFI (cfiCond1144) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_282
        CFI (cfiCond1144) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1144) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1144) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1144) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1144) CFA_SP SP+0
        CFI (cfiCond1144) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1145 Using cfiCommon0
        CFI (cfiCond1145) NoFunction
        CFI (cfiCond1145) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_283
        CFI (cfiCond1145) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1145) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1145) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1145) CFA_SP SP+0
        CFI (cfiCond1145) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1146 Using cfiCommon0
        CFI (cfiCond1146) NoFunction
        CFI (cfiCond1146) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_287
        CFI (cfiCond1146) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1146) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1146) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1146) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1146) CFA_SP SP+0
        CFI (cfiCond1146) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1147 Using cfiCommon0
        CFI (cfiCond1147) NoFunction
        CFI (cfiCond1147) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_288
        CFI (cfiCond1147) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1147) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1147) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1147) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1147) CFA_SP SP+0
        CFI (cfiCond1147) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1148 Using cfiCommon0
        CFI (cfiCond1148) NoFunction
        CFI (cfiCond1148) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_289
        CFI (cfiCond1148) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1148) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1148) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1148) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1148) CFA_SP SP+0
        CFI (cfiCond1148) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1149 Using cfiCommon0
        CFI (cfiCond1149) NoFunction
        CFI (cfiCond1149) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_137
        CFI (cfiCond1149) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1149) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1149) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1149) CFA_SP SP+0
        CFI (cfiCond1149) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1150 Using cfiCommon0
        CFI (cfiCond1150) NoFunction
        CFI (cfiCond1150) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_138
        CFI (cfiCond1150) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1150) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1150) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1150) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1150) CFA_SP SP+0
        CFI (cfiCond1150) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1151 Using cfiCommon0
        CFI (cfiCond1151) NoFunction
        CFI (cfiCond1151) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_139
        CFI (cfiCond1151) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1151) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1151) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1151) CFA_SP SP+0
        CFI (cfiCond1151) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1152 Using cfiCommon0
        CFI (cfiCond1152) NoFunction
        CFI (cfiCond1152) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_140
        CFI (cfiCond1152) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1152) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1152) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1152) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1152) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1152) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1152) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1152) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1152) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1152) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1152) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1152) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1152) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1152) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1152) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1152) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1152) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1152) CFA_SP SP+0
        CFI (cfiCond1152) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1153 Using cfiCommon0
        CFI (cfiCond1153) NoFunction
        CFI (cfiCond1153) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_141
        CFI (cfiCond1153) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1153) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1153) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1153) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1153) CFA_SP SP+0
        CFI (cfiCond1153) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1154 Using cfiCommon0
        CFI (cfiCond1154) NoFunction
        CFI (cfiCond1154) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_142
        CFI (cfiCond1154) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1154) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1154) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1154) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1154) CFA_SP SP+0
        CFI (cfiCond1154) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1155 Using cfiCommon0
        CFI (cfiCond1155) NoFunction
        CFI (cfiCond1155) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_143
        CFI (cfiCond1155) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1155) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1155) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1155) CFA_SP SP+0
        CFI (cfiCond1155) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1156 Using cfiCommon0
        CFI (cfiCond1156) NoFunction
        CFI (cfiCond1156) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_144
        CFI (cfiCond1156) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1156) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1156) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1156) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1156) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1156) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1156) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1156) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1156) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1156) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1156) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1156) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1156) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1156) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1156) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1156) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1156) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1156) CFA_SP SP+0
        CFI (cfiCond1156) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1157 Using cfiCommon0
        CFI (cfiCond1157) NoFunction
        CFI (cfiCond1157) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_145
        CFI (cfiCond1157) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1157) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1157) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1157) CFA_SP SP+0
        CFI (cfiCond1157) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1158 Using cfiCommon0
        CFI (cfiCond1158) NoFunction
        CFI (cfiCond1158) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_146
        CFI (cfiCond1158) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1158) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1158) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1158) CFA_SP SP+0
        CFI (cfiCond1158) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1159 Using cfiCommon0
        CFI (cfiCond1159) NoFunction
        CFI (cfiCond1159) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_147
        CFI (cfiCond1159) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1159) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1159) CFA_SP SP+-5
        CFI (cfiCond1159) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1160 Using cfiCommon0
        CFI (cfiCond1160) NoFunction
        CFI (cfiCond1160) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_148
        CFI (cfiCond1160) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1160) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1160) CFA_SP SP+-5
        CFI (cfiCond1160) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1161 Using cfiCommon0
        CFI (cfiCond1161) NoFunction
        CFI (cfiCond1161) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_149
        CFI (cfiCond1161) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1161) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1161) CFA_SP SP+-5
        CFI (cfiCond1161) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1162 Using cfiCommon0
        CFI (cfiCond1162) NoFunction
        CFI (cfiCond1162) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_150
        CFI (cfiCond1162) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1162) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1162) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1162) CFA_SP SP+0
        CFI (cfiCond1162) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1163 Using cfiCommon0
        CFI (cfiCond1163) NoFunction
        CFI (cfiCond1163) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_151
        CFI (cfiCond1163) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1163) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1163) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1163) CFA_SP SP+0
        CFI (cfiCond1163) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1164 Using cfiCommon0
        CFI (cfiCond1164) NoFunction
        CFI (cfiCond1164) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_152
        CFI (cfiCond1164) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1164) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1164) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1164) CFA_SP SP+0
        CFI (cfiCond1164) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1165 Using cfiCommon0
        CFI (cfiCond1165) NoFunction
        CFI (cfiCond1165) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_153
        CFI (cfiCond1165) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1165) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1165) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1165) CFA_SP SP+0
        CFI (cfiCond1165) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1166 Using cfiCommon0
        CFI (cfiCond1166) NoFunction
        CFI (cfiCond1166) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_154
        CFI (cfiCond1166) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1166) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1166) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1166) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1166) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1166) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1166) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1166) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1166) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1166) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1166) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1166) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1166) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1166) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1166) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1166) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1166) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1166) CFA_SP SP+0
        CFI (cfiCond1166) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1167 Using cfiCommon0
        CFI (cfiCond1167) NoFunction
        CFI (cfiCond1167) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_155
        CFI (cfiCond1167) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1167) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1167) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1167) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1167) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1167) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1167) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1167) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1167) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1167) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1167) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1167) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1167) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1167) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1167) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1167) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1167) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1167) CFA_SP SP+0
        CFI (cfiCond1167) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1168 Using cfiCommon0
        CFI (cfiCond1168) NoFunction
        CFI (cfiCond1168) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_156
        CFI (cfiCond1168) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1168) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1168) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1168) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1168) CFA_SP SP+0
        CFI (cfiCond1168) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1169 Using cfiCommon0
        CFI (cfiCond1169) NoFunction
        CFI (cfiCond1169) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_157
        CFI (cfiCond1169) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1169) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1169) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1169) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1169) CFA_SP SP+0
        CFI (cfiCond1169) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1170 Using cfiCommon0
        CFI (cfiCond1170) NoFunction
        CFI (cfiCond1170) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_158
        CFI (cfiCond1170) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1170) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1170) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1170) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1170) CFA_SP SP+0
        CFI (cfiCond1170) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1171 Using cfiCommon0
        CFI (cfiCond1171) NoFunction
        CFI (cfiCond1171) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_159
        CFI (cfiCond1171) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1171) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1171) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1171) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1171) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1171) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1171) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1171) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1171) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1171) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1171) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1171) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1171) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1171) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1171) CFA_SP SP+0
        CFI (cfiCond1171) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond1172 Using cfiCommon0
        CFI (cfiCond1172) NoFunction
        CFI (cfiCond1172) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_160
        CFI (cfiCond1172) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1172) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1172) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1172) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1172) CFA_SP SP+0
        CFI (cfiCond1172) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1173 Using cfiCommon0
        CFI (cfiCond1173) NoFunction
        CFI (cfiCond1173) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_161
        CFI (cfiCond1173) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1173) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1173) CFA_SP SP+-5
        CFI (cfiCond1173) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1174 Using cfiCommon0
        CFI (cfiCond1174) NoFunction
        CFI (cfiCond1174) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_162
        CFI (cfiCond1174) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1174) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1174) CFA_SP SP+-5
        CFI (cfiCond1174) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1175 Using cfiCommon0
        CFI (cfiCond1175) NoFunction
        CFI (cfiCond1175) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_163
        CFI (cfiCond1175) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1175) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1175) CFA_SP SP+-5
        CFI (cfiCond1175) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1176 Using cfiCommon0
        CFI (cfiCond1176) NoFunction
        CFI (cfiCond1176) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_164
        CFI (cfiCond1176) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1176) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1176) CFA_SP SP+-5
        CFI (cfiCond1176) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1177 Using cfiCommon0
        CFI (cfiCond1177) NoFunction
        CFI (cfiCond1177) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_165
        CFI (cfiCond1177) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1177) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1177) CFA_SP SP+-5
        CFI (cfiCond1177) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1178 Using cfiCommon0
        CFI (cfiCond1178) NoFunction
        CFI (cfiCond1178) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_166
        CFI (cfiCond1178) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1178) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1178) CFA_SP SP+-5
        CFI (cfiCond1178) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1179 Using cfiCommon0
        CFI (cfiCond1179) NoFunction
        CFI (cfiCond1179) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_167
        CFI (cfiCond1179) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1179) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1179) CFA_SP SP+-5
        CFI (cfiCond1179) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1180 Using cfiCommon0
        CFI (cfiCond1180) NoFunction
        CFI (cfiCond1180) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_168
        CFI (cfiCond1180) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1180) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1180) CFA_SP SP+-5
        CFI (cfiCond1180) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1181 Using cfiCommon0
        CFI (cfiCond1181) NoFunction
        CFI (cfiCond1181) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_169
        CFI (cfiCond1181) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1181) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1181) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1181) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1181) CFA_SP SP+0
        CFI (cfiCond1181) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1182 Using cfiCommon0
        CFI (cfiCond1182) NoFunction
        CFI (cfiCond1182) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_170
        CFI (cfiCond1182) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1182) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1182) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1182) CFA_SP SP+0
        CFI (cfiCond1182) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1183 Using cfiCommon0
        CFI (cfiCond1183) NoFunction
        CFI (cfiCond1183) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_171
        CFI (cfiCond1183) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1183) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1183) CFA_SP SP+-5
        CFI (cfiCond1183) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1184 Using cfiCommon0
        CFI (cfiCond1184) NoFunction
        CFI (cfiCond1184) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_172
        CFI (cfiCond1184) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1184) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1184) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1184) CFA_SP SP+0
        CFI (cfiCond1184) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1185 Using cfiCommon0
        CFI (cfiCond1185) NoFunction
        CFI (cfiCond1185) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_173
        CFI (cfiCond1185) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1185) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1185) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1185) CFA_SP SP+0
        CFI (cfiCond1185) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1186 Using cfiCommon0
        CFI (cfiCond1186) NoFunction
        CFI (cfiCond1186) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_174
        CFI (cfiCond1186) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1186) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1186) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1186) CFA_SP SP+0
        CFI (cfiCond1186) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1187 Using cfiCommon0
        CFI (cfiCond1187) NoFunction
        CFI (cfiCond1187) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_175
        CFI (cfiCond1187) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1187) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1187) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1187) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1187) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1187) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1187) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1187) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1187) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1187) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1187) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1187) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1187) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1187) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1187) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1187) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1187) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1187) CFA_SP SP+0
        CFI (cfiCond1187) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1188 Using cfiCommon0
        CFI (cfiCond1188) NoFunction
        CFI (cfiCond1188) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_176
        CFI (cfiCond1188) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1188) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1188) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1188) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1188) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1188) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1188) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1188) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1188) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1188) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1188) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1188) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1188) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1188) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1188) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1188) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1188) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1188) CFA_SP SP+0
        CFI (cfiCond1188) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1189 Using cfiCommon0
        CFI (cfiCond1189) NoFunction
        CFI (cfiCond1189) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_177
        CFI (cfiCond1189) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1189) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1189) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1189) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1189) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1189) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1189) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1189) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1189) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1189) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1189) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1189) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1189) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1189) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1189) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1189) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1189) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1189) CFA_SP SP+0
        CFI (cfiCond1189) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1190 Using cfiCommon0
        CFI (cfiCond1190) NoFunction
        CFI (cfiCond1190) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_178
        CFI (cfiCond1190) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1190) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1190) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1190) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1190) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1190) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1190) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1190) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1190) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1190) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1190) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1190) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1190) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1190) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1190) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1190) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1190) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1190) CFA_SP SP+0
        CFI (cfiCond1190) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1191 Using cfiCommon0
        CFI (cfiCond1191) NoFunction
        CFI (cfiCond1191) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_179
        CFI (cfiCond1191) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1191) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1191) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1191) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1191) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1191) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1191) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1191) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1191) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1191) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1191) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1191) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1191) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1191) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1191) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1191) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1191) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1191) CFA_SP SP+0
        CFI (cfiCond1191) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1192 Using cfiCommon0
        CFI (cfiCond1192) NoFunction
        CFI (cfiCond1192) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_180
        CFI (cfiCond1192) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1192) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1192) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1192) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1192) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1192) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1192) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1192) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1192) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1192) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1192) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1192) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1192) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1192) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1192) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1192) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1192) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1192) CFA_SP SP+0
        CFI (cfiCond1192) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1193 Using cfiCommon0
        CFI (cfiCond1193) NoFunction
        CFI (cfiCond1193) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_181
        CFI (cfiCond1193) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1193) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1193) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1193) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1193) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1193) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1193) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1193) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1193) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1193) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1193) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1193) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1193) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1193) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1193) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1193) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1193) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1193) CFA_SP SP+0
        CFI (cfiCond1193) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1194 Using cfiCommon0
        CFI (cfiCond1194) NoFunction
        CFI (cfiCond1194) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_182
        CFI (cfiCond1194) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1194) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1194) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1194) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1194) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1194) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1194) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1194) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1194) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1194) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1194) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1194) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1194) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1194) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1194) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1194) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1194) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1194) CFA_SP SP+0
        CFI (cfiCond1194) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1195 Using cfiCommon0
        CFI (cfiCond1195) NoFunction
        CFI (cfiCond1195) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_183
        CFI (cfiCond1195) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1195) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1195) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1195) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1195) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1195) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1195) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1195) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1195) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1195) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1195) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1195) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1195) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1195) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1195) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1195) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1195) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1195) CFA_SP SP+0
        CFI (cfiCond1195) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1196 Using cfiCommon0
        CFI (cfiCond1196) NoFunction
        CFI (cfiCond1196) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_184
        CFI (cfiCond1196) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1196) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1196) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1196) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1196) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1196) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1196) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1196) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1196) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1196) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1196) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1196) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1196) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1196) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1196) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1196) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1196) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1196) CFA_SP SP+0
        CFI (cfiCond1196) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1197 Using cfiCommon0
        CFI (cfiCond1197) NoFunction
        CFI (cfiCond1197) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_185
        CFI (cfiCond1197) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1197) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1197) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1197) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1197) CFA_SP SP+0
        CFI (cfiCond1197) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1198 Using cfiCommon0
        CFI (cfiCond1198) NoFunction
        CFI (cfiCond1198) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_186
        CFI (cfiCond1198) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1198) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1198) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1198) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1198) CFA_SP SP+0
        CFI (cfiCond1198) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1199 Using cfiCommon0
        CFI (cfiCond1199) NoFunction
        CFI (cfiCond1199) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_187
        CFI (cfiCond1199) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1199) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1199) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1199) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1199) CFA_SP SP+0
        CFI (cfiCond1199) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1200 Using cfiCommon0
        CFI (cfiCond1200) NoFunction
        CFI (cfiCond1200) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_198
        CFI (cfiCond1200) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1200) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1200) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1200) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1200) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1200) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1200) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1200) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1200) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1200) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1200) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1200) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1200) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1200) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1200) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1200) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1200) CFA_SP SP+0
        CFI (cfiCond1200) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1201 Using cfiCommon0
        CFI (cfiCond1201) NoFunction
        CFI (cfiCond1201) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_199
        CFI (cfiCond1201) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1201) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1201) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1201) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1201) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1201) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1201) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1201) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1201) CFA_SP SP+0
        CFI (cfiCond1201) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1202 Using cfiCommon0
        CFI (cfiCond1202) NoFunction
        CFI (cfiCond1202) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_200
        CFI (cfiCond1202) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1202) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1202) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1202) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1202) CFA_SP SP+0
        CFI (cfiCond1202) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1203 Using cfiCommon0
        CFI (cfiCond1203) NoFunction
        CFI (cfiCond1203) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_201
        CFI (cfiCond1203) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1203) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1203) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1203) CFA_SP SP+0
        CFI (cfiCond1203) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond1204 Using cfiCommon0
        CFI (cfiCond1204) NoFunction
        CFI (cfiCond1204) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_202
        CFI (cfiCond1204) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1204) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1204) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1204) CFA_SP SP+0
        CFI (cfiCond1204) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond1205 Using cfiCommon0
        CFI (cfiCond1205) NoFunction
        CFI (cfiCond1205) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_203
        CFI (cfiCond1205) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1205) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1205) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1205) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1205) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1205) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1205) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1205) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1205) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1205) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1205) CFA_SP SP+0
        CFI (cfiCond1205) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1206 Using cfiCommon0
        CFI (cfiCond1206) NoFunction
        CFI (cfiCond1206) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_204
        CFI (cfiCond1206) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1206) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1206) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1206) CFA_SP SP+0
        CFI (cfiCond1206) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1207 Using cfiCommon0
        CFI (cfiCond1207) NoFunction
        CFI (cfiCond1207) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_205
        CFI (cfiCond1207) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1207) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1207) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1207) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1207) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1207) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1207) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1207) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1207) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1207) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1207) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1207) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1207) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1207) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1207) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1207) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1207) CFA_SP SP+0
        CFI (cfiCond1207) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1208 Using cfiCommon0
        CFI (cfiCond1208) NoFunction
        CFI (cfiCond1208) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_206
        CFI (cfiCond1208) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1208) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1208) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1208) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1208) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1208) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1208) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1208) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1208) CFA_SP SP+0
        CFI (cfiCond1208) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1209 Using cfiCommon0
        CFI (cfiCond1209) NoFunction
        CFI (cfiCond1209) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_207
        CFI (cfiCond1209) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1209) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1209) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1209) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1209) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1209) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1209) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1209) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1209) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1209) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1209) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1209) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1209) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1209) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1209) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1209) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1209) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1209) CFA_SP SP+0
        CFI (cfiCond1209) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1210 Using cfiCommon0
        CFI (cfiCond1210) NoFunction
        CFI (cfiCond1210) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_208
        CFI (cfiCond1210) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1210) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1210) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1210) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1210) CFA_SP SP+0
        CFI (cfiCond1210) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1211 Using cfiCommon0
        CFI (cfiCond1211) NoFunction
        CFI (cfiCond1211) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_209
        CFI (cfiCond1211) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1211) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1211) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1211) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1211) CFA_SP SP+0
        CFI (cfiCond1211) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1212 Using cfiCommon0
        CFI (cfiCond1212) NoFunction
        CFI (cfiCond1212) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_210
        CFI (cfiCond1212) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1212) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1212) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1212) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1212) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1212) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1212) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1212) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1212) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1212) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1212) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1212) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1212) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1212) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1212) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1212) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1212) CFA_SP SP+0
        CFI (cfiCond1212) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1213 Using cfiCommon0
        CFI (cfiCond1213) NoFunction
        CFI (cfiCond1213) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_211
        CFI (cfiCond1213) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1213) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1213) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1213) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1213) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1213) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1213) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1213) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1213) CFA_SP SP+0
        CFI (cfiCond1213) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1214 Using cfiCommon0
        CFI (cfiCond1214) NoFunction
        CFI (cfiCond1214) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_212
        CFI (cfiCond1214) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1214) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1214) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1214) CFA_SP SP+0
        CFI (cfiCond1214) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1215 Using cfiCommon0
        CFI (cfiCond1215) NoFunction
        CFI (cfiCond1215) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_213
        CFI (cfiCond1215) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1215) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1215) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1215) CFA_SP SP+0
        CFI (cfiCond1215) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1216 Using cfiCommon0
        CFI (cfiCond1216) NoFunction
        CFI (cfiCond1216) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_214
        CFI (cfiCond1216) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1216) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1216) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1216) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1216) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1216) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1216) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1216) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1216) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1216) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1216) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1216) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1216) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1216) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1216) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1216) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1216) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1216) CFA_SP SP+0
        CFI (cfiCond1216) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1217 Using cfiCommon0
        CFI (cfiCond1217) NoFunction
        CFI (cfiCond1217) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_256
        CFI (cfiCond1217) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1217) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1217) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1217) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1217) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1217) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1217) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1217) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1217) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1217) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1217) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1217) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1217) CFA_SP SP+0
        CFI (cfiCond1217) CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond1218 Using cfiCommon0
        CFI (cfiCond1218) NoFunction
        CFI (cfiCond1218) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_257
        CFI (cfiCond1218) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1218) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1218) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1218) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1218) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1218) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1218) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1218) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1218) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1218) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1218) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1218) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1218) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1218) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1218) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1218) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1218) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1218) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1218) CFA_SP SP+0
        CFI (cfiCond1218) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond1219 Using cfiCommon0
        CFI (cfiCond1219) NoFunction
        CFI (cfiCond1219) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_258
        CFI (cfiCond1219) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1219) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1219) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1219) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1219) CFA_SP SP+0
        CFI (cfiCond1219) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1220 Using cfiCommon0
        CFI (cfiCond1220) NoFunction
        CFI (cfiCond1220) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_259
        CFI (cfiCond1220) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1220) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1220) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1220) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1220) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1220) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1220) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1220) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1220) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1220) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1220) CFA_SP SP+0
        CFI (cfiCond1220) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond1221 Using cfiCommon0
        CFI (cfiCond1221) NoFunction
        CFI (cfiCond1221) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_260
        CFI (cfiCond1221) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1221) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1221) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1221) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1221) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1221) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1221) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1221) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1221) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1221) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1221) CFA_SP SP+0
        CFI (cfiCond1221) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond1222 Using cfiCommon0
        CFI (cfiCond1222) NoFunction
        CFI (cfiCond1222) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_18
        CFI (cfiCond1222) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1222) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1222) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1222) CFA_SP SP+0
        CFI (cfiCond1222) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1223 Using cfiCommon0
        CFI (cfiCond1223) NoFunction
        CFI (cfiCond1223) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_19
        CFI (cfiCond1223) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1223) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1223) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1223) CFA_SP SP+0
        CFI (cfiCond1223) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1224 Using cfiCommon0
        CFI (cfiCond1224) NoFunction
        CFI (cfiCond1224) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_25
        CFI (cfiCond1224) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1224) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1224) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1224) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1224) CFA_SP SP+0
        CFI (cfiCond1224) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1225 Using cfiCommon0
        CFI (cfiCond1225) NoFunction
        CFI (cfiCond1225) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_26
        CFI (cfiCond1225) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1225) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1225) CFA_SP SP+-5
        CFI (cfiCond1225) CFA_XSP16 add(XSP16, 1)
        CFI Block cfiCond1226 Using cfiCommon0
        CFI (cfiCond1226) NoFunction
        CFI (cfiCond1226) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_27
        CFI (cfiCond1226) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1226) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1226) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1226) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1226) CFA_SP SP+0
        CFI (cfiCond1226) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond1227 Using cfiCommon0
        CFI (cfiCond1227) NoFunction
        CFI (cfiCond1227) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_0
        CFI (cfiCond1227) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1227) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1227) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1227) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1227) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1227) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1227) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1227) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1227) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1227) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1227) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1227) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1227) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1227) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1227) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1227) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1227) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1227) CFA_SP SP+0
        CFI (cfiCond1227) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1228 Using cfiCommon0
        CFI (cfiCond1228) NoFunction
        CFI (cfiCond1228) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_1
        CFI (cfiCond1228) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1228) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1228) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1228) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1228) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1228) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1228) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1228) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1228) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1228) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1228) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1228) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1228) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1228) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1228) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1228) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1228) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1228) CFA_SP SP+0
        CFI (cfiCond1228) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1229 Using cfiCommon0
        CFI (cfiCond1229) NoFunction
        CFI (cfiCond1229) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_10
        CFI (cfiCond1229) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1229) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1229) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1229) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1229) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1229) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1229) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1229) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1229) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1229) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1229) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1229) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1229) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1229) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1229) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1229) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1229) CFA_SP SP+0
        CFI (cfiCond1229) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1230 Using cfiCommon0
        CFI (cfiCond1230) NoFunction
        CFI (cfiCond1230) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_11
        CFI (cfiCond1230) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1230) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1230) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1230) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1230) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1230) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1230) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1230) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1230) CFA_SP SP+0
        CFI (cfiCond1230) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1231 Using cfiCommon0
        CFI (cfiCond1231) NoFunction
        CFI (cfiCond1231) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_330
        CFI (cfiCond1231) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1231) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1231) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1231) CFA_SP SP+0
        CFI (cfiCond1231) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1232 Using cfiCommon0
        CFI (cfiCond1232) NoFunction
        CFI (cfiCond1232) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_331
        CFI (cfiCond1232) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1232) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1232) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1232) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1232) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1232) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1232) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1232) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1232) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1232) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1232) CFA_SP SP+0
        CFI (cfiCond1232) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond1233 Using cfiCommon0
        CFI (cfiCond1233) NoFunction
        CFI (cfiCond1233) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_321
        CFI (cfiCond1233) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1233) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1233) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1233) CFA_SP SP+0
        CFI (cfiCond1233) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1234 Using cfiCommon0
        CFI (cfiCond1234) NoFunction
        CFI (cfiCond1234) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_322
        CFI (cfiCond1234) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1234) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1234) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1234) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1234) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1234) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1234) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1234) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1234) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1234) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1234) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1234) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1234) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1234) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1234) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1234) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1234) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1234) CFA_SP SP+0
        CFI (cfiCond1234) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1235 Using cfiCommon0
        CFI (cfiCond1235) NoFunction
        CFI (cfiCond1235) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_323
        CFI (cfiCond1235) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1235) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1235) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1235) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1235) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1235) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1235) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1235) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1235) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1235) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1235) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1235) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1235) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1235) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1235) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1235) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1235) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1235) CFA_SP SP+0
        CFI (cfiCond1235) CFA_XSP16 add(XSP16, 47)
        CFI Block cfiCond1236 Using cfiCommon0
        CFI (cfiCond1236) NoFunction
        CFI (cfiCond1236) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_324
        CFI (cfiCond1236) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1236) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1236) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1236) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1236) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1236) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1236) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1236) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1236) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1236) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1236) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1236) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1236) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1236) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1236) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1236) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1236) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1236) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1236) CFA_SP SP+0
        CFI (cfiCond1236) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond1237 Using cfiCommon0
        CFI (cfiCond1237) NoFunction
        CFI (cfiCond1237) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_325
        CFI (cfiCond1237) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1237) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1237) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1237) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1237) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1237) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1237) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1237) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1237) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1237) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1237) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1237) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1237) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1237) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1237) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1237) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1237) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1237) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1237) CFA_SP SP+0
        CFI (cfiCond1237) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond1238 Using cfiCommon0
        CFI (cfiCond1238) NoFunction
        CFI (cfiCond1238) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_326
        CFI (cfiCond1238) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1238) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1238) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1238) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1238) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1238) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1238) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1238) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1238) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1238) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1238) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1238) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1238) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1238) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1238) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1238) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1238) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1238) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1238) CFA_SP SP+0
        CFI (cfiCond1238) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond1239 Using cfiCommon0
        CFI (cfiCond1239) NoFunction
        CFI (cfiCond1239) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_327
        CFI (cfiCond1239) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1239) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1239) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1239) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1239) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1239) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1239) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1239) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1239) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1239) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1239) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1239) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1239) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1239) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1239) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1239) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1239) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1239) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1239) CFA_SP SP+0
        CFI (cfiCond1239) CFA_XSP16 add(XSP16, 179)
        CFI Block cfiCond1240 Using cfiCommon0
        CFI (cfiCond1240) NoFunction
        CFI (cfiCond1240) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_328
        CFI (cfiCond1240) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1240) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1240) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1240) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1240) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1240) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1240) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1240) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1240) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1240) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1240) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1240) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1240) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1240) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1240) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1240) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1240) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1240) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1240) CFA_SP SP+0
        CFI (cfiCond1240) CFA_XSP16 add(XSP16, 183)
        CFI Block cfiCond1241 Using cfiCommon0
        CFI (cfiCond1241) NoFunction
        CFI (cfiCond1241) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_329
        CFI (cfiCond1241) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1241) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1241) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1241) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1241) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1241) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1241) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1241) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1241) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1241) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1241) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1241) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1241) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1241) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1241) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1241) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1241) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1241) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1241) CFA_SP SP+0
        CFI (cfiCond1241) CFA_XSP16 add(XSP16, 187)
        CFI Block cfiPicker1242 Using cfiCommon1
        CFI (cfiPicker1242) NoFunction
        CFI (cfiPicker1242) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
        CFI EndBlock cfiCond1116
        CFI EndBlock cfiCond1117
        CFI EndBlock cfiCond1118
        CFI EndBlock cfiCond1119
        CFI EndBlock cfiCond1120
        CFI EndBlock cfiCond1121
        CFI EndBlock cfiCond1122
        CFI EndBlock cfiCond1123
        CFI EndBlock cfiCond1124
        CFI EndBlock cfiCond1125
        CFI EndBlock cfiCond1126
        CFI EndBlock cfiCond1127
        CFI EndBlock cfiCond1128
        CFI EndBlock cfiCond1129
        CFI EndBlock cfiCond1130
        CFI EndBlock cfiCond1131
        CFI EndBlock cfiCond1132
        CFI EndBlock cfiCond1133
        CFI EndBlock cfiCond1134
        CFI EndBlock cfiCond1135
        CFI EndBlock cfiCond1136
        CFI EndBlock cfiCond1137
        CFI EndBlock cfiCond1138
        CFI EndBlock cfiCond1139
        CFI EndBlock cfiCond1140
        CFI EndBlock cfiCond1141
        CFI EndBlock cfiCond1142
        CFI EndBlock cfiCond1143
        CFI EndBlock cfiCond1144
        CFI EndBlock cfiCond1145
        CFI EndBlock cfiCond1146
        CFI EndBlock cfiCond1147
        CFI EndBlock cfiCond1148
        CFI EndBlock cfiCond1149
        CFI EndBlock cfiCond1150
        CFI EndBlock cfiCond1151
        CFI EndBlock cfiCond1152
        CFI EndBlock cfiCond1153
        CFI EndBlock cfiCond1154
        CFI EndBlock cfiCond1155
        CFI EndBlock cfiCond1156
        CFI EndBlock cfiCond1157
        CFI EndBlock cfiCond1158
        CFI EndBlock cfiCond1159
        CFI EndBlock cfiCond1160
        CFI EndBlock cfiCond1161
        CFI EndBlock cfiCond1162
        CFI EndBlock cfiCond1163
        CFI EndBlock cfiCond1164
        CFI EndBlock cfiCond1165
        CFI EndBlock cfiCond1166
        CFI EndBlock cfiCond1167
        CFI EndBlock cfiCond1168
        CFI EndBlock cfiCond1169
        CFI EndBlock cfiCond1170
        CFI EndBlock cfiCond1171
        CFI EndBlock cfiCond1172
        CFI EndBlock cfiCond1173
        CFI EndBlock cfiCond1174
        CFI EndBlock cfiCond1175
        CFI EndBlock cfiCond1176
        CFI EndBlock cfiCond1177
        CFI EndBlock cfiCond1178
        CFI EndBlock cfiCond1179
        CFI EndBlock cfiCond1180
        CFI EndBlock cfiCond1181
        CFI EndBlock cfiCond1182
        CFI EndBlock cfiCond1183
        CFI EndBlock cfiCond1184
        CFI EndBlock cfiCond1185
        CFI EndBlock cfiCond1186
        CFI EndBlock cfiCond1187
        CFI EndBlock cfiCond1188
        CFI EndBlock cfiCond1189
        CFI EndBlock cfiCond1190
        CFI EndBlock cfiCond1191
        CFI EndBlock cfiCond1192
        CFI EndBlock cfiCond1193
        CFI EndBlock cfiCond1194
        CFI EndBlock cfiCond1195
        CFI EndBlock cfiCond1196
        CFI EndBlock cfiCond1197
        CFI EndBlock cfiCond1198
        CFI EndBlock cfiCond1199
        CFI EndBlock cfiCond1200
        CFI EndBlock cfiCond1201
        CFI EndBlock cfiCond1202
        CFI EndBlock cfiCond1203
        CFI EndBlock cfiCond1204
        CFI EndBlock cfiCond1205
        CFI EndBlock cfiCond1206
        CFI EndBlock cfiCond1207
        CFI EndBlock cfiCond1208
        CFI EndBlock cfiCond1209
        CFI EndBlock cfiCond1210
        CFI EndBlock cfiCond1211
        CFI EndBlock cfiCond1212
        CFI EndBlock cfiCond1213
        CFI EndBlock cfiCond1214
        CFI EndBlock cfiCond1215
        CFI EndBlock cfiCond1216
        CFI EndBlock cfiCond1217
        CFI EndBlock cfiCond1218
        CFI EndBlock cfiCond1219
        CFI EndBlock cfiCond1220
        CFI EndBlock cfiCond1221
        CFI EndBlock cfiCond1222
        CFI EndBlock cfiCond1223
        CFI EndBlock cfiCond1224
        CFI EndBlock cfiCond1225
        CFI EndBlock cfiCond1226
        CFI EndBlock cfiCond1227
        CFI EndBlock cfiCond1228
        CFI EndBlock cfiCond1229
        CFI EndBlock cfiCond1230
        CFI EndBlock cfiCond1231
        CFI EndBlock cfiCond1232
        CFI EndBlock cfiCond1233
        CFI EndBlock cfiCond1234
        CFI EndBlock cfiCond1235
        CFI EndBlock cfiCond1236
        CFI EndBlock cfiCond1237
        CFI EndBlock cfiCond1238
        CFI EndBlock cfiCond1239
        CFI EndBlock cfiCond1240
        CFI EndBlock cfiCond1241
        CFI EndBlock cfiPicker1242

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for st>`:
        DATA16
        DW reg
        DW hw
        DATA8
        DB 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0
        DATA16
        DW test

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for gyro_orientation>`:
        DATA8
        DB 1
        DB 0
        DB 0
        DB 0
        DB 1
        DB 0
        DB 0
        DB 0
        DB 1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??set_int_enable?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    set_int_enable

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_reg_dump?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_reg_dump

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_read_reg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_read_reg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_lp_accel_mode?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_lp_accel_mode

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_gyro_reg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_gyro_reg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_accel_reg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_accel_reg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_temperature?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_temperature

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_accel_bias?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_accel_bias

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_reset_fifo?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_reset_fifo

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_gyro_fsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_gyro_fsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_gyro_fsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_gyro_fsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_accel_fsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_accel_fsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_accel_fsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_accel_fsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_lpf?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_lpf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_lpf?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_lpf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_sample_rate?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_sample_rate

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_sample_rate?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_sample_rate

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_compass_sample_rate?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_compass_sample_rate

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_compass_sample_rate?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_compass_sample_rate

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_gyro_sens?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_gyro_sens

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_accel_sens?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_accel_sens

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_fifo_config?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_fifo_config

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_configure_fifo?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_configure_fifo

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_power_state?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_power_state

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_sensors?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_sensors

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_int_status?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_int_status

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_read_fifo?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_read_fifo

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_read_fifo_stream?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_read_fifo_stream

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_bypass?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_bypass

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_int_level?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_int_level

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_int_latched?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_int_latched

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??get_accel_prod_shift?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    get_accel_prod_shift

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??accel_self_test?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    accel_self_test

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??gyro_self_test?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    gyro_self_test

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??get_st_biases?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    get_st_biases

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_run_self_test?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_run_self_test

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_write_mem?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_write_mem

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_read_mem?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_read_mem

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_load_firmware?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_load_firmware

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_dmp_state?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_dmp_state

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_dmp_state?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_dmp_state

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??setup_compass?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    setup_compass

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_compass_reg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_compass_reg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_compass_fsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_compass_fsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_lp_motion_interrupt?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_lp_motion_interrupt

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??run_self_test?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    run_self_test

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??inv_orientation_matrix_to_scalar?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    inv_orientation_matrix_to_scalar

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??inv_row_2_scale?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    inv_row_2_scale

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mget_ms?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mget_ms

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_dmp_init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_dmp_init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_dmp_get_data?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_dmp_get_data

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "%#5x: %#5x\\r\\n">`:
        DB "%#5x: %#5x\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Unsupported software ...">`:
        DB "Unsupported software product rev %d.\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Product ID read as 0 ...">`:
        DB 50H, 72H, 6FH, 64H, 75H, 63H, 74H, 20H
        DB 49H, 44H, 20H, 72H, 65H, 61H, 64H, 20H
        DB 61H, 73H, 20H, 30H, 20H, 69H, 6EH, 64H
        DB 69H, 63H, 61H, 74H, 65H, 73H, 20H, 64H
        DB 65H, 76H, 69H, 63H, 65H, 20H, 69H, 73H
        DB 20H, 65H, 69H, 74H, 68H, 65H, 72H, 20H
        DB 69H, 6EH, 63H, 6FH, 6DH, 70H, 61H, 74H
        DB 69H, 62H, 6CH, 65H, 20H, 6FH, 72H, 20H
        DB 61H, 6EH, 20H, 4DH, 50H, 55H, 33H, 30H
        DB 35H, 30H, 2EH, 0AH, 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Half sensitivity part...">`:
        DB "Half sensitivity part found.\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {0}>`:
        DB 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "%f,%f,%f,%f:%f,%f,%f.\\r\\n">`:
        DB "%f,%f,%f,%f:%f,%f,%f.\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_420c0000:
        DD 420C0000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_47800000:
        DD 47800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_43030000:
        DD 43030000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_42830000:
        DD 42830000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_42033333:
        DD 42033333H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_41833333:
        DD 41833333H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_0:
        DD 0H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3eae147b:
        DD 3EAE147BH

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3f845a1d:
        DD 3F845A1DH

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_37800000:
        DD 37800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_bf800000:
        DD 0BF800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3e99999a:
        DD 3E99999AH

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3f733334:
        DD 3F733334H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_41c80000:
        DD 41C80000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3f85e354:
        DD 3F85E354H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_41200000:
        DD 41200000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_42d20001:
        DD 42D20001H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_83:
        DD 131

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_1:
        DD 1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_ffff0000:
        DD -65536

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_10000:
        DD 65536

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_30800000:
        DD 30800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_40000000:
        DD 40000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_c0000000:
        DD 0C0000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_42653333:
        DD 42653333H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3f800000:
        DD 3F800000H

        END
// 3019 
// 
// 10 524 bytes in segment BANKED_CODE
//    312 bytes in segment BANK_RELAYS
//     44 bytes in segment XDATA_I
//     44 bytes in segment XDATA_ID
//    462 bytes in segment XDATA_ROM_C
// 
// 10 880 bytes of CODE  memory
//    358 bytes of CONST memory (+ 104 bytes shared)
//     44 bytes of XDATA memory
//
//Errors: none
//Warnings: 4
